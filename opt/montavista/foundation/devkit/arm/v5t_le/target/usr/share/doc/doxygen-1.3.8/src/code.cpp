#define yy_create_buffer codeYY_create_buffer
#define yy_delete_buffer codeYY_delete_buffer
#define yy_scan_buffer codeYY_scan_buffer
#define yy_scan_string codeYY_scan_string
#define yy_scan_bytes codeYY_scan_bytes
#define yy_flex_debug codeYY_flex_debug
#define yy_init_buffer codeYY_init_buffer
#define yy_flush_buffer codeYY_flush_buffer
#define yy_load_buffer_state codeYY_load_buffer_state
#define yy_switch_to_buffer codeYY_switch_to_buffer
#define yyin codeYYin
#define yyleng codeYYleng
#define yylex codeYYlex
#define yyout codeYYout
#define yyrestart codeYYrestart
#define yytext codeYYtext

/* A lexical scanner generated by flex */

/* Scanner skeleton version:
 * $Header: /home/daffy/u0/vern/flex/RCS/flex.skl,v 2.91 96/09/10 16:58:48 vern Exp $
 */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5

#include <stdio.h>


/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
#ifdef c_plusplus
#ifndef __cplusplus
#define __cplusplus
#endif
#endif


#ifdef __cplusplus

#include <stdlib.h>
#include <unistd.h>

/* Use prototypes in function declarations. */
#define YY_USE_PROTOS

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_PROTOS
#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef __TURBOC__
 #pragma warn -rch
 #pragma warn -use
#include <io.h>
#include <stdlib.h>
#define YY_USE_CONST
#define YY_USE_PROTOS
#endif

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif


#ifdef YY_USE_PROTOS
#define YY_PROTO(proto) proto
#else
#define YY_PROTO(proto) ()
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#define YY_BUF_SIZE 262144

typedef struct yy_buffer_state *YY_BUFFER_STATE;

extern int yyleng;
extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

/* The funky do-while in the following #define is used to turn the definition
 * int a single C statement (which needs a semi-colon terminator).  This
 * avoids problems with code like:
 *
 * 	if ( condition_holds )
 *		yyless( 5 );
 *	else
 *		do_something_else();
 *
 * Prior to using the do-while the compiler would get upset at the
 * "else" because it interpreted the "if" statement as being all
 * done when it reached the ';' after the yyless() call.
 */

/* Return all but the first 'n' matched characters back to the input stream. */

#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		*yy_cp = yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yytext_ptr )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */
typedef unsigned int yy_size_t;


struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;
#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2
	};

static YY_BUFFER_STATE yy_current_buffer = 0;

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 */
#define YY_CURRENT_BUFFER yy_current_buffer


/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;

static int yy_n_chars;		/* number of characters read into yy_ch_buf */


int yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart YY_PROTO(( FILE *input_file ));

void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
void yy_load_buffer_state YY_PROTO(( void ));
YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
#define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )

YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));

static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t ));
static void yy_flex_free YY_PROTO(( void * ));

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (yy_current_buffer->yy_at_bol)


#define YY_USES_REJECT

#define yywrap() 1
#define YY_SKIP_YYWRAP
typedef unsigned char YY_CHAR;
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
typedef int yy_state_type;
extern char *yytext;
#define yytext_ptr yytext

static yy_state_type yy_get_previous_state YY_PROTO(( void ));
static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
static int yy_get_next_buffer YY_PROTO(( void ));
static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yy_c_buf_p = yy_cp;

#define YY_NUM_RULES 160
#define YY_END_OF_BUFFER 161
static yyconst short int yy_acclist[4253] =
    {   0,
       67,   67,  111,  111,   91,   91,  161,  159,  160,  158,
      160,    1,  159,  160,  156,  159,  160,  157,  159,  160,
      159,  160,  159,  160,  159,  160,  159,  160,   67,  159,
      160,   69,  159,  160,   67,  156,  159,  160,   67,  157,
      159,  160,   67,  159,  160,   67,  159,  160,  159,  160,
       67,  159,  160,   67,  159,  160,   71,   74,  159,  160,
       75,  158,  160,    1,   71,   74,  159,  160,   73,   74,
      159,  160,   71,   74,  156,  159,  160,   71,   74,  157,
      159,  160,   71,   74,  159,  160,   71,   74,  159,  160,
       71,   74,  159,  160,   71,   74,  159,  160,   20,  159,

      160,  158,  160,    1,   20,  159,  160,   20,  156,  159,
      160,   20,  157,  159,  160,   20,  159,  160,   20,  159,
      160,   20,  159,  160,   20,  159,  160,   20,  159,  160,
      129,  159,  160,  129,  159,  160,    1,  129,  159,  160,
      129,  156,  159,  160,  129,  157,  159,  160,  159,  160,
      159,  160,  129,  159,  160,  129,  159,  160,  159,  160,
      131,  134,  159,  160,  133,  158,  160,    1,  132,  134,
      159,  160,  131,  134,  156,  159,  160,  131,  134,  157,
      159,  160,  131,  134,  159,  160,  131,  134,  159,  160,
      131,  134,  159,  160,  131,  134,  159,  160,  138,  141,

      159,  160,  140,  158,  160,    1,  138,  141,  159,  160,
      138,  141,  156,  159,  160,  138,  141,  157,  159,  160,
      141,  159,  160,  138,  141,  159,  160,  138,  141,  159,
      160,  138,  141,  159,  160,  138,  141,  159,  160,  159,
      160,  158,  160,    1,  159,  160,   56,  159,  160,   66,
      159,  160,  159,  160,  159,  160,  156,  159,  160,   56,
      157,  159,  160,    7,   56,  159,  160,   85,  159,  160,
        7,   56,  159,  160,   81,  159,  160,   56,  159,  160,
      102,  159,  160,   76,  159,  160,   77,  159,  160,   78,
      159,  160,  159,  160, 8255,  159,  160,16447,16449, 8255,

      159,  160,16447,16449, 8255,  159,  160,16447,16449,  101,
      159,  160, 8255,  159,  160,16447,16449, 8255,  159,  160,
    16447,16449, 8255,  159,  160,16447,16449, 8255,  159,  160,
    16447,16449, 8255,  159,  160,16447,16449, 8255,  159,  160,
    16447,16449, 8255,  159,  160,16447,16449, 8255,  159,  160,
    16447,16449, 8255,  159,  160,16447,16449, 8255,  159,  160,
    16447,16449, 8255,  159,  160,16447,16449, 8255,  159,  160,
    16447,16449, 8255,  159,  160,16447,16449, 8255,  159,  160,
    16447,16449, 8255,  159,  160,16447,16449, 8255,  159,  160,
    16447,16449, 8255,  159,  160,16447,16449, 8255,  159,  160,

    16447,16449, 8255,  159,  160,16447,16449,   24,  159,  160,
       25,  159,  160,   56,  159,  160,  159,  160,   19,  159,
      160,   56,  159,  160,  109,  156,  159,  160,  110,  157,
      159,  160,  108,  159,  160,  107,  159,  160,16506,  107,
      159,  160,16506,  107,  159,  160,16506,  107,  159,  160,
    16506,  107,  159,  160,16506,  107,  159,  160,16506,  107,
      159,  160,16506,  107,  159,  160,16506,  107,  159,  160,
    16506,  107,  159,  160,16506,  107,  159,  160,16506,  107,
      159,  160,16506,  107,  159,  160,16506,  107,  159,  160,
    16506,  107,  159,  160,16506,  107,  159,  160,16506,  107,

      159,  160,16506,  107,  159,  160,16506,  107,  159,  160,
    16506,  107,  159,  160,16506,  107,  159,  160,16506,  107,
      159,  160,16506,   84,  159,  160,   84,  159,  160,  158,
      160,    1,   84,  159,  160,   66,   84,  159,  160,   84,
      159,  160,   84,  159,  160,   84,  157,  159,  160,   84,
      159,  160,   84,  159,  160,   84,  159,  160, 8275,  159,
      160,16466,16467,   25,   84,  159,  160,   84,  159,  160,
       84,  159,  160,   84,  159,  160,  159,  160,  126,  159,
      160,  107,  159,  160,16508,16509,  107,  159,  160,16508,
    16509,  107,  159,  160,16508,16509,  107,  159,  160,16508,

    16509,  107,  159,  160,16508,16509,  107,  159,  160,16508,
    16509,  107,  159,  160,16508,16509,  107,  159,  160,16508,
    16509,  107,  159,  160,16508,16509,  107,  159,  160,16508,
    16509,  107,  159,  160,16508,16509,  107,  159,  160,16508,
    16509,  107,  159,  160,16508,16509,  107,  159,  160,16508,
    16509,  107,  159,  160,16508,16509,  107,  159,  160,16508,
    16509,  107,  159,  160,16508,16509,  107,  159,  160,16508,
    16509,  107,  159,  160,16508,16509,  107,  159,  160,16508,
    16509,  107,  159,  160,16508,16509,  107,  159,  160,16508,
    16509,  159,  160,  118,  159,  160,  120,  159,  160,  119,

      159,  160,  159,  160,  158,  160,  159,  160,   28,  159,
      160,   34,  159,  160,   27,  159,  160,   29,  159,  160,
       36,  159,  160,  159,  160,  159,  160,  159,  160,   35,
      159,  160,   30,  159,  160,  159,  160,    6,  158,  160,
      159,  160,    7,  159,  160,   31,  159,  160,  159,  160,
       33,  159,  160,   33,  159,  160,   33,  159,  160,  159,
      160,  159,  160,   43,  156,  159,  160,   46,  159,  160,
       39,  159,  160,   40,  159,  160,  159,  160,   38,  159,
      160,   38,  159,  160,   38,  159,  160,  159,  160,   44,
      156,  159,  160,   45,  157,  159,  160,   41,  159,  160,

       42,  159,  160,  159,  160,16402,    1,  159,  160,16402,
      156,  159,  160,16402,  157,  159,  160,16402,  159,  160,
    16402,  159,  160,16402,  159,  160,16402,  159,  160,16402,
       60,  159,  160,   61,  159,  160,  159,  160,  159,  160,
      159,  160,  159,  160,  159,  160,  159,  160,  159,  160,
      159,  160,  159,  160,  159,  160,  159,  160,  159,  160,
      117,  159,  160,  111,  117,  159,  160,  111,  158,  160,
        1,  117,  159,  160,  117,  159,  160,  117,  156,  159,
      160,  117,  157,  159,  160,  117,  159,  160,  112,  117,
      159,  160,  117,  159,  160,  114,  117,  159,  160,  114,

      117,  159,  160,  113,  117,  159,  160,  111,  117,  159,
      160,  117,  159,  160,   16,  159,  160,   17,  158,  160,
        1,   16,  159,  160,   16,  156,  159,  160,   16,  157,
      159,  160,   16,  159,  160,    8,   16,  159,  160,   10,
       16,  159,  160,   16,  159,  160,   16,  159,  160,   16,
      159,  160,   16,  159,  160,   16,  159,  160,   16,  159,
      160,   16,  159,  160,   16,  159,  160,   16,  159,  160,
       16,  159,  160,   16,  159,  160,   16,  159,  160,   16,
      159,  160,   16,  159,  160,   16,  159,  160,    9,   16,
      156,  159,  160,   15,   16,  159,  160,   16,  159,  160,

       14,   16,  157,  159,  160,   13,   16,  159,  160,   13,
       16,  159,  160,   13,   16,  159,  160,   13,   16,  159,
      160,   13,   16,  159,  160,   13,   16,  159,  160,   13,
       16,  159,  160,   13,   16,  159,  160,   13,   16,  159,
      160,   13,   16,  159,  160,   13,   16,  159,  160,   13,
       16,  159,  160,   99,  159,  160,  100,  158,  160,    1,
       99,  159,  160,   95,   99,  159,  160,   96,   99,  159,
      160,   99,  159,  160,   97,   99,  156,  159,  160,   98,
       99,  157,  159,  160,   99,  159,  160,   99,  159,  160,
       88,   99,  159,  160,   86,   99,  159,  160,   87,   99,

      159,  160,   99,  159,  160,   99,  159,  160,   96,   99,
      159,  160,   99,  159,  160,16473,16474,   91,   99,  159,
      160,    1,   91,   99,  159,  160,   93,   99,  159,  160,
       96,   99,  159,  160,   91,   99,  156,  159,  160,   91,
       99,  157,  159,  160,   91,   99,  159,  160,   91,   99,
      159,  160,   99,  159,  160,   91,   99,  159,  160,   91,
       99,  159,  160,  159,  160,  158,  160,    1,  159,  160,
      159,  160,  116,  159,  160,  115,  159,  160,  115,  159,
      160,  115,  159,  160,  115,  159,  160,  115,  159,  160,
      115,  159,  160,  115,  159,  160,  115,  159,  160,  115,

      159,  160,  115,  159,  160,  115,  159,  160,  115,  159,
      160,  113,  159,  160,  159,  160,  153,  155,  154,  153,
      155,   67,   67,   68,  153,   67,   68,  155,   69,  154,
       70,   67,   67,   67,   68,  153,   67,   68,  155,   71,
       72,   71,  153,   71,  155,   71,   71,   71,  153,   71,
      155,   22,   23,  155,   21,   23,  155,  129,  129,  130,
      128,  153,  128,  155,  129,  154,  129,  128,  153,  128,
      155,  131,  131,  153,  131,  155,  131,  154,  131,  131,
      131,  153,  131,  155,  138,  137,  139,  153,  138,  139,
      155,  138,  154,  138,  138,  139,  153,  138,  139,  155,

     8255,16447,16449, 8255,16447,16449,   81,  102, 8255, 8257,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8246,
     8255,16438,16439,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8249, 8255,16441,16447,16449,
     8246, 8255,16438,16439,16447,16449, 8255,16447,16449, 8255,

    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
       19,  121, 8314,  107,16506,  107,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,

      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506, 8275,16466,
    16467, 8275, 8274, 8275,16466,16467, 8275,16466,16467,  126,

     8316, 8317,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,

    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  120,  120,
       34,   36,   29,   28,   34,   29,   36,   35,   30,   30,
       33,   33,   33,   33,   38,   38,   38,   38,   38,16402,
     8210,  153,16402,  155,16402, 8210,  154,16402,16402,  153,
    16402,  155,16402, 8249,16441,  111,  113,  111,  114,  114,

      114,  111,   15,   15,   11,   13,   13,   13,   13,   13,
       13,   13,   12,   13,   13,   13,   13,   13,   13,   13,
       13,   88,   95,  154,   88,16473,16474,16473,16474, 8282,
     8281,   91,   91,  153,   91,  155,   92,   91,   91,   91,
      153,   91,  155,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   71,   71,
       71,   71,   71,   71,   71,   71,   71,   71,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  136,  138,
      138,  138,  138, 8255,16447, 8255,16447,16449, 8255,16447,

       79,   79, 8256,16448,  103, 8254,16446, 8255,16447,16449,
     8255,16447,16449, 8243, 8255,16435,16436,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449,   53,
       53, 8246, 8255,   53,   53, 8247, 8257,   53,   53, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8249, 8255, 8255,16447,16449, 8255,16447,16449,

     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,

     8255,16447,16449,  107,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      106,  106,  106,  121,  106,  106, 8314,  106,  107,  106,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  105,  105,  105,  121,  105,  105, 8314,  105,
      107,  105,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,

      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
     8275,16467, 8275,16467, 8275, 8275,16466,16467,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  106,  106,  106,
     8316,  106,  106, 8317,  107,16508,16509,  107,16508,16509,

      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  105,  105,  105,
     8316,  105,  105, 8317,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,

      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,   30,   33,   33,   38,
       38,   38,   38,16402,16402,16402,16402,16402,16402,16402,
    16402,16402,16402, 8249,  114,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   94,   91,   91,   91,   91,
       91,   91,   91,   91,   91,   91,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  151,  152,  148,
      150,  151,  146,  147,  148,   67,  151,   67,   67,  152,

       67,   67,   67,   67,  150,  151,   67,  146,   67,   67,
       71,  151,   71,   71,  152,   71,   71,   71,   71,  150,
      151,   71,  146,   71,   71,  127,  152,  131,  151,  131,
      131,  152,  131,  131,  131,  131,  150,  151,  131,  146,
      131,  131,  136,  138,  138,  138,  138, 8255, 8255,16447,
     8255,16447,16449, 8255, 8255,16447, 8256,   26, 8254,16446,
     8255,16447,16449, 8254, 8255,16447,16449, 8255,16447,16449,
       50,   50, 8243, 8255,   50,   50, 8244, 8257,   50,   50,
     8249, 8255,16441,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,

     8255,16447,16449, 8255,16447,16449, 8246, 8255, 8247, 8257,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8243, 8255,16435,16436,16447,16449,

     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
    16507,  107,16506,  107,16506,  104,  104,  104,  121,  104,
      104, 8314,  104,  107,  104,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506,  107,16506,  107,16506,  107,

    16506,  107,16506,  107,16506,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506, 8275, 8275,16467, 8275, 8275,
    16467,  107,16508,16509,  107,16508,16509,  104,  104,  104,
     8316,  104,  104, 8317,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,

    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,   29,
       30,   33,   33,   38,   38,   38,   38,  151,16402, 8210,

      151,16402,  152,16402,16402, 8210,16402,16402,  150,  151,
    16402, 8210,  150,  151,  146,16402,16402, 8210,16402, 8249,
    16441,  114,   12,   13,   13,   13,   13,   13,   13,   13,
       94,   91,  151,   91,   91,  152,   91,   91,   91,   91,
      150,  151,   91,  146,   91,   91,  115,  115,  115,  115,
      115,  115,  115,  115,  149,  144,  142,  150,  147,  145,
       67,  150,   67,   67,   71,  150,   71,   71,  149,   22,
      149,  144,   22,  142,  131,  150,  131,  131,  138,  138,
     8255,16447,16449, 8254, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8243, 8255, 8244, 8257, 8255,16447,16449,

     8243, 8255,16435,16436,16447,16449, 8243, 8255,16435,16436,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449,   50, 8246, 8255,16438,16439,16447,16449,

     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449,16507, 8315,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,

      107,16506,  107,16506,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,

      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,   29,   33,   33,   38,   38,   38,   38,  150,16402,
     8210,  150,16402, 8210,16402, 8210,   59,  114,   13,   13,
       13,   13,   13,   91,  150,   91,   91,  115,  115,  115,
      115,  115,  115,  143,   22,  143, 8255,16447,16449,16449,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
        4,   50, 8243, 8255,    4,   50, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,

     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8243, 8255,16435,16436,16447,
    16449, 8255,16447,16449, 8255,16447,16449,   80, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449,  107,
    16506,  107,16506,  107,16506,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506,  107,16506,  107,16506,16466,

      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,   33,   33,   38,   38,   37,
       38,   38,  114,   13,   13,   13,  115,  115,  115,  115,
      135, 8255,16447,16449,16449,16449,16449, 8255,16447,16449,

     8255,16447,16449,    4, 8243, 8255,    4, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,16466,16466,  107,16508,16509,  107,

    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
       32,   33,   33,   37,   38,  114,   13,  115,  115,  136,
     8255,16447,16449,16449,16449, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449, 8255,16447,16449, 8243, 8255,16435,
    16436,16447,16449,    5, 8255,    5, 8255,16447,16449, 8255,
    16447,16449, 8255,16447,16449, 8255,16447,16449, 8243, 8255,

    16435,16436,16447,16449, 8255,16447,16449,    2,  107,16506,
      107,16506,  107,16506,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16506,16466,  107,16508,16509,
      107,16508,16509,  107,16508,16509,  107,16508,16509,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,   33,   38,  114,  115, 8255,16447,
    16449,16449, 8255,16447,16449, 8255,16447,16449, 8255,16447,
    16449,   50,   50, 8243, 8255,   50,   50, 8244, 8257, 8255,
    16447,16449,   50,   50, 8255,16447,16449, 8255,16447,16449,
     8255,16447,16449,   49,   50,   49,   50, 8243, 8255,   49,

       50,   49,   50, 8244, 8257,   49,   50,   49,   50,   49,
     8255,16447,16449,  107,16506,  107,16506,  107,16506,  107,
    16506,  107,16506,  107,16506,  107,16508,16509,  107,16508,
    16509,  107,16508,16509,  107,16508,16509,  107,16508,16509,
      107,16508,16509,   33,   49,  114,  115,    3, 8255,16447,
    16449,16449, 8255,16447,16449, 8255,16447,16449,   48, 8243,
     8255,   48, 8244, 8257, 8255,   48, 8257,   48, 8254,16446,
     8255,16447,16449, 8255,16447,16449, 8255,16447,16449, 8243,
     8255,   58, 8254,16446,  107,16506,  107,16506,  107,16506,
      107,16506,  107,16506,  107,16508,16509,  107,16508,16509,

      107,16508,16509,  107,16508,16509,  107,16508,16509,  115,
     8255,16447,16449,16449, 8255,16447,16449, 8255,16447,16449,
     8254,16446,   47, 8255,16447,16449, 8255,16447,16449, 8254,
     8255,16447,16449, 8255,16447,16449,   58, 8254,16446,   58,
     8254,  107,16506,  107,16506,  107,16506,  107,16506,  107,
    16508,16509,  107,16508,16509,  107,16508,16509,  107,16508,
    16509, 8255, 8257,16449, 8254, 8255,16447,16449, 8255,16447,
    16449, 8255,16447,16449,   58, 8254,  107,16506,  107,16508,
    16509,   48, 8257,16449, 8255,16447, 8255,16447,16449, 8255,
     8255,16447,16449,16449,16449, 8255,16447,16449,  107,16506,

      107,16508,16509,16449, 8255, 8255,16447, 8255,16447, 8255,
    16447,16449,16449,16449, 8255,16447,16449,  107,16506,  107,
    16508,16509, 8255, 8255,16447, 8255,16447,16449,16449,16449,
     8255,16447,16449,  107,16506,  107,16508,16509, 8255,16447,
    16449,16449, 8255,16447,16449,16449, 8255,16447,16449,16449,
    16449,16449
    } ;

static yyconst short int yy_accept[2183] =
    {   0,
        1,    1,    1,    2,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    4,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    6,    7,    7,    7,    8,   10,   12,
       15,   18,   21,   23,   25,   27,   29,   32,   35,   39,
       43,   46,   49,   51,   54,   57,   61,   64,   69,   73,
       78,   83,   87,   91,   95,   99,  102,  104,  108,  112,
      116,  119,  122,  125,  128,  131,  134,  137,  141,  145,

      149,  151,  153,  156,  159,  161,  165,  168,  173,  178,
      183,  187,  191,  195,  199,  203,  206,  211,  216,  221,
      224,  228,  232,  236,  240,  242,  244,  247,  250,  253,
      255,  257,  260,  264,  268,  271,  275,  278,  281,  284,
      287,  290,  293,  295,  300,  305,  310,  313,  318,  323,
      328,  333,  338,  343,  348,  353,  358,  363,  368,  373,
      378,  383,  388,  393,  398,  403,  408,  411,  414,  417,
      419,  422,  425,  429,  433,  436,  440,  444,  448,  452,
      456,  460,  464,  468,  472,  476,  480,  484,  488,  492,
      496,  500,  504,  508,  512,  516,  520,  524,  527,  530,

      532,  536,  540,  543,  546,  550,  553,  556,  559,  564,
      568,  571,  574,  577,  579,  582,  587,  592,  597,  602,
      607,  612,  617,  622,  627,  632,  637,  642,  647,  652,
      657,  662,  667,  672,  677,  682,  687,  692,  694,  697,
      700,  703,  705,  707,  709,  712,  715,  718,  721,  724,
      726,  728,  730,  733,  736,  738,  741,  743,  746,  749,
      751,  754,  757,  760,  762,  764,  768,  771,  774,  777,
      779,  782,  785,  788,  790,  794,  798,  801,  804,  807,
      811,  815,  819,  822,  825,  828,  831,  834,  837,  839,
      841,  843,  845,  847,  849,  851,  853,  855,  857,  859,

      861,  864,  868,  871,  875,  878,  882,  886,  889,  893,
      896,  900,  904,  908,  912,  915,  918,  921,  925,  929,
      933,  936,  940,  944,  947,  950,  953,  956,  959,  962,
      965,  968,  971,  974,  977,  980,  983,  986,  989,  994,
      998, 1001, 1006, 1010, 1014, 1018, 1022, 1026, 1030, 1034,
     1038, 1042, 1046, 1050, 1054, 1057, 1060, 1064, 1068, 1072,
     1075, 1080, 1085, 1088, 1091, 1095, 1099, 1103, 1106, 1109,
     1113, 1118, 1122, 1127, 1131, 1135, 1140, 1145, 1149, 1153,
     1156, 1160, 1164, 1166, 1168, 1171, 1173, 1176, 1179, 1182,
     1185, 1188, 1191, 1194, 1197, 1200, 1203, 1206, 1209, 1212,

     1215, 1217, 1217, 1217, 1218, 1219, 1220, 1220, 1220, 1221,
     1222, 1223, 1226, 1229, 1231, 1232, 1233, 1234, 1237, 1240,
     1241, 1242, 1244, 1246, 1247, 1248, 1250, 1252, 1252, 1252,
     1253, 1253, 1255, 1256, 1256, 1258, 1259, 1260, 1260, 1261,
     1263, 1265, 1267, 1268, 1270, 1272, 1273, 1275, 1277, 1279,
     1280, 1281, 1283, 1285, 1286, 1287, 1289, 1292, 1294, 1295,
     1296, 1298, 1301, 1301, 1301, 1301, 1301, 1304, 1307, 1307,
     1307, 1307, 1307, 1307, 1308, 1309, 1309, 1309, 1309, 1309,
     1309, 1310, 1310, 1311, 1314, 1314, 1314, 1317, 1320, 1323,
     1326, 1329, 1332, 1335, 1338, 1341, 1344, 1347, 1350, 1356,

     1359, 1362, 1365, 1368, 1371, 1374, 1377, 1380, 1383, 1386,
     1391, 1397, 1400, 1403, 1406, 1409, 1412, 1415, 1418, 1421,
     1424, 1427, 1430, 1433, 1436, 1439, 1442, 1445, 1448, 1451,
     1454, 1457, 1460, 1463, 1466, 1469, 1472, 1475, 1478, 1478,
     1478, 1481, 1481, 1482, 1482, 1482, 1482, 1482, 1482, 1483,
     1483, 1484, 1486, 1487, 1487, 1489, 1491, 1493, 1495, 1497,
     1499, 1501, 1503, 1505, 1507, 1509, 1511, 1513, 1515, 1517,
     1519, 1521, 1523, 1525, 1527, 1529, 1531, 1533, 1535, 1537,
     1539, 1541, 1543, 1545, 1547, 1549, 1551, 1553, 1555, 1557,
     1559, 1561, 1563, 1565, 1567, 1569, 1571, 1573, 1575, 1577,

     1579, 1581, 1583, 1585, 1587, 1589, 1589, 1589, 1589, 1589,
     1592, 1592, 1592, 1593, 1593, 1594, 1597, 1597, 1597, 1597,
     1597, 1600, 1600, 1601, 1601, 1601, 1602, 1602, 1603, 1606,
     1609, 1612, 1615, 1618, 1621, 1624, 1627, 1630, 1633, 1636,
     1639, 1642, 1645, 1648, 1651, 1654, 1657, 1660, 1663, 1666,
     1669, 1672, 1675, 1678, 1681, 1684, 1687, 1690, 1693, 1696,
     1699, 1702, 1705, 1708, 1711, 1714, 1717, 1720, 1723, 1726,
     1729, 1732, 1735, 1738, 1741, 1744, 1747, 1750, 1753, 1756,
     1759, 1760, 1761, 1761, 1761, 1762, 1763, 1763, 1764, 1765,
     1766, 1767, 1767, 1768, 1768, 1768, 1769, 1770, 1770, 1771,

     1771, 1772, 1773, 1774, 1775, 1775, 1776, 1776, 1777, 1778,
     1779, 1780, 1780, 1781, 1782, 1784, 1786, 1788, 1789, 1790,
     1792, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1796, 1796,
     1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1797, 1797,
     1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1804, 1805,
     1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816,
     1817, 1818, 1819, 1820, 1821, 1822, 1823, 1823, 1823, 1825,
     1826, 1828, 1828, 1830, 1831, 1832, 1833, 1835, 1837, 1838,
     1839, 1840, 1842, 1844, 1844, 1845, 1846, 1847, 1848, 1849,
     1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,

     1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
     1859, 1859, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
     1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
     1877, 1878, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1880,
     1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1889,
     1890, 1891, 1892, 1893, 1894, 1896, 1899, 1899, 1899, 1901,
     1902, 1903, 1903, 1903, 1903, 1903, 1905, 1905, 1905, 1905,
     1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906, 1906,
     1906, 1908, 1911, 1914, 1920, 1923, 1926, 1929, 1932, 1935,
     1938, 1941, 1944, 1947, 1950, 1951, 1954, 1955, 1958, 1959,

     1960, 1963, 1966, 1969, 1972, 1975, 1978, 1981, 1984, 1987,
     1990, 1993, 1995, 1998, 2001, 2004, 2007, 2010, 2013, 2016,
     2019, 2022, 2025, 2028, 2031, 2034, 2037, 2040, 2043, 2046,
     2049, 2052, 2055, 2058, 2061, 2064, 2067, 2070, 2073, 2076,
     2079, 2082, 2085, 2088, 2091, 2094, 2097, 2100, 2101, 2104,
     2104, 2104, 2104, 2104, 2104, 2105, 2107, 2109, 2111, 2113,
     2115, 2117, 2119, 2121, 2123, 2125, 2127, 2129, 2131, 2132,
     2133, 2135, 2136, 2138, 2140, 2141, 2143, 2145, 2147, 2149,
     2151, 2153, 2155, 2157, 2159, 2161, 2163, 2164, 2165, 2167,
     2168, 2170, 2172, 2173, 2175, 2177, 2179, 2181, 2183, 2185,

     2187, 2189, 2191, 2193, 2195, 2197, 2199, 2201, 2203, 2205,
     2207, 2209, 2211, 2213, 2215, 2217, 2219, 2221, 2223, 2225,
     2227, 2229, 2231, 2233, 2235, 2237, 2239, 2241, 2243, 2243,
     2243, 2245, 2245, 2245, 2245, 2245, 2246, 2249, 2252, 2255,
     2258, 2261, 2264, 2267, 2270, 2273, 2276, 2279, 2282, 2285,
     2288, 2289, 2290, 2292, 2293, 2295, 2298, 2301, 2304, 2307,
     2310, 2313, 2316, 2319, 2322, 2325, 2328, 2329, 2330, 2332,
     2333, 2335, 2338, 2341, 2344, 2347, 2350, 2353, 2356, 2359,
     2362, 2365, 2368, 2371, 2374, 2377, 2380, 2383, 2386, 2389,
     2392, 2395, 2398, 2401, 2404, 2407, 2410, 2413, 2416, 2419,

     2422, 2425, 2428, 2431, 2434, 2437, 2437, 2437, 2438, 2439,
     2440, 2440, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
     2448, 2449, 2450, 2451, 2452, 2453, 2454, 2454, 2454, 2454,
     2454, 2454, 2455, 2455, 2455, 2455, 2455, 2455, 2455, 2455,
     2455, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
     2464, 2465, 2466, 2466, 2467, 2467, 2467, 2468, 2469, 2470,
     2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
     2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2488, 2488,
     2488, 2488, 2489, 2489, 2490, 2490, 2491, 2491, 2491, 2493,
     2494, 2494, 2496, 2496, 2498, 2499, 2501, 2502, 2503, 2504,

     2507, 2509, 2510, 2511, 2513, 2514, 2516, 2517, 2518, 2519,
     2522, 2524, 2525, 2526, 2526, 2526, 2526, 2526, 2526, 2528,
     2530, 2531, 2533, 2534, 2535, 2536, 2539, 2541, 2542, 2543,
     2543, 2544, 2544, 2545, 2546, 2547, 2548, 2549, 2551, 2554,
     2555, 2557, 2557, 2557, 2558, 2558, 2558, 2558, 2558, 2558,
     2558, 2558, 2559, 2559, 2559, 2559, 2561, 2561, 2561, 2564,
     2564, 2564, 2565, 2565, 2565, 2568, 2571, 2572, 2575, 2576,
     2579, 2580, 2581, 2586, 2589, 2592, 2595, 2598, 2601, 2604,
     2607, 2609, 2611, 2614, 2617, 2620, 2623, 2626, 2629, 2632,
     2635, 2638, 2641, 2644, 2647, 2650, 2653, 2656, 2659, 2662,

     2665, 2668, 2671, 2674, 2677, 2680, 2683, 2686, 2689, 2692,
     2695, 2701, 2704, 2707, 2710, 2713, 2716, 2719, 2722, 2725,
     2728, 2731, 2731, 2731, 2731, 2732, 2732, 2734, 2736, 2737,
     2738, 2740, 2741, 2743, 2745, 2746, 2748, 2750, 2752, 2754,
     2756, 2758, 2760, 2762, 2764, 2766, 2768, 2770, 2772, 2774,
     2776, 2778, 2780, 2782, 2784, 2786, 2788, 2790, 2792, 2794,
     2796, 2798, 2800, 2802, 2804, 2806, 2808, 2810, 2812, 2814,
     2816, 2818, 2820, 2822, 2824, 2826, 2828, 2830, 2832, 2834,
     2836, 2837, 2839, 2840, 2842, 2842, 2842, 2842, 2842, 2842,
     2845, 2848, 2849, 2850, 2852, 2853, 2855, 2858, 2861, 2864,

     2867, 2870, 2873, 2876, 2879, 2882, 2885, 2888, 2891, 2894,
     2897, 2900, 2903, 2906, 2909, 2912, 2915, 2918, 2921, 2924,
     2927, 2930, 2933, 2936, 2939, 2942, 2945, 2948, 2951, 2954,
     2957, 2960, 2963, 2966, 2969, 2972, 2975, 2978, 2981, 2984,
     2987, 2990, 2990, 2991, 2992, 2993, 2994, 2994, 2994, 2994,
     2995, 2996, 2997, 2998, 3000, 3002, 3003, 3005, 3006, 3007,
     3008, 3009, 3012, 3015, 3017, 3018, 3019, 3020, 3022, 3022,
     3022, 3022, 3022, 3022, 3022, 3022, 3022, 3022, 3022, 3023,
     3025, 3026, 3027, 3028, 3029, 3030, 3031, 3031, 3032, 3032,
     3034, 3035, 3037, 3038, 3039, 3040, 3043, 3045, 3046, 3047,

     3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057,
     3057, 3058, 3058, 3059, 3059, 3060, 3060, 3061, 3063, 3064,
     3065, 3067, 3068, 3069, 3070, 3072, 3073, 3073, 3075, 3075,
     3077, 3078, 3079, 3079, 3079, 3080, 3081, 3084, 3084, 3084,
     3084, 3084, 3084, 3084, 3085, 3088, 3088, 3091, 3094, 3096,
     3098, 3101, 3107, 3113, 3116, 3119, 3122, 3125, 3128, 3131,
     3134, 3137, 3140, 3143, 3146, 3149, 3152, 3155, 3158, 3161,
     3164, 3167, 3170, 3173, 3176, 3179, 3182, 3185, 3188, 3191,
     3194, 3195, 3201, 3204, 3207, 3210, 3213, 3216, 3219, 3222,
     3225, 3225, 3225, 3226, 3226, 3227, 3229, 3231, 3233, 3235,

     3237, 3239, 3241, 3243, 3245, 3247, 3249, 3251, 3253, 3255,
     3257, 3259, 3261, 3263, 3265, 3267, 3269, 3271, 3273, 3275,
     3277, 3279, 3281, 3283, 3285, 3287, 3289, 3291, 3293, 3295,
     3297, 3299, 3301, 3303, 3305, 3305, 3308, 3311, 3314, 3317,
     3320, 3323, 3326, 3329, 3332, 3335, 3338, 3341, 3344, 3347,
     3350, 3353, 3356, 3359, 3362, 3365, 3368, 3371, 3374, 3377,
     3380, 3383, 3386, 3389, 3392, 3395, 3398, 3401, 3404, 3407,
     3410, 3413, 3416, 3419, 3422, 3423, 3424, 3425, 3425, 3425,
     3425, 3426, 3427, 3428, 3429, 3431, 3433, 3434, 3435, 3436,
     3437, 3437, 3438, 3438, 3438, 3438, 3438, 3438, 3438, 3438,

     3439, 3440, 3441, 3442, 3443, 3444, 3444, 3444, 3446, 3447,
     3448, 3449, 3450, 3451, 3452, 3453, 3454, 3454, 3454, 3454,
     3455, 3455, 3457, 3457, 3457, 3457, 3457, 3457, 3457, 3457,
     3460, 3460, 3460, 3461, 3462, 3462, 3465, 3468, 3471, 3475,
     3477, 3480, 3483, 3486, 3489, 3492, 3495, 3498, 3501, 3504,
     3507, 3510, 3513, 3516, 3522, 3525, 3528, 3529, 3532, 3535,
     3538, 3541, 3544, 3547, 3550, 3550, 3550, 3552, 3554, 3556,
     3558, 3560, 3562, 3564, 3566, 3568, 3570, 3572, 3574, 3576,
     3578, 3580, 3582, 3584, 3586, 3588, 3590, 3592, 3594, 3596,
     3598, 3600, 3600, 3600, 3601, 3601, 3604, 3607, 3610, 3613,

     3616, 3619, 3622, 3625, 3628, 3631, 3634, 3637, 3640, 3643,
     3646, 3649, 3652, 3655, 3658, 3661, 3664, 3667, 3670, 3673,
     3676, 3677, 3678, 3678, 3678, 3678, 3679, 3680, 3682, 3683,
     3683, 3683, 3683, 3683, 3683, 3683, 3684, 3685, 3686, 3687,
     3688, 3689, 3690, 3691, 3691, 3692, 3692, 3692, 3692, 3692,
     3692, 3695, 3695, 3696, 3696, 3697, 3697, 3697, 3698, 3701,
     3704, 3707, 3708, 3711, 3714, 3717, 3720, 3723, 3726, 3729,
     3732, 3735, 3738, 3741, 3744, 3747, 3750, 3753, 3756, 3759,
     3759, 3759, 3761, 3763, 3765, 3767, 3769, 3771, 3773, 3775,
     3777, 3779, 3781, 3783, 3785, 3787, 3789, 3791, 3793, 3795,

     3795, 3796, 3796, 3796, 3797, 3800, 3803, 3806, 3809, 3812,
     3815, 3818, 3821, 3824, 3827, 3830, 3833, 3836, 3839, 3842,
     3845, 3848, 3851, 3853, 3854, 3854, 3854, 3855, 3856, 3856,
     3856, 3856, 3856, 3856, 3857, 3858, 3859, 3860, 3860, 3860,
     3861, 3861, 3861, 3861, 3864, 3865, 3865, 3866, 3869, 3872,
     3875, 3878, 3884, 3886, 3887, 3890, 3893, 3896, 3899, 3905,
     3908, 3908, 3909, 3911, 3913, 3915, 3917, 3919, 3921, 3923,
     3925, 3927, 3927, 3928, 3931, 3934, 3937, 3940, 3943, 3946,
     3949, 3952, 3955, 3956, 3956, 3957, 3957, 3957, 3958, 3959,
     3959, 3959, 3959, 3959, 3959, 3962, 3963, 3966, 3969, 3972,

     3973, 3976, 3977, 3980, 3983, 3984, 3985, 3988, 3991, 3994,
     3996, 4000, 4002, 4006, 4008, 4010, 4014, 4016, 4018, 4020,
     4022, 4024, 4026, 4029, 4032, 4035, 4038, 4041, 4044, 4045,
     4045, 4046, 4046, 4047, 4048, 4048, 4048, 4049, 4052, 4053,
     4056, 4059, 4059, 4060, 4062, 4062, 4065, 4065, 4065, 4065,
     4066, 4068, 4068, 4068, 4068, 4069, 4069, 4069, 4071, 4074,
     4077, 4080, 4082, 4082, 4082, 4082, 4085, 4087, 4089, 4091,
     4093, 4095, 4098, 4101, 4104, 4107, 4110, 4110, 4111, 4111,
     4114, 4115, 4118, 4121, 4123, 4123, 4124, 4124, 4124, 4124,
     4127, 4130, 4130, 4130, 4131, 4131, 4131, 4134, 4137, 4140,

     4142, 4144, 4146, 4148, 4150, 4153, 4156, 4159, 4162, 4162,
     4162, 4163, 4164, 4165, 4166, 4166, 4169, 4169, 4169, 4172,
     4172, 4175, 4177, 4179, 4182, 4182, 4182, 4184, 4185, 4185,
     4185, 4187, 4187, 4190, 4191, 4194, 4194, 4194, 4195, 4196,
     4196, 4199, 4201, 4204, 4204, 4204, 4204, 4205, 4205, 4206,
     4206, 4208, 4208, 4208, 4210, 4213, 4213, 4214, 4214, 4214,
     4215, 4218, 4220, 4223, 4224, 4226, 4229, 4230, 4230, 4231,
     4234, 4236, 4239, 4242, 4243, 4246, 4247, 4250, 4251, 4252,
     4253, 4253
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    4,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   22,
       22,   22,   22,   22,   22,   23,   23,   24,   25,   26,
       27,   28,    1,   29,   30,   31,   32,   33,   34,   30,
       35,   35,   35,   36,   37,   38,   35,   35,   39,   35,
       35,   40,   41,   35,   35,   35,   42,   43,   44,   35,
       45,   46,   47,    1,   48,    1,   49,   50,   51,   52,

       53,   54,   55,   56,   57,   35,   58,   59,   60,   61,
       62,   63,   35,   64,   65,   66,   67,   68,   69,   70,
       71,   72,   73,   10,   74,   75,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yyconst int yy_meta[76] =
    {   0,
        1,    2,    3,    4,    5,    1,    6,    1,    7,    1,
        1,    8,    9,   10,   11,    1,    1,   12,   13,   14,
       15,   15,   15,   16,    1,   17,    1,    1,    1,   18,
       18,   18,   18,   18,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,    1,   20,   21,   22,   18,   18,
       18,   18,   18,   18,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   23,   24,   25
    } ;

static yyconst short int yy_base[2483] =
    {   0,
        0,    3,    8,   31,   36,   59,   54,   82,  101,  105,
      109,  137,  132,  160,  140,  174,  203,   22,  278,   50,
      353,   73,  428,  165,  503,  166,  578,  179,  653,  727,
      747,  821,  841,  915,  918,  923,  950,  969,  996,  928,
     1065,  940, 1138, 1210, 1283,  957, 1358,  964, 1433,  983,
     1508,  985, 1014, 1141, 1583,  991, 6007,22026,  999,22026,
    22026,22026,   11, 5979, 1010,   26,    0,22026,    0,    0,
       33, 5966,    0, 1024,   56,    0, 1031,    0, 5964,    0,
        0,   74, 5963, 1036,   77,22026, 1037,22026,22026,22026,
      111, 5943,    6, 1151,  112,    0,  728,    0,    0,    0,

     5917,  175, 5922, 1163,  176,    0, 1155,22026,    0,    0,
      177, 5906, 1164,  178,    0, 1171,    0,    0,    0, 5891,
      716, 5901, 1180,  719, 1214, 1223, 1250,22026,22026, 1657,
     5858,  822,22026,22026,22026, 5875,22026,  720, 1642, 5878,
    22026,22026, 1179, 1665, 1669, 1694,22026, 1711, 1206, 1677,
     1681, 1688, 1707, 1131, 1723, 1179,  874, 1627, 1637, 1730,
      941, 1736, 1756,  900, 1183, 1731,22026,22026,  826, 1811,
     1703,  722,  953,22026,22026, 1820, 1824, 1847, 1851, 1818,
     1837, 1838, 1847, 1870, 1700, 1780, 1848, 1215, 1873, 1809,
     1878, 1883, 1896, 1904, 1905, 1923, 1874,22026, 1974, 1979,

     1989,22026, 2002, 5828,22026,  726, 5849, 5863, 2012,22026,
     2018, 2026,  818, 5835,22026, 2030, 2039, 2057, 2066, 2032,
     2039, 2050, 2059, 2073, 2043, 2089, 2086, 1945, 2108, 2097,
     2102, 2115, 2121, 2141, 2134, 2152, 2160,    0,22026,    0,
    22026, 2218, 1887,    0,  122,   96,22026, 5836,  153, 2226,
     1197,    0,22026, 5834, 1681, 2231,    0,22026,22026,  149,
        0, 5781, 5783, 1199,    0,22026,22026,22026,22026,   18,
        0,  772, 5774, 2198,22026,22026,22026,22026,   52,   62,
      912,  974, 1702,  979, 2233, 2046,22026,22026, 5791, 5761,
      936, 5752, 5744,   30, 5738,   92,  129, 5736, 5716, 5717,

    22026, 2254, 2260, 2264,    0,22026,22026,  903,22026, 5760,
        0, 5700,22026, 2270,  914,22026, 1261,22026,22026,22026,
      960,22026,22026, 5754, 5721, 5678, 5675, 5668, 5668,  773,
     5659,  688, 5653, 5634, 5644, 1954, 1034,    0,22026, 1984,
        0,22026,    0, 5650, 5613, 5615, 5603, 5605, 1197, 5601,
      957, 5597, 5592, 5600,22026, 2035,22026,22026,    0, 5594,
    22026,22026, 1144, 5631,    0,22026,22026, 2202, 1157,    0,
     2279,    0,    0,22026,22026,    0,    0, 1664, 5627,    0,
     2274, 1725, 2283, 2293, 2304,    0,22026,    0, 5599, 5570,
     5567, 5560, 5562, 1658, 5556,  975, 5553, 5542, 5550,22026,

     2320, 2299, 1739, 1785, 1039,22026, 2312, 1748, 2096, 1779,
        0, 1848, 1174,22026,22026, 2326, 1842, 2113, 2058,    0,
    22026, 1981, 1705, 2333, 1864, 2164, 2310, 5596, 2345,22026,
     2229, 1798,22026, 5591, 2339,    0, 2287, 5573,22026, 1994,
     1804,    0, 2347, 2345, 2352,    0, 2140, 1938,    0, 2359,
     1982, 2363, 2367,    0, 2380, 2157, 2066,    0, 2384, 2004,
     2369, 2370, 2398, 5559, 2403,    0, 2407, 2411, 2436, 5569,
     2164, 2427, 2444,22026, 2429,    0, 2452, 5515, 1148, 5511,
     2460, 2476,22026, 2485, 5550, 2478, 2499, 2511, 2527, 2542,
     2554, 2559, 2571, 2585, 2603, 2610, 2636, 2640, 2699, 2669,

     2729, 2734, 2765, 2779, 2783, 2795, 2665, 2809, 2813, 2838,
     5499, 2843, 2850, 2868, 2884, 2898, 2910, 2915, 2940, 2952,
     2957, 2969, 2182, 2364, 2158, 2484, 2188, 2571, 2544, 2591,
     2931, 2620, 2428, 2263, 2599, 2693, 2624, 2630, 2856, 2928,
     2469, 3008, 2386, 2464, 1160, 2503, 2505, 2392,22026, 5536,
    22026, 2738, 2577, 5534, 3018, 3028, 3046, 3055, 3073, 3082,
     3100, 3112, 3130, 3145, 3157, 3180, 3239, 3209, 3269, 3278,
     3298, 3313, 3323, 3333, 3361, 3373, 3388, 3454, 5488, 3413,
     3484, 3493, 3422, 3513, 3533, 3184, 3542, 3551, 3569, 2768,
     2930, 2738, 2841, 2825, 2838, 2983, 2883, 2951, 3014, 3028,

     3001, 3160, 3150, 3085, 3041, 3163, 5510, 3274,    0, 3581,
     3118, 3587, 3610, 3305,22026, 3614, 5504, 5495, 3227, 3351,
     2423, 3418,22026, 3626, 3431,22026, 5493,22026, 3645, 3654,
     3663, 3681, 3690, 3708, 3717, 3735, 3763, 3767, 3793, 3819,
     3828, 3887, 3848, 3857, 3918, 3945, 3954, 3963, 3981, 3999,
     4026, 4035, 4101, 5449, 4068, 4131, 4140, 4072, 4160, 4180,
     4189, 4209, 4227, 4254, 3264, 3343, 3310, 3347, 3135, 3430,
     3543, 3235, 4203, 3353, 3459, 3479, 3692, 3594, 3707, 3510,
        0,    0, 3672, 3518, 2591, 2352, 3853, 5487, 1840, 2628,
     5468, 5465, 2617, 3925, 3132,22026, 5468, 5476, 5451, 3795,

        0,    0, 5403, 5402, 2873,    0, 2594,    0, 1977, 5413,
     5394, 3737, 1203,22026, 2920, 3626,22026, 3502, 3697, 3534,
     3798, 5401, 5371, 5353, 5345, 5325, 5322, 2774, 5313, 5312,
     5310, 5313, 5292, 5281, 5269, 5276, 5275, 3936, 4062, 5261,
    22026, 4214,    0,    0, 5258, 4221, 3150, 3338, 3950,22026,
        0,    0, 5269, 5243, 5254, 5233, 5236,    0, 5230, 5221,
     5213, 5219, 5208, 5206, 5195,    0, 5236, 1873,22026,    0,
     4031, 4259, 4286,22026,22026,    0, 2183, 2107,22026, 2999,
     2232, 2571, 2800, 4234,    0,    0, 5208, 5173, 5177, 5158,
     5141, 4333, 5129, 5124, 5122, 5125, 5098, 1090, 5099, 4293,

     2748, 3083, 5139, 2321, 5146, 3388, 3423, 5129, 2455, 2071,
     5132, 2204, 4012, 4366, 3216, 3591, 3552, 4368, 4389, 2496,
     3748, 2544, 4069, 4297, 1944, 3673, 3772, 4311, 4312, 2647,
     2044, 2776, 4166, 4148, 5105, 2502, 5103, 2545, 4185, 4395,
       15, 3700, 3819, 4398, 4413, 2810, 2948, 2916, 3270, 3368,
     1726, 4040, 2297, 3036, 4417, 4421, 3988, 4319, 3186,22026,
     5094, 4415, 4446, 4460, 4472, 3048, 5070, 4486, 4464,    0,
     4509, 5040, 5027, 5018, 5003, 5033, 4520, 3795, 5029, 5023,
     4532, 4536, 4550, 4616, 4584, 4588, 4646, 4651, 4679, 4683,
     4695, 4709, 4713, 4739,22026, 4746, 4752,22026, 5023, 4710,

     4764, 4776, 4791, 4803, 4807, 4819, 4833, 4845, 4851, 4877,
     4882, 4907, 4911, 4923, 4937, 4951, 4955, 4980, 4985, 4992,
     5010, 5022, 5026, 5051, 5065, 5069, 5083, 5095, 5100, 5112,
     5126, 5138, 5155, 5170, 5184, 5196, 5210, 5214, 5226, 5240,
     5252, 5257, 5282, 5286, 5311, 5317, 5323, 4242, 4279, 4975,
     4986, 3863, 4362, 5005,22026, 5327, 5337, 5403, 5362, 4546,
     5352, 5372, 5433, 5442, 5462, 5477, 5489, 5507,22026, 4135,
    22026, 5004,22026, 4277, 4989, 5527, 5539, 5554, 5566, 5584,
     5593, 5611, 5623, 5643, 5655, 5675,22026, 4363,22026, 4975,
    22026, 4385, 4974, 5685, 5700, 5710, 5720, 5730, 5740, 5758,

     5768, 5783, 5793, 5803, 5828, 5843, 5853, 5863, 5881, 5896,
     5914, 5923, 5941, 5950, 5959, 5977, 5986, 6004, 6014, 6024,
     6047, 6051, 6074, 6083, 6092, 6101, 6119, 4837, 4564, 4664,
     3488, 4967, 5495, 4973, 5017, 4001, 4372, 6144, 6153, 6219,
     6178, 6182, 6249, 6258, 6278, 6304, 6313, 6322, 6331, 6340,
     6358, 4886,22026, 4924,22026, 6387, 6396, 6405, 6414, 6423,
     6441, 6459, 6484, 6488, 6516, 6525, 6450, 6543,22026, 4918,
    22026, 6552, 6570, 6579, 6597, 6606, 6626, 6638, 6658, 6667,
     6676, 6694, 6712, 6732, 6741, 6759, 6771, 6789, 6809, 6827,
     6839, 6859, 6868, 6886, 6895, 6913, 6925, 6950, 6962, 6980,

     6989, 6998, 7018, 7027, 7055, 4936,    0, 4919, 4879, 4864,
     2718, 4868, 4839, 4836, 4824, 4812, 5162, 5624, 3193, 4424,
     4473, 5663, 5829, 3968, 3341, 4725, 4808, 4798, 4795, 4802,
     4779, 3620, 4764, 4754, 4752, 4740, 4748, 4740, 4739, 4738,
     4724, 4724, 4712, 4700, 4696, 4696, 4672, 4661, 4659, 4637,
     4641, 4630, 4666,22026, 4662, 3896, 4591, 5380, 4437, 3834,
     4279, 5515, 6119, 3055, 4496, 3072, 4606, 4575, 4588, 4554,
     4530, 4515, 4514, 4500, 4491, 4483, 4482,    0, 3087, 4523,
     3099,22026, 4484,22026, 4495,22026,    0, 4489,22026,22026,
     4479,22026, 4468,    0, 4422,    0, 4512, 6366, 5055,    0,

        0, 5130, 5265,    0, 4385,    0, 2531, 4914, 2681,    0,
        0, 2758, 2829, 3787, 3948, 4392, 4097, 4364,22026,    0,
     4362,    0, 3257, 5107, 3575,    0,    0, 3633, 3638, 4077,
     4525, 2979, 2539, 2632, 2787, 2960, 6149, 6284, 7059, 4578,
     4756, 5729,    0, 3726, 5545, 5469, 6845, 7084, 6207, 6633,
     7107,22026, 4304, 4303, 4289, 3924, 7130, 7138, 7147, 6766,
     5438, 5835, 5888, 4330, 7161, 7165,22026, 7191, 6254,22026,
     4306, 5761, 7217, 7221, 7233, 7247, 7251, 7278, 7282, 7294,
     7319,22026, 7324, 7349, 7353, 7365, 7382, 7394, 7398, 7410,
     7428, 7435, 7453, 7465, 7471, 7497, 7502, 7509, 7514, 7539,

     7551, 7555, 7581, 7585, 7597, 7611, 7626, 7638, 7652, 7667,
     7726, 7679, 7693, 7757, 4619, 4679, 4813, 5180, 5530, 5240,
     4649, 4267, 4266, 4389, 5061, 4492, 6703, 7761,22026, 4871,
    22026, 4288,22026, 4917, 4274, 7825, 7789, 6534, 7793, 7855,
     7878, 7697, 7888, 7906, 7915, 7924, 7942, 7954, 7969, 7984,
     7996, 8011, 8021, 8036, 8046, 8061, 8071, 8089, 8099, 8114,
     8126, 8141, 8156, 8171, 8183, 8201, 8210, 8228, 8238, 8258,
     8267, 8285, 8294, 4988, 5150, 5598, 5548, 5869, 5453, 5941,
     6663, 6814, 3941, 4395, 7773, 8319, 6968, 6955, 4277, 8335,
     8339, 8364, 6561,22026, 4265,22026, 8403, 8433, 8442, 8462,

     8373, 8482, 8491, 8500, 8518, 8527, 8552, 8570, 8579, 8588,
     8597, 8617, 8626, 8635, 8653, 8662, 8680, 8689, 8707, 8732,
     8744, 8762, 8774, 8792, 8801, 8821, 8846, 8850, 8876, 8894,
     8906, 8933, 8942, 8951, 5109, 5763, 5823, 5984, 5887, 5923,
     6002,    0, 4262, 4257, 4214, 4212, 4182, 4182, 4184, 4182,
     4168, 4152, 4136, 2335,22026, 3361, 2977, 4023, 4177, 5903,
     4543, 3027,22026, 3054, 4574, 4164, 4823, 4781, 4095, 4097,
     4086, 4075, 4086, 4073, 4063, 4068, 4058, 4034, 4029, 4040,
     4029, 4002, 3996, 3996, 3965, 3946, 3983,22026, 4035,    0,
     3968,    0, 4606, 7194, 5390,    0,    0, 6071, 6196, 9012,

     3920, 3911, 3904, 3900, 3880, 3859, 3860,22026,22026, 3916,
     4452, 3907,22026, 3883,22026, 3882,22026,    0, 6477, 6513,
        0, 2918, 3018, 3881,22026, 3876, 3868, 4946, 3861,    0,
     3687, 3720, 4181, 3828, 3000, 3024, 8969, 9086, 9094, 9117,
     3791, 3772, 3741, 4427, 9130, 7263, 9142, 9160, 7862,22026,
     9172, 9221, 5143, 9251, 9258, 9284, 9296, 9321, 9328, 9356,
     9363, 9381, 9388, 9406, 9418, 9435, 9453, 9465, 9491, 9508,
     9520, 9545, 9549, 9575, 9579, 9604, 9611, 9636, 9640, 9665,
     3771, 9714, 9744, 9682, 9751, 9778, 9795, 9812, 9829, 9841,
     3713, 3708, 5275, 3743,22026, 9855, 9864, 9891, 9940, 9901,

     9192, 9971, 9999, 9338,10003,10029,10044,10054,10069,10079,
    10089,10099,10122,10131,10140,10149,10174,10184,10194,10204,
    10224,10236,10254,10263,10272,10327,10357,10380,10298,10392,
    10410,10419,10437,10457, 7709,10477,10495,10507,10556,10527,
    10587,10614,10623,10632,10659,10668,10688,10700,10718,10730,
    10750,10759,10777,10797,10809,10827,10839,10859,10871,10898,
    10916,10925,10945,10957,10984,11033,11063,11091,11004,11100,
    11109,11127,11145,11170, 3743, 3708, 3684, 3684, 3665, 3640,
     3619, 3619, 3610, 3606, 3477,22026, 4971, 3640, 5164, 3627,
     3572,22026, 3557, 3556, 3531, 3499, 3472, 3465, 3428, 3435,

     3428, 3422, 3401, 3390, 3399, 3433, 3416,    0, 6292, 6388,
     3334, 3324, 3306, 3289, 3276, 3279, 5680, 3300, 3302,22026,
     3286,22026,    0, 3710, 3761, 3253, 3209, 3184, 3174,11177,
     8769, 8558, 9677,10364, 7092,11195,11207,10594,11233, 7023,
    11247,11251,11276,11283,11301,11319,11326,11344,11361,11378,
    11395,11420,11424,11488,11461,11454,22026,11524,11541,11566,
    11570,11595,11607,11625, 3147, 3128,11634,10768,11221,10886,
    11657,11666,11675,11684,11693,11716,11725,11743,11734,11766,
    11775,11839,11807,11811,11870,11784,11898,11902,11925,11935,
    11955, 8883, 9197,11962, 7337,11980,11998,12007,12027,12039,

    12057,12069,12089,12098,12116,12134,12154,12166,12184,12196,
    12260,12221,12225,12291,12319,12323,12348,12352,12379,12391,
     3068, 3063, 3038, 3039, 3037, 3023, 2997,    0, 2986, 2968,
     2911, 2909, 2914, 2819, 7115, 2771, 2763, 2718, 2675, 2661,
     2645, 2633, 2610, 2729,22026, 2610, 4655, 2538, 2532, 2509,
    12416, 8719,12420, 2508,12445, 7440, 7478, 4594,12449,12475,
    12479, 7153,12504,12508,12533,12545,12562,12574,12591,12603,
    12621,12628,12646,12658,12675,12700,12707,12732,12739, 4960,
     2475,12749,12764,12776,12791,12803,12821,12830,12848,12858,
    12873,12883,12901,12916,12931,12943,12961,12970,12993, 8976,

    12997, 8132, 8330, 5432,13013,13025,13045,13054,13063,13090,
    13099,13117,13129,13149,13161,13181,13190,13199,13217,13235,
    13244,13253,    0, 2465, 2424, 2394,22026, 2391, 2381, 2364,
     2343, 7545, 2318, 2317, 2258, 2241, 2217, 2240, 5451, 5808,
     2165, 2145, 2124,13271,13278, 5684, 5883,13296,13308,13325,
    13342,13395,13354, 7423,13469,13473,13498,13502,13559,13527,
     6162,22026,13590,13531,13617,13626,13635,13658,13662,13688,
    13697, 5995, 6131,13715,13724,13733,13753,13762,13789,13798,
    13807,13816, 2115, 2106, 2082,    0, 2055, 7819, 8545, 6079,
     2092, 2014, 2014, 5534,13841,13597,13359,13853,13871, 2032,

    13883, 8981, 2004,13920,  159, 6922,13888,13950,13957,22026,
    13975, 7683,22026, 1977, 7052,13987,14001,14021,14031,14041,
    14051,14066,14086,14095,14121,14130,14139,14166, 1899, 1879,
    22026, 1872, 1799, 1774, 2862, 1762, 5788,14173,14198,14203,
    14210, 1757,22026,14228, 9978, 1737, 1804, 5938, 6349,14242,
    22026,14243,14317,14386, 1693, 7554, 7849,10302,14405,14417,
    14443,14274, 1662, 7214, 1660, 8438,14267,14460,14431,14475,
    14485,14503,14529,14541,14559,14571, 1609, 1217, 1193, 6370,
    14596,14608,14625, 6599, 6696,22026,    0,10449, 1854,    0,
     1194,14691,10975,10991,11536, 3171,14642,14765, 4454, 8468,

    14651,14769,14779,14794,14806,14826,14838,14856, 1180, 1117,
    14863, 1044,14891, 6791,14955,  999,    0, 8750,15030,15105,
    14896, 4515,14900,15179,  976,  958,  942,15230,    0,10034,
    15305,15380,  776, 7288,    0,    0, 9424, 6796, 6821,15455,
    15529,15533,15561,  779,  677,11877, 6904, 9245,14926,11967,
        0,    0, 8912,15610,  152,14930, 7256,    0, 9102,15685,
    15759,15543,15763, 7620,    0,   93, 7661, 7298,    0,15788,
    15792,15817,   62, 7331,   53, 8056, 7359, 8031, 7791,   34,
    22026,15883,15908,15933,15958,15983,16008,16033,16058,16083,
    16108,16133,16158,16183,16208,16233,16258,16283,16307,16332,

    16356,16377,16398,16419,16443,16464,16485, 4874,16493, 5340,
    16501, 5688,16511, 5698,16519, 5996,16527,16549, 6171,16560,
     6195,16581, 6231,16589, 6477,16611,16622, 6636,16643,16665,
    16690, 6730,16701,16723,16748,16773,16798,16823,16848, 6781,
    16872,16893,16915,16939, 4992,16964,16988,17009,17030,17051,
    17072,17094, 7016,17118,17139,17161,17185,17206,17227,17235,
    17243,17253,17269,17277,17285,17307,17318,17339,17347,17355,
    17377,17402,17426,17448,17459,17481,17506,17531,17556,17581,
    17606,17631,17656,17681,17706,17731,17756,17781,17806,17831,
    17856,17881,17906,17931,17956,17981,18006,18031,18055,18076,

    18097,18118,18139,18163,18187, 5206,18208,18233,18257,18282,
    18307,18331,18352,18373,18395,18419,18440,18461,18482,18503,
    18524,18548,18573,18597,18618,18634, 7030,18644,18652,18660,
    18682,18707,18732,18757,18782,18793,18801,18823,18848,18873,
    18898,18923,18948,18959,18981,19006,19031,19056,19081,19106,
    19131,19156,19181,19206,19231,19256,19281,19306,19331,19356,
    19381,19406,19431,19456,19481,19506,19531,19556,19581,19606,
    19631,19656,19681,19706,19731,19756,19780,19801,19822, 7081,
    19843,19867,19888,19912,19936,19958,19982,20003,20024,20046,
    20070,20091,20112,20136,20157, 7126,20165,20175,20183,20191,

    20213,20238,20263,20288,20313,20338,20363,20388,20399,20407,
    20429,20454,20479,20504,20529,20554,20579,20590,20612,20637,
    20662,20687,20712,20737,20762,20787,20812,20837,20862,20887,
    20912,20937,20962,20987,21012,21037,21061,21082,21106,21130,
    21154,21178,21199,21223,21231,21239,21247,21269,21294,21319,
    21344,21369,21380,21388,21410,21435,21460,21471,21493,21518,
    21543,21567,21591,21612,21633,21654,21678,21699,21720,21728,
    21736,21758,21782,21803,21825,21850,21875,21900,21925,21950,
    21975,22000
    } ;

static yyconst short int yy_def[2483] =
    {   0,
     2182, 2182, 2183, 2183, 2184, 2184, 2185, 2185, 2186, 2186,
     2187, 2187, 2188, 2188, 2182, 2182, 2181,   17, 2181,   19,
     2181,   21, 2181,   23, 2181,   25, 2181,   27, 2181,   29,
     2181,   31, 2181,   33, 2182, 2182, 2189, 2189, 2182,   39,
     2181,   41, 2190, 2190, 2181,   45, 2181,   47, 2181,   49,
     2181,   51, 2191, 2191, 2181,   55, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2192, 2181, 2192, 2192,
     2192, 2192, 2193, 2192, 2192, 2194, 2181, 2194, 2181, 2194,
     2194, 2194, 2194, 2194, 2194, 2181, 2195, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2196, 2196, 2196, 2196, 2196,

     2181, 2181, 2196, 2196, 2181, 2197, 2181, 2181, 2197, 2197,
     2197, 2197, 2197, 2197, 2198, 2181, 2198, 2198, 2198, 2181,
     2198, 2198, 2198, 2198, 2181, 2181, 2181, 2181, 2181, 2199,
     2200, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2201, 2201, 2201, 2181, 2201,  148,  148,
      148,  148,  148,  148,  148,  148,  148,  148,  148,  148,
      148,  148,  148,  148,  148,  148, 2181, 2181, 2202, 2181,
     2181, 2181, 2181, 2181, 2181, 2203, 2203, 2203, 2203,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179, 2181, 2181, 2181,

     2181, 2181, 2204, 2200, 2181, 2181, 2181, 2181, 2205, 2181,
     2206, 2181, 2181, 2181, 2181, 2207, 2207, 2207, 2207,  219,
      219,  219,  219,  219,  219,  219,  219,  219,  219,  219,
      219,  219,  219,  219,  219,  219,  219, 2208, 2181, 2209,
     2181, 2181, 2181, 2210, 2181, 2181, 2181, 2211, 2181, 2181,
     2181, 2212, 2181, 2213, 2181, 2181, 2214, 2181, 2181, 2181,
     2215, 2215, 2215, 2181, 2216, 2181, 2181, 2181, 2181, 2181,
     2217, 2217, 2217, 2181, 2181, 2181, 2181, 2181, 2218, 2218,
     2218, 2218, 2218, 2218, 2218, 2218, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,

     2181, 2181, 2181, 2181, 2219, 2181, 2181, 2181, 2181, 2181,
     2220, 2220, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2221, 2181, 2222,
     2223, 2181, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224,
     2224, 2224, 2224, 2224, 2181, 2181, 2181, 2181, 2225, 2226,
     2181, 2181, 2181, 2181, 2227, 2181, 2181, 2181, 2181, 2228,
     2229, 2230, 2230, 2181, 2181, 2230, 2230, 2230, 2230, 2231,
     2230, 2230, 2181, 2181, 2181, 2232, 2181, 2233, 2233, 2233,
     2233, 2233, 2233, 2233, 2233, 2233, 2233, 2233, 2233, 2181,

     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2234, 2234, 2234, 2181, 2181, 2234, 2234, 2234, 2234, 2235,
     2181, 2235, 2235, 2235, 2235, 2235, 2235, 2236, 2236, 2181,
     2236, 2181, 2181, 2181, 2181, 2237, 2237, 2181, 2181, 2181,
     2181, 2237, 2237, 2181, 2181, 2238, 2238, 2238, 2238, 2238,
     2238, 2238, 2238, 2239, 2181, 2181, 2239, 2239, 2239, 2239,
     2181, 2239, 2181, 2181, 2181, 2240, 2241, 2241, 2242, 2181,
     2243, 2181, 2244, 2181, 2181, 2245, 2240, 2181, 2181, 2181,
     2181, 2181, 2181, 2241, 2181, 2246, 2241, 2241, 2241, 2241,
     2241, 2241, 2241, 2241, 2241, 2241, 2241, 2241, 2241, 2241,

     2241, 2241, 2241, 2241, 2241, 2241, 2241, 2241, 2241, 2241,
      499, 2241, 2241, 2241, 2241, 2241, 2241, 2241, 2241, 2241,
     2241, 2241,  522,  522,  522,  522,  522,  522,  522,  522,
      522,  522,  522,  522,  522,  522,  522,  522, 2247, 2247,
     2248, 2181, 2181, 2181, 2181, 2181, 2249, 2181, 2181, 2181,
     2181, 2250, 2251, 2252, 2250, 2250, 2250, 2250, 2250, 2250,
     2250, 2250, 2250, 2250, 2250, 2250, 2250, 2250, 2250, 2250,
     2250, 2250, 2250, 2250, 2250, 2250, 2250, 2250,  567, 2250,
     2250, 2250, 2250, 2250, 2250, 2250, 2250, 2250, 2250,  589,
      589,  589,  589,  589,  589,  589,  589,  589,  589,  589,

      589,  589,  589,  589,  589, 2181, 2181, 2181, 2253, 2254,
     2255, 2253, 2181, 2181, 2181, 2254, 2181, 2256, 2257, 2257,
     2258, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2259, 2259,
     2259, 2259, 2259, 2259, 2259, 2259, 2259, 2259, 2259, 2259,
     2259, 2259, 2259, 2259, 2259, 2259, 2259, 2259, 2259, 2259,
     2259, 2259, 2259,  642, 2259, 2259, 2259, 2259, 2259, 2259,
     2259, 2259, 2259, 2259,  664,  664,  664,  664,  664,  664,
      664,  664,  664,  664,  664,  664,  664,  664,  664,  664,
     2260, 2260, 2181, 2181, 2181, 2181, 2181, 2261, 2181, 2181,
     2261, 2181, 2181, 2181, 2181, 2181, 2262, 2263, 2262, 2181,

     2264, 2264, 2264, 2264, 2181, 2265, 2181, 2265, 2265, 2265,
     2265, 2181, 2266, 2181, 2266, 2266, 2181, 2266, 2266, 2266,
     2266, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2267, 2267, 2267, 2181, 2268, 2181, 2268, 2181,
     2269, 2269, 2269, 2269, 2269, 2269, 2269, 2269, 2269, 2269,
     2269, 2269, 2269, 2269, 2269, 2270, 2271, 2272, 2181, 2270,
     2273, 2181, 2273, 2181, 2181, 2274, 2274, 2274, 2181, 2274,
     2274, 2274, 2274, 2181, 2275, 2275, 2275, 2275, 2275, 2275,
     2275, 2275, 2275, 2275, 2275, 2275, 2275, 2275, 2275, 2181,

     2181, 2181, 2276, 2276, 2277, 2181, 2181, 2278, 2278, 2181,
     2279, 2181, 2280, 2280, 2281, 2282, 2282, 2283, 2283, 2282,
     2284, 2282, 2285, 2285, 2286, 2287, 2287, 2288, 2288, 2287,
     2289, 2287, 2290, 2290, 2276, 2276, 2278, 2278, 2291, 2291,
     2292, 2293, 2293, 2294, 2294, 2293, 2295, 2293, 2181, 2181,
     2296, 2297, 2298, 2297, 2299, 2300, 2301, 2301, 2302, 2181,
     2181, 2181, 2303, 2181, 2303, 2181, 2181, 2304, 2305, 2306,
     2307, 2181, 2181, 2181, 2181, 2308, 2309, 2310, 2308, 2311,
     2181, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300,
     2300, 2300, 2300, 2300, 2181, 2181, 2181, 2181, 2181, 2310,

     2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300,
     2300, 2181, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300,
     2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300,
     2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300, 2300,
     2300, 2300, 2300, 2300, 2300, 2300, 2300, 2181, 2312, 2181,
     2181, 2313, 2314, 2315, 2181, 2316, 2316, 2316, 2316, 2316,
     2316, 2316, 2316, 2316, 2316, 2316, 2316, 2316, 2181, 2181,
     2181, 2181, 2181, 2317, 2315, 2316, 2316, 2316, 2316, 2316,
     2316, 2316, 2316, 2316, 2316, 2316, 2181, 2181, 2181, 2181,
     2181, 2317, 2315, 2316, 2316, 2316, 2316, 2316, 2316, 2316,

     2316, 2316, 2316, 2316, 2316, 2316, 2316, 2316, 2316, 2316,
     2316, 2316, 2316, 2316, 2316, 2316, 2316, 2316, 2316, 2316,
     2316, 2316, 2316, 2316, 2316, 2316, 2316, 2318, 2319, 2319,
     2320, 2321, 2322, 2323, 2181, 2181, 2324, 2325, 2325, 2325,
     2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325,
     2181, 2181, 2181, 2181, 2181, 2325, 2325, 2325, 2325, 2325,
     2325, 2325, 2325, 2325, 2325, 2325, 2181, 2181, 2181, 2181,
     2181, 2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325,
     2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325,
     2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325, 2325,

     2325, 2325, 2325, 2325, 2325, 2326, 2327, 2328, 2329, 2329,
     2181, 2181, 2330, 2330, 2330, 2330, 2331, 2331, 2332, 2333,
     2333, 2334, 2334, 2333, 2335, 2333, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2336, 2337, 2337, 2337, 2337, 2337, 2337, 2337, 2337,
     2337, 2337, 2338, 2181, 2181, 2181, 2339, 2339, 2340, 2341,
     2341, 2342, 2342, 2341, 2343, 2341, 2344, 2344, 2344, 2344,
     2344, 2344, 2344, 2344, 2344, 2344, 2344, 2345, 2181, 2346,
     2181, 2181, 2181, 2181, 2347, 2181, 2348, 2349, 2181, 2181,
     2350, 2181, 2351, 2352, 2352, 2352, 2353, 2354, 2355, 2352,

     2352, 2356, 2357, 2358, 2358, 2358, 2359, 2360, 2361, 2358,
     2358, 2362, 2363, 2364, 2365, 2366, 2365, 2181, 2181, 2367,
     2367, 2367, 2368, 2369, 2370, 2367, 2367, 2371, 2372, 2181,
     2181, 2181, 2373, 2374, 2375, 2376, 2181, 2377, 2378, 2181,
     2379, 2181, 2380, 2181, 2380, 2181, 2381, 2381, 2382, 2382,
     2383, 2181, 2181, 2181, 2181, 2181, 2384, 2384, 2378, 2385,
     2181, 2181, 2181, 2181, 2378, 2378, 2181, 2181, 2181, 2181,
     2181, 2386, 2378, 2378, 2378, 2378, 2378, 2378, 2378, 2378,
     2181, 2181, 2378, 2378, 2378, 2378, 2378, 2378, 2378, 2378,
     2378, 2378, 2378, 2378, 2378, 2378, 2378, 2378, 2378, 2378,

     2378, 2378, 2378, 2378, 2378, 2378, 2378, 2378, 2378, 2378,
     2378, 2378, 2378, 2378, 1314, 1314, 1314, 1314, 1314, 1314,
     1314, 2181, 2181, 2181, 2181, 2387, 2388, 2388, 2181, 2181,
     2181, 2181, 2181, 2389, 2390, 2388, 2388, 2388, 2388, 2388,
     2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
     2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
     2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
     2388, 2388, 2388, 1373, 1373, 1373, 1373, 1373, 1373, 1373,
     2181, 2391, 2181, 2392, 2393, 2393, 2394, 2181, 2181, 2395,
     2395, 2181, 2181, 2181, 2181, 2181, 2395, 2395, 2395, 2395,

     2395, 2395, 2395, 2395, 2395, 2395, 2395, 2395, 2395, 2395,
     2395, 2395, 2395, 2395, 2395, 2395, 2395, 2395, 2395, 2395,
     2395, 2395, 2395, 2395, 2395, 2395, 2395, 2395, 2395, 2395,
     2395, 2395, 2395, 2395, 1434, 1434, 1434, 1434, 1434, 1434,
     1434, 2396, 2397, 2398, 2399, 2399, 2181, 2181, 2181, 2400,
     2400, 2400, 2400, 2401, 2181, 2401, 2401, 2402, 2403, 2404,
     2405, 2401, 2181, 2401, 2406, 2407, 2408, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2409, 2410,
     2410, 2410, 2410, 2410, 2410, 2410, 2411, 2181, 2181, 2412,
     2412, 2412, 2413, 2414, 2415, 2412, 2412, 2416, 2417, 2181,

     2418, 2418, 2418, 2418, 2418, 2418, 2418, 2181, 2181, 2419,
     2181, 2420, 2181, 2421, 2181, 2422, 2181, 2423, 2424, 2425,
     2426, 2427, 2428, 2429, 2181, 2429, 2430, 2181, 2431, 2432,
     2433, 2434, 2181, 2181, 2435, 2436, 2437, 2438, 2439, 2440,
     2181, 2181, 2181, 2181, 2437, 2441, 2437, 2437, 2181, 2181,
     2437, 2437, 1552, 2437, 2437, 2437, 2437, 2437, 2437, 2437,
     2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437,
     2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437,
     2181, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437,
     2181, 2181, 2181, 2181, 2181, 2442, 2442, 2442, 2442, 2442,

     2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442,
     2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442,
     2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442, 2442,
     2442, 2442, 2442, 2442, 2443, 2444, 2444, 2444, 2444, 2444,
     2444, 2444, 2444, 2444, 2444, 2444, 2444, 2444, 2444, 2444,
     2444, 2444, 2444, 2444, 2444, 2444, 2444, 2444, 2444, 2444,
     2444, 2444, 2444, 2444, 2444, 2444, 2444, 2444, 2444, 2444,
     2444, 2444, 2444, 2444, 2445, 2446, 2446, 2181, 2181, 2181,
     2447, 2447, 2447, 2447, 2448, 2181, 2449, 2450, 2451, 2452,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2453,

     2454, 2454, 2454, 2454, 2454, 2181, 2181, 2455, 2456, 2457,
     2458, 2458, 2458, 2458, 2458, 2458, 2181, 2181, 2459, 2181,
     2460, 2181, 2461, 2181, 2181, 2181, 2181, 2181, 2181, 2437,
     2462, 2462, 2463, 2463, 2464, 2437, 2437, 2437, 2181, 2181,
     2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437,
     2437, 2437, 2437, 2437, 2437, 2437, 2181, 2437, 2437, 2437,
     2437, 2437, 2437, 2437, 2181, 2181, 2465, 2465, 2465, 2465,
     2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465,
     2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465,
     2465, 2466, 2466, 2467, 2468, 2469, 2469, 2469, 2469, 2469,

     2469, 2469, 2469, 2469, 2469, 2469, 2469, 2469, 2469, 2469,
     2469, 2469, 2469, 2469, 2469, 2469, 2469, 2469, 2469, 2469,
     2470, 2470, 2181, 2181, 2181, 2471, 2471, 2471, 2471, 2181,
     2181, 2181, 2181, 2181, 2181, 2453, 2454, 2454, 2454, 2458,
     2458, 2458, 2458, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2437, 2181, 2463, 2472, 2463, 2464, 2464, 2473, 2437, 2437,
     2181, 2181, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437,
     2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2181,
     2181, 2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465,
     2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465, 2181,

     2467, 2468, 2468, 2474, 2469, 2469, 2469, 2469, 2469, 2469,
     2469, 2469, 2469, 2469, 2469, 2469, 2469, 2469, 2469, 2469,
     2469, 2469, 2470, 2470, 2181, 2181, 2181, 2471, 2181, 2181,
     2181, 2181, 2181, 2453, 2454, 2458, 2458, 2181, 2181, 2181,
     2181, 2181, 2181, 2437, 2463, 2181, 2473, 2437, 2437, 2437,
     2437, 2181, 2181, 2181, 2437, 2437, 2437, 2437, 2437, 2437,
     2181, 2181, 2465, 2465, 2465, 2465, 2465, 2465, 2465, 2465,
     2465, 2181, 2474, 2469, 2469, 2469, 2469, 2469, 2469, 2469,
     2469, 2469, 2470, 2181, 2471, 2475, 2181, 2453, 2458, 2181,
     2181, 2181, 2181, 2181, 2437, 2463, 2437, 2437, 2437, 2476,

     2476, 2476, 2181, 1952, 2476, 2477, 2437, 2437, 2437, 2181,
     2181, 2181, 2181, 2181, 2478, 2437, 2465, 2465, 2465, 2465,
     2465, 2465, 2469, 2469, 2469, 2469, 2469, 2469, 2470, 2181,
     2181, 2181, 2453, 2458, 2181, 2181, 2181, 2437, 2463, 2437,
     2437, 2476, 2181, 2476, 2476, 2181, 2476, 2479, 2181, 2476,
     2181, 2477, 2181, 2477, 2480, 2479, 2481, 2476, 2437, 2437,
     2437, 2181, 2482, 2478, 2482, 2181, 2465, 2465, 2465, 2465,
     2465, 2469, 2469, 2469, 2469, 2469, 2181, 2458, 2181, 2004,
     2463, 2437, 2437, 2476, 2181, 2181, 2053, 2053, 2476, 2004,
     2004, 2181, 2476, 2476, 2476, 2476, 2437, 2437, 2181, 2181,

     2465, 2465, 2465, 2465, 2469, 2469, 2469, 2469, 2181, 2181,
     2476, 2181, 2463, 2476, 2181, 2004, 2092, 2092, 2181, 2181,
     2437, 2181, 2465, 2469, 2181, 2181, 2181, 2181, 2115, 2115,
     2181, 2181, 2004, 2476, 2119, 2120, 2120, 2128, 2128, 2181,
     2437, 2465, 2469, 2181, 2181, 2476, 2128, 2481, 2476, 2476,
     2131, 2132, 2132, 2181, 2004, 2476, 2128, 2140, 2140, 2181,
     2437, 2465, 2469, 2476, 2154, 2004, 2128, 2476, 2160, 2437,
     2465, 2469, 2004, 2128, 2004, 2128, 2004, 2128, 2128, 2128,
        0, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,

     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,

     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,

     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181
    } ;

static yyconst short int yy_nxt[22102] =
    {   0,
     2181, 2181,   59,   60,   65,   59,   60,   65,  433,  434,
       59,   60,   61,   62,   68,   61,   62, 1186, 1185,   63,
       69,   70,   66,  170,  406,  404,  170,   71,   64,  171,
      405,   64,   74,   59,   60,   74,   72,   68,   77,   78,
      409,  172,   79,   69,   70,  410, 2127,  412,   80,   81,
       75,   65,  413,   73,   65,   82,   87,   88,  714,   72,
       84,   77,   78,   84,   83,   79,   89,   90,  714,   66,
      418,   80,   81,   91,  212,  419,   73,  212,   85,  714,
      707,  728,   92,   94,   87,   88,   94,   83,  422,  714,
      729,  426,  213,  423,   89,   90,  427,  690,  690,   93,

      690,   95,   97,   59,   98,   97,  104,   59,   98,  104,
       92,  107,  108,   99,  100,  101, 2177,   99,  100,  101,
      102,  109,  110, 2175,  105,  404,  409,   93,  111,  103,
      432,  435,  689,  103,  116,  117,  689,  112,  113,  107,
      108,  113,   59,   60,  118,  119,  120,  731,  732,  109,
      110,  121,   61,   62,  693,  406,  114,  693, 2173,   63,
      122,  123,  116,  117,  123,  112,   65,   65,   64,   65,
       65, 2043,  118,  119,  120,   65,   59,   60,   65,  124,
      250,  733, 2053,  250,   66,   66,   61,   62,  122,  440,
      444,  447,  452,   66,  441,  445,  448,  453,   66,  734,

     2166,  478,   64,   58,  125,  126,  127,  125,  128,  129,
       58,  130,  128,   58,  131,  132,  133,   58,  134,  135,
      136,  137,  138,  139,  139,  139,  140,  135,  141,  135,
      142,  143,  144,  144,  144,  144,  144,  144,  144,  145,
      144,  144,  144,  146,  144,  144,  144,  135,  128,  147,
      144,  148,  149,  150,  151,  152,  153,  154,  144,  155,
      144,  156,  157,  158,  159,  160,  161,  162,  163,  164,
      165,  166,  144,  144,  144,  167,  168,  169,   58,   58,
       59,   60,   58,   58,  129,   58,   58,   58,   58,  131,
      173,  174,   58,   58,  175,   58,   58,   63,   58,   58,

       58,   58,   58,   58,   58,   58,   64,  176,  176,  176,
      176,  176,  176,  176,  177,  176,  176,  176,  178,  176,
      176,  176,   58,   58,   58,  176,  179,  180,  181,  182,
      183,  184,  185,  176,  186,  176,  187,  188,  189,  190,
      191,  192,  193,  194,  195,  196,  197,  176,  176,  176,
       58,   58,   58,  198,  199,  200,  201,  199,  198,  202,
      198,  203,  198,  198,  204,   61,  205,  198,  198,  198,
      198,  198,  206,   58,   58,   58,  207,  198,  198,  198,
      198,  208,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  209,  209,  198,  198,  198,

      209,  209,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  198,  210,  211,   58,   58,
       59,   60,   58,   58,  129,   58,   58,   58,   58,  131,
      173,  174,   58,   58,  175,  214,  215,   63,   58,   58,
       58,   58,   58,   58,   58,   58,   64,  216,  216,  216,
      216,  216,  216,  216,  217,  216,  216,  216,  218,  216,
      216,  216,   58,   58,   58,  216,  219,  220,  221,  222,
      223,  224,  225,  216,  226,  216,  227,  228,  229,  230,
      231,  232,  233,  234,  235,  236,  237,  216,  216,  216,

       58,  168,   58,   58,   58,   59,   60,   58,   58,  129,
       58,  238,   58,   58,   58,   61,   62,   58,   58,   58,
       58,   58,   63,   58,   58,   58,   58,  239,   58,   58,
       58,   64,  240,  240,  240,  240,  240,  240,  240,  240,
      240,  240,  240,  240,  240,  240,  240,   58,   58,   58,
      240,  240,  240,  240,  240,  240,  240,  240,  240,  240,
      240,  240,  240,  240,  240,  240,  240,  240,  240,  240,
      240,  240,  240,  240,  240,  241,   58,   58,   58,  242,
      243,   60,  242,   58,   58,   58,  244,   58,  245,   58,
       61,   62,  245,   58,   58,   58,   58,   63,   58,   58,

       58,  246,  247,   58,   58,   58,   64,  248,  248,  248,
      248,  248,  248,  248,  248,  248,  248,  248,  248,  248,
      248,  248,   58,   58,   58,  248,  248,  248,  248,  248,
      248,  248,  248,  248,  248,  248,  248,  248,  248,  248,
      248,  248,  248,  248,  248,  248,  248,  248,  248,  248,
      249,   58,   58,   58,  251,   59,   60,  251,   58,   58,
       58,  252,   58,   58,   58,   61,   62,   58,   58,   58,
       58,   58,   63,   58,   58,   58,   58,  253,   58,   58,
       58,   64,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,   58,   58,   58,

      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  254,  254,  254,  254,
      254,  254,  254,  254,  254,   58,   58,   58,  255,  437,
      456,  255,  437,  461,  404,  457,  409, 1994,  462,  405,
      404,  410,  438,  731,  732,  405,   66,   58,  242,  256,
       60,  242,   58,   58,   58,  257,   58,  245,   58,   61,
       62,  245,  258,   58,  258,   58,   63,   58,   58,   58,
      246,  247,   58,  259,   58,  260,  261,  261,  261,  261,
      261,  261,  261,  261,  261,  261,  261,  261,  261,  261,
      261,   58,   58,   58,  261,  261,  261,  261,  261,  262,

      261,  261,  261,  263,  261,  261,  261,  261,  261,  261,
      261,  261,  261,  261,  261,  261,  261,  261,  261,  249,
       58,   58,  250,  472,  728,  250,  472,  539,  539,  539,
      539, 1835,  409,  729,  540,  709,  473,  410,  710, 2155,
       66,   58,  264,   59,   60,  264,   58,   58,   58,  265,
       58,   58,   58,  266,   62,   58,  258,  267,  258,   58,
       63,   58,   58,   58,   58,   58,  268,   58,  269,  270,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  271,  271,   58,   58,   58,  271,  271,
      271,  271,  271,  271,  271,  271,  271,  271,  271,  271,

      271,  271,  271,  272,  271,  271,  271,  271,  273,  271,
      271,  271,  271,  249,   58,   58,  274,  404,  714,  274,
       59,   60,  405,  484,   65,   59,   60,   65,  409,   65,
      275,  276,   65,  410,   66,  275,  276,   63,  484,  714,
      515,  314,   66,  277,  314,  278,   64,   66,  277,  484,
      278,   64,   59,  280,  546, 2049,   58,  546,  336,  315,
      533,  336,  281,  282,  534,  336,  484,  547,  336,  283,
      285,   59,  280,  285,  404,   58,  337,   58,  284,  405,
      714,  281,  282,  337,  368,  717,  368,  368,  286,  368,
      484,  724,  401,  522,  725,  401,   58,  284,   59,   60,

      402,  714,  369,  402,  369,  484,  714,  484,   61,   62,
       66,  407,  761,  762,  407,   63,  356,  373,  403, 2145,
      374,  287,  375,  288,   64,  416,  376,  377,  416,  408,
      795,  796,  402,  378, 2144,  402,  289,  424,  429,  430,
      424,  429,  379,  417,  805,  290,  291,  292,  409,  293,
      403, 2133,  294,  410,  295,  425,  431, 2049,  805,  380,
      296,  297,  298,  299,  300,  301,  302,  303,  304,  302,
      301,  301,  301,  305,  301,  301,  301,  306,  307,  301,
      301,  301,  301,  301,  308,  301,  301,  301,  309,  309,
      301,  301,  301,  310,  311,  311,  311,  311,  311,  311,

      311,  311,  311,  311,  311,  311,  311,  311,  311,  301,
      301,  301,  311,  311,  311,  311,  311,  311,  311,  311,
      311,  311,  311,  311,  311,  311,  311,  311,  311,  311,
      311,  311,  312,  311,  311,  311,  311,  313,  301,  301,
      317,  318,  381,  356,  373,  381, 1175,  374, 1176,  375,
      319,  320,  407,  376,  377,  407,  402,  321,  404,  402,
      382,  322,  323,  405,  443,  450,  324,  443,  450,  379,
      408,  409,  402, 2126,  403,  402,  410,  438,  325,  815,
      484,  459,  408,  451,  459,  406,  380,  326,  327,  328,
      403,  329,  509,  815,  330,  484,  331,  484,  695,  460,

      705,  695,  332,  705,  333,  334,  335,  873,  874,  714,
      323,  336,  317,  318,  336,  463,  463,  463,  463,  950,
      951,  696,  319,  320,  465,  463,  463,  465,  484,  337,
      714,  478,  484,  322,  323,  479, 2125,  464,  324,  535,
      514,  480,  403,  484,  536,  484,  464,  484,  758,  484,
      325,  463,  463,  463,  463,  484, 2116,  759, 2110,  326,
      327,  328,  402,  329,  552,  402,  330,  492,  331,  493,
      484,  686,  484,  464,  332, 1176,  333,  334,  335,  552,
      403,  583,  323,  316,  316,  317,  318,  316,  316,  316,
      316,  338,  316,  316,  316,  339,  320,  316,  316,  316,

      316,  316,  321,  316,  316,  316,  316,  323,  316,  316,
      316,  324,  340,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  340,  340,  340,  340,  316,  316,  316,
      340,  340,  340,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  340,  340,  323,  316,  316,  316,  316,
      317,  318,  316,  316,  316,  316,  341,  316,  316,  316,
      319,  342,  316,  316,  316,  316,  316,  321,  316,  316,
      316,  316,  316,  316,  316,  316,  324,  343,  343,  343,
      343,  343,  343,  343,  343,  343,  343,  343,  344,  343,

      343,  343,  316,  316,  316,  343,  343,  345,  346,  347,
      343,  348,  343,  343,  349,  343,  350,  343,  343,  343,
      343,  343,  351,  343,  352,  353,  354,  343,  343,  343,
      316,  316,  316,  355,  355,  356,  357,  355,  355,  358,
      355,  359,  355,  355,  360,  361,  362,  355,  355,  355,
      355,  355,  363,  355,  355,  355,  355,  355,  355,  355,
      355,  364,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365,  366,  355,  367,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,

      365,  365,  365,  365,  365,  355,  355,  355,  355,  355,
      356,  357,  355,  355,  358,  355,  370,  355,  355,  360,
      361,  362,  355,  355,  355,  355,  355,  363,  355,  355,
      355,  355,  355,  355,  355,  355,  364,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  366,  355,  367,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      355,  355,  355,   58,  383,  384,  385,  383,   58,   58,
       58,  386,   58,   58,   58,   61,   62,   58,   58,  387,

       58,   58,   63,   58,   58,   58,   58,  387,   58,   58,
       58,   64,  388,  388,  388,  388,  388,  388,  388,  388,
      388,  388,  388,  389,  388,  388,  388,   58,   58,   58,
      388,  388,  390,  391,  392,  388,  393,  388,  388,  394,
      388,  395,  388,  388,  388,  388,  388,  396,  388,  397,
      398,  399,  388,  388,  388,  400,   58,   58,  463,  463,
      463,  463,  475,  475,  475,  466,  481,  482,  482,  481,
      481,  482,  482,  481, 2109,  516,  484,  483,  777,  517,
      464,  483,  700,  778,  476,  700,  484, 2099,  485, 2099,
      486,  484,  485,  484,  486,  481,  482,  482,  481,  518,

      408,  484,  487,  484,  544,  696,  483,  544,  714,  792,
      825,  476,  481,  482,  482,  481,  715,  485,  793,  486,
     1256,  716,  468,  483,  825,  494,  484,  488, 1186,  714,
      484,  469,  495,  498,  485,  496,  486,  484,  497,  782,
     1185,  484,  499,  484,  783,  484,  501,  484,  502,  552,
     2049,  500,  484,  801,  484,  504,  484,  503,  802,  545,
      489,  577,  806,  505,  552,  506,  552,  807,  507, 2043,
      508,  484,  484,  484,  510,  490,  511,  491,  519,  484,
      484,  537,  512,  513,  811,  484,  538,  484,  523,  484,
      803,  524,  525,  520,  484,  484,  521,  484,  811,  804,

      484,  526,  484,  805,  527,  484,  528,  812,  529,  805,
     2079,  530,  542,  463,  463,  542, 2043,  805,  543,  531,
      484,  548,  484,  805,  548,  548,  532, 2053,  548,  552,
      408,  578,  549,  579,  464, 2078,  549,  550,  551,  580,
      581,  550,  551,  553,  552,  554,  552,  553,  548,  554,
      689,  548,  548,  813,  689,  548,  816,  555,  552,  549,
      745,  817,  814,  549,  550,  551, 2043,  552,  550,  551,
      553,  586,  554,  552,  553,  552,  554, 2115,  826,  560,
      556,  561,  552,  827,  552,  562,  552,  552,  687,  684,
      566,  687,  563, 1156, 1156,  564,  552,  552,  565,  567,

      557,  552,  552,  552,  552,  569,  403,  570,  568,  582,
      685,  552,  552,  552,  552,  558,  571,  559,  572,  552,
     2077,  584,  552,  552,  604,  585,  573,  552,  574,  605,
     1927,  575,  552,  576,  552,  589,  552,  552,  552,  552,
      552,  587,  552,  841,  588,  552, 1186,  552,  590,  552,
     1185,  591,  592,  552,  552,  407,  596,  841,  407,  597,
      552,  593,  552, 1923,  594,  600,  595,  598,  552,  601,
      552,  552,  552,  408,  599,  606,  606,  606,  606,  602,
      608,  606,  606,  608,  603,  748,  823,  552,  748,  552,
      606,  606,  606,  606,  629,  824,  842,  607,  403,  835,

      877,  843,  607,  606,  606,  606,  606,  750,  836,  629,
      609,  658,  607,  613,  614,  614,  613, 2049,  806,  619,
      619,  619,  619,  852,  615,  607,  620,  622,  606,  606,
      622,  624,  625, 1113,  624,  617,  402,  618, 1114,  402,
      624,  625,  626,  624, 2043,  408, 1192,  627,  628,  607,
     1191,  626,  714,  553,  403,  554,  627,  628,  624,  625,
      720,  624,  553,  821,  554,  721, 1994,  624,  625,  626,
      624,  851,  630,  714,  627,  628,  611,  821,  626, 2036,
      553,  629,  554,  627,  628,  851,  822,  637,  629,  553,
      631,  554,  629,  635,  638,  636,  629,  639,  629,  629,

      640,  808,  641,  629,  652,  629, 2035,  629,  629,  629,
      809,  642, 1159, 2032,  629,  632,  629,  644,  818,  645,
      643,  647,  629,  629,  810,  629, 1159,  819,  646,  648,
      633,  649,  634, 1828,  650,  629,  651,  629,  629,  629,
      653,  820,  654, 1190, 1190,  839,  629,  657,  655,  656,
      629,  629,  629,  629,  840,  629,  659,  629, 2030,  661,
      660,  629,  803,  629,  629,  662,  629,  664,  663,  828,
      629,  804,  629,  665,  629,  861,  666,  667,  829,  629,
     2029,  629, 1994,  629,  862,  629,  668,  629, 1157,  669,
      629,  670,  830,  671,  675, 1993,  672, 1158,  676,  712,

      629,  629,  712,  407,  673,  629,  407,  629,  677,  629,
      679,  674,  928,  678,  484,  680,  629,  408,  629,  683,
      684,  408,  683,  484,  629, 1992,  629,  694,  684,  929,
      694,  430,  687,  684,  718,  687,  484,  718,  484,  714,
      926,  685,  484,  833,  932,  408, 1160,  484,  834,  685,
      403, 1161,  719,  484,  685,  738,  738,  739,  738, 1847,
      714,  742,  738,  739,  742,  739,  739,  739,  739, 1989,
      686,  746,  738,  739,  746,  780, 1193, 1193,  780,  403,
      772,  772,  772,  772,  739,  739,  739,  739,  437,  408,
      686,  437,  792,  781,  784,  739,  739,  784,  686, 1192,

      402,  438,  774,  402,  740,  739,  739,  739,  739,  758,
      740, 1191,  403,  407,  740,  831,  407,  484,  403,  942,
      740,  800,  739,  739,  800,  775,  741,  416,  484,  831,
      416,  408,  741,  740,  424, 2181,  741,  424,  832,  408,
     1184,  714,  741,  740,  811,  417,  429,  430,  443,  429,
      837,  443,  425,  693,  740,  741,  693,  811,  811,  838,
      450,  438,  714,  450,  431,  741,  408,  812,  844, 1988,
      740,  811,  847,  810,  808,  853,  741,  845,  451, 1987,
      812,  849,  850,  809,  849,  459,  847,  544,  459,  853,
      544,  846,  741,  548,  728,  848,  548,  810,  854,  463,

      463,  463,  463,  460,  465,  463,  463,  465,  481,  482,
      482,  481,  481,  482,  482,  481, 1692,  554,  484,  483,
      484,  464,  403,  483, 1036,  927,  464, 1036,  472,  484,
      485,  472,  486, 1986,  485,  615,  486,  857,  857,  857,
      857,  473,  545, 1985,  858,  863,  864,  864,  863,  475,
      475,  475,  865,  871,  871,  871,  871,  866,  473, 1984,
      466,  481,  482,  482,  481,  544,  856,  867,  544, 2181,
      948,  476,  483,  948, 1184,  464, 1927,  482,  482,  482,
      482,  483,  484,  485,  940,  876,  481,  482,  482,  481,
      879,  879,  941,  484,  876,  880,  880,  483,  476,  485,

      481,  482,  482,  481,  546,  881,  952,  546,  485,  952,
      486,  483,  481,  482,  482,  481, 2181,  547,  869,  547,
      545, 1219,  485,  483,  486, 1983,  469, 1880,  481,  482,
      482,  481,  930, 1186,  485, 1261,  486, 1185,  484,  483,
      484, 1186,  882,  481,  482,  482,  481,  931,  510,  484,
      485,  879,  486, 1185,  483,  481,  482,  482,  481, 2181,
      481,  482,  482,  481, 1219,  485,  483,  486, 1201, 1201,
     1943,  483,  481,  482,  482,  481, 1162,  485,  548,  486,
     1942,  548,  485,  483,  486, 1163,  481,  482,  482,  481,
     1941,  883,  690,  690,  485,  690,  486,  483,  484, 1164,

      484,  884,  554,  934,  481,  482,  482,  481,  485,  484,
      486,  481,  482,  482,  481,  483, 1203, 1203,  693,  885,
      886,  693,  483,  887, 1938,  484,  485,  484,  486,  690,
      690,  933,  690,  485, 1515,  486,  484,  481,  482,  482,
      481,  481,  482,  482,  481,  484, 1514,  935,  483,  888,
      889,  890,  483,  484,  936,  484,  484, 1111,  891,  485,
     1112,  486,  943,  485,  484,  486,  481,  482,  482,  481,
      481,  482,  482,  481,  484,  792,  484,  483,  484,  946,
      484,  483,  939, 1515,  484,  484,  947, 1514,  485,  484,
      486, 1937,  485,  893,  486,  484,  892, 1936,  894,  895,

      896,  897,  897,  896,  895,  895,  895,  895,  895,  895,
      895,  898,  895,  895,  895,  895,  895,  895,  895, 1211,
     1211,  792,  899,  895,  900,  895,  895,  895,  511,  902,
      481,  482,  482,  481, 1180,  481,  482,  482,  481,  548,
      758,  483,  548,  895,  895,  895,  483,  484, 1180,  944,
      549,  945,  485, 1178,  486,  550,  551,  485,  484,  486,
     1192,  553, 1178,  554, 1191,  901,  481,  482,  482,  481,
     1935,  895,  895,  895, 1447, 1132, 1179,  483, 1132, 1448,
      481,  482,  482,  481,  481,  482,  482,  481,  485, 1192,
      486,  483, 1008,  903,  552,  483,  481,  482,  482,  481,

      904, 1191,  485,  552,  486, 1165,  485,  483,  486, 1009,
      481,  482,  482,  481,  481,  482,  482,  481,  485, 1165,
      486,  483,  552,  758,  552,  483, 1006,  905, 1166, 1934,
      906, 1517,  485,  552,  486, 1516,  485,  907,  486,  912,
      482,  482,  912,  908,  481,  482,  482,  481, 1213, 1213,
      483,  481,  482,  482,  481,  483,  909,  539,  539,  539,
      539,  485,  483,  486,  540,  910,  485, 1723,  486,  481,
      482,  482,  481,  485,  705,  486, 1723,  705,  911,  552,
      483, 1012, 1227, 1227,  728,  481,  482,  482,  481, 1010,
      552,  485,  552,  486,  552,  552,  483,  552, 1013,  481,

      482,  482,  481,  552, 1011,  913,  552,  485,  914,  486,
      483,  481,  482,  482,  481,  510,  481,  482,  482,  481,
     1515,  485,  483,  486, 1514, 1117,  714,  483,  915, 2181,
     2181, 2181, 2181,  485, 1118,  486, 2181,  552,  485, 1015,
      486,  481,  482,  482,  481,  686, 1016,  714,  552,  916,
     1192, 1191,  483,  481,  482,  482,  481,  917,  481,  482,
      482,  481, 1517,  485,  483,  486, 1931,  918, 1930,  483,
      481,  482,  482,  481, 1516,  485, 1929,  486,  884,  937,
      485,  483,  486,  714,  552,  484,  552,  484, 1229, 1229,
      919, 1007,  485, 1533,  486,  552,  484,  938, 1534, 1017,

      780,  511, 1515,  780,  714,  552,  922,  552,  920,  542,
      463,  463,  542,  921, 1514,  543,  552, 1018,  781,  548,
     1517,  579,  548,  923, 1516,  924, 1517,  408,  728,  548,
      549,  464,  548,  714,  925,  550,  551,  552, 1516,  552,
      549,  553, 1014,  554, 1828,  550,  551,  548,  552, 1244,
      548,  553, 1244,  554,  714,  552,  548, 1022,  549,  548,
      714,  956, 1928,  550,  551,  578,  552,  549,  552,  553,
      552,  554,  550,  551,  548, 1828, 1019,  548,  553,  552,
      554,  714,  552,  548, 1020,  549,  548, 1927, 1180, 1926,
      550,  551, 1021,  552,  549,  552,  553, 1027,  554,  550,

      551,  548, 1180, 1925,  548,  553,  552,  554, 1236, 1236,
      957, 1181,  549,  548,  958, 1924,  548,  550,  551, 1029,
     1029, 1029, 1029,  553,  549,  554, 1030, 1497, 1497,  550,
      551,  548, 1923,  695,  548,  553,  695,  554,  959,  552,
     1026,  552,  549,  960, 1499, 1499,  548,  550,  551,  548,
      552,  748,  961,  553,  748,  554,  696,  549,  548, 1509,
     1509,  548,  550,  551,  606,  606,  606,  606,  553,  549,
      554, 1512, 1512,  750,  550,  551,  962,  963,  964, 1881,
      553,  548,  554, 2043,  548,  548,  607, 1240,  548,  629,
     1240, 1090,  549,  965, 2120, 1186,  549,  550,  551, 1459,

      629,  550,  551,  553,  552,  554, 1024,  553, 1025,  554,
      548,  876, 1880,  548,  552,  552,  552,  966, 1186, 1185,
     1459,  549, 1185, 1023, 1850,  552,  550,  551,  619,  619,
      619,  619,  553,  967,  554,  620,  999, 1849,  968,  969,
      970,  969,  969,  970,  969,  969,  969,  969,  969,  969,
      969,  971,  969,  969,  969,  969,  972,  973,  969, 1186,
     1185, 1185,  974,  969,  975,  969,  969,  969, 1848,  977,
      548,  849,  850,  548,  849,  608,  606,  606,  608,  548,
     1757,  549,  548,  969,  969,  969,  550,  551, 1722,  629,
      549, 1093,  553,  403,  554,  550,  551,  607, 1094,  548,

      629,  553,  548,  554, 1720,  976,  614,  614,  614,  614,
      549,  969,  969,  969,  548,  550,  551,  548,  629, 1844,
      629,  553, 1084,  554,  548,  549, 1843,  548,  617,  629,
      550,  551, 1842,  978,  548,  549,  553,  548,  554,  748,
      550,  551,  748, 1192,  979,  549,  553, 1466,  554, 1841,
      550,  551, 2181, 2181, 2181, 2181,  553,  792,  554, 2181,
      980,  750,  548,  981, 1086,  548,  629,  714, 1466, 1230,
     1231,  982, 1230,  549,  548,  629,  792,  548,  550,  551,
     1457, 1087, 1840,  983,  553,  549,  554, 1232,  714,  548,
      550,  551,  548, 1187,  984, 1088,  553,  629,  554,  629,

      549,  629, 1187,  629, 1085,  550,  551,  629,  629,  629,
     1089,  553,  629,  554,  548, 1097,  810,  548,  629,  622,
      606,  606,  622,  548,  579,  549,  548, 1154, 1188,  985,
      550,  551,  625,  625,  549,  625,  553,  408,  554,  550,
      551,  607, 1188,  626, 1154,  553, 1839,  554,  627,  628,
     1838,  812,  758,  986,  987,  988,  987,  987,  988,  987,
      987,  987,  987,  987,  987,  987,  989,  987,  987,  987,
      987,  990,  991,  987,  758,  994, 1837,  992,  987,  993,
      987,  987,  987,  714,  629,  548,  629,  997,  548, 1383,
     1091, 1836, 1383, 1835,  548,  629,  549,  548,  987,  987,

      987,  550,  551,  718,  714,  549,  718,  553,  714,  554,
      550,  551, 1834,  629,  548, 1098,  553,  548,  554,  684,
      684,  719,  684, 1099,  629,  549,  987,  987,  987,  714,
      550,  551, 1833,  629,  548, 1100,  553,  548,  554, 1122,
      714,  685,  995,  548,  629,  549,  548, 1832, 1123,  578,
      550,  551,  548,  996,  549,  548,  553, 1199,  554,  550,
      551,  714, 1124,  549,  629,  553, 1105,  554,  550,  551,
      548, 1199,  998,  548,  553,  629,  554, 1515, 1514, 1831,
      822,  549,  613,  614,  614,  613,  550,  551, 1032, 1032,
     1032, 1032,  553,  615,  554,  609, 1198,  629, 1000,  629,

     1002,  958, 1092, 1001,  617, 1198,  618,  728,  629,  728,
      607,  613,  614,  614,  613,  613,  614,  614,  613,  820,
     1830, 1132,  615, 1003, 1132, 1004,  615,  624,  625, 1517,
      624, 1119,  714,  617, 1005, 1192, 1191,  617,  626,  618,
     1517, 1516, 1515,  627,  628, 1119,  624,  625,  629,  624,
     1102,  554, 1103,  714, 1829,  624,  625,  626,  624,  629,
     1828,  611,  627,  628,  624,  625,  626,  624,  553, 1827,
      554,  627,  628,  683,  684,  626,  683,  553, 1208,  554,
      627,  628,  624,  625, 1826,  624,  553, 1208,  554, 1515,
     1514,  624,  625,  626,  624,  685, 1825, 1038,  627,  628,

      653,  830,  626,  714,  553, 1224,  554,  627,  628,  624,
      625, 1120,  624,  553, 1224,  554, 1121, 1824,  624,  625,
      626,  624, 1517, 1516,  714,  627,  628, 1244,  846,  626,
     1244,  553, 1823,  554,  627,  628,  624,  625,  712,  624,
      553,  712,  554, 1822,  686, 1039,  629,  626,  629, 1040,
     1192, 1191,  627,  628, 1191, 1101,  408,  629,  553, 1821,
      554,  629, 1104,  629,  624,  625,  692,  624,  624,  625,
     1595,  624,  629, 1041, 1766,  626, 1765, 1209, 1042,  626,
      627,  628, 1846, 1846,  627,  628,  553, 1043,  554, 1525,
      553, 1209,  554, 1191,  624,  625,  700,  624, 1757,  700,

      832,  428, 1729, 1125,  714,  626,  428,  879,  879,  686,
      627,  628,  880,  880,  408, 1046,  553, 1125,  554,  696,
      624,  625,  881,  624, 1225,  714, 1126, 1044, 1045,  624,
      625,  626,  624, 1847, 1847, 1728,  627,  628, 1225, 1494,
      626, 1047,  553, 1727,  554,  627,  628,  848, 1494,  624,
      625,  553,  624,  554,  687,  684, 1725,  687,  624,  625,
      626,  624, 1164, 1722,  952,  627,  628,  952,  879,  626,
     1528,  553,  403,  554,  627,  628,  685,  547,  430, 1048,
      553, 1049,  554,  430, 1517, 1515, 1050,  969, 1051, 1052,
      969, 1051,  969,  969,  969,  969,  969,  969,  969, 1053,

      969,  969,  969,  969, 1054, 1055,  969, 1488, 1057, 1720,
      974,  969,  975,  969,  969,  969, 1489, 1489, 1511,  624,
      625, 1058,  624, 1716, 1715, 1544,  694,  684, 1544,  694,
      626,  969,  969,  969, 1714,  627,  628,  738,  738,  739,
      738,  553, 1383,  554,  408, 1383,  624,  625,  685,  624,
      430,  748, 1713, 1056,  748,  624,  625,  626,  624,  969,
      969,  969,  627,  628,  624,  625,  626,  624,  553,  792,
      554,  627,  628,  750,  714,  626,  792,  553, 1712,  554,
      627,  628,  624,  625, 1059,  624,  553, 1492,  554,  857,
      857,  857,  857,  626, 1154,  714,  858,  686,  627,  628,

      624,  625, 1036,  624,  553, 1036,  554, 1060,  741, 1705,
     1061,  626, 1062,  615, 1182, 1182,  627,  628, 1182, 1704,
     1526, 1526,  553, 1063,  554, 1186, 1195,  624,  625, 1459,
      624,  411,  772,  772,  772,  772,  624,  625,  626,  624,
     1464, 1464, 1064,  627,  628, 1234, 1154,  626, 1703,  553,
     1459,  554,  627,  628,  774, 1707, 1707, 1182,  553, 1234,
      554,  758,  654,  739,  739,  739,  739,  758,  854,  624,
      625, 1182,  624,  624,  625, 1182,  624,  775, 1230, 1231,
      626, 1230, 1065, 1205,  626,  627,  628, 1702,  420,  627,
      628,  553, 1701,  554, 1700,  553, 1232,  554, 1699,  430,

     1066,  987, 1067, 1068,  987, 1067,  987,  987,  987,  987,
      987,  987,  987, 1069,  987,  987,  987,  987, 1070, 1071,
      987, 1698, 1697, 1696,  992,  987,  993,  987,  987,  987,
     1072, 1695,  624,  625,  741,  624,  548, 1075, 1694,  548,
      728,  624,  625,  626,  624,  987,  987,  987,  627,  628,
      430,  728,  626, 1216,  553, 1693,  554,  627,  628, 1692,
      554,  624,  625,  553,  624,  554, 1192, 1216,  430, 1529,
     1529, 1214,  626,  987,  987,  987, 1217,  627,  628, 1186,
     1214,  624,  625,  553,  624,  554, 1723, 1182, 1182, 1073,
      624,  625,  626,  624, 1215, 1723,  653,  627,  628, 1221,

     1074,  626, 1684,  553,  446,  554,  627,  628, 1683, 1724,
      624,  625,  553,  624,  554,  742,  738,  739,  742, 1076,
     1682,  626,  746,  738,  739,  746,  627,  628,  624,  625,
     1681,  624,  553,  403,  554,  784,  739,  739,  784,  626,
      408, 1077, 1680,  948,  627,  628,  948, 1679, 1040, 1678,
      553, 1095,  554,  403,  483,  624,  625,  629,  624,  629,
      772,  772,  772,  772, 1677, 1078,  626,  876,  629, 1096,
     1079,  627,  628,  654, 1676,  698, 1080,  553,  548,  554,
      948,  548,  774,  948, 1495,  692,  741,  772,  772,  772,
      772,  483,  628,  741,  800,  739,  739,  800, 1495, 1182,

     1635,  955,  554, 1182,  876,  775,  741, 1166, 1081,  774,
     1082,  420,  408, 1189, 1189,  551, 1206, 1189, 1189, 1083,
     2181, 2181, 2181, 2181, 1592, 1205,  420, 2181, 1591,  877,
      420, 1206,  775,  987,  987,  987,  987,  987,  987,  987,
      987,  987,  987,  987,  987,  987,  987,  987,  987,  987,
      987,  987,  987, 1546, 1543, 1542,  987,  987,  987,  987,
      987,  987, 1541, 1324,  548,  741, 1324,  548, 1182, 1182,
     1189, 1189, 1182, 1036, 1189, 1325, 1036,  987,  987,  987,
      411, 1222, 1195, 1219,  615, 1196,  548,  411,  554,  548,
     1324, 1189, 1189, 1324, 1528, 1189, 1383, 1182, 1182, 1383,

     1189, 1189, 1325,  411, 1206,  987,  987,  987, 1196,  446,
      554, 1182, 1221, 1189, 1222, 1189, 1189,  446, 1237,  463,
      463, 1237,  481,  482,  482,  481,  860,  446, 1544, 1460,
      714, 1544, 1222,  483, 1189, 1242, 1242, 1242, 1460, 1186,
      464, 1196,  876, 1185,  485, 1185,  486,  863,  864,  864,
      863,  714, 1124, 1717,  865, 2122, 1717, 1242, 2122,  866,
      473,  864,  864,  864,  864, 1249, 1249, 1249, 1249,  867,
     1517, 1718, 1250,  864,  864,  864,  864, 1239, 1461,  714,
     1243, 1192, 1185,  867, 1242, 2181, 2181, 1246,  864,  864,
     1246, 1515, 1461, 1324,  865,  867, 1324, 1186, 1192,  866,

      714, 1126, 1191, 1184, 1191, 1325, 1247, 1247, 1247,  867,
      871,  871,  871,  871, 1186, 1185, 2122,  466, 1185, 2122,
      869, 1257, 1257, 1257, 1257, 1511, 1230, 1231, 1258, 1230,
     1507, 1506,  464, 1262, 1263, 1263, 1262,  481,  482,  482,
      481, 1191,  792,  464, 1232, 1515,  869,  548,  483, 1688,
      548,  481,  482,  482,  481, 1264, 1505, 1185,  549,  485,
      869,  486,  483,  550,  551, 1029, 1029, 1029, 1029,  553,
     1688,  554, 1030,  485, 1504,  486, 1192, 1265, 1503, 1240,
     1466, 1259, 1240,  469,  792,  481,  482,  482,  481,  481,
      482,  482,  481, 1182, 1260, 1946,  483, 1182, 1946, 1182,

      483, 1466, 1502,  876, 1336, 1491,  483,  485, 1186,  486,
      776,  485, 1185,  486, 1185, 1266, 1267, 1268, 1269, 1269,
     1268, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1270, 1267,
     1267, 1267, 1267, 1267, 1267, 1267, 1182, 1501,  792, 1271,
     1267, 1272, 1267, 1267, 1267,  884, 1273,  481,  482,  482,
      481, 1185,  481,  482,  482,  481, 1939, 1940,  483, 1939,
     1267, 1267, 1267,  483, 1500, 2181, 2181, 2181, 2181,  485,
      484,  486, 2181, 1154,  485,  484,  486, 1154, 1486, 1552,
      481,  482,  482,  481,  481,  482,  482,  481, 1267, 1267,
     1267,  483,  758, 1485, 1274,  483,  481,  482,  482,  481,

      484,  511,  485,  511,  486,  484,  485,  483,  486,  484,
      481,  482,  482,  481,  481,  482,  482,  481,  485, 1484,
      486,  483,  879,  879, 1483,  483,  758,  880,  880, 1275,
      484,  714,  485, 1587,  486,  484,  485,  881,  486,  484,
      481,  482,  482,  481, 1482, 1481,  510, 1281,  482,  482,
     1281,  483,  714,  482,  482,  482,  482, 1240, 1282, 1276,
     1240, 1279,  485,  758,  486,  481,  482,  482,  481,  485,
     1480,  876, 1479, 1277, 1278,  485,  483,  481,  482,  482,
      481,  876, 1132,  879, 1478, 1132, 1477,  485,  483,  486,
      728, 1280,  481,  482,  482,  481, 1476, 1467, 1467,  485,

     1475,  486, 1474,  483,  481,  482,  482,  481,  481,  482,
      482,  481, 1473, 1283,  485,  483,  486, 1472,  728,  483,
      481,  482,  482,  481, 1284, 1517,  485, 1471,  486, 1690,
      485,  483,  486, 1691,  481,  482,  482,  481, 1381,  606,
      606, 1381,  485,  511,  486,  483,  481,  482,  482,  481,
     1690, 1470,  481,  482,  482,  481,  485,  483,  486, 1469,
      607,  728,  884,  483,  484, 1285, 1468,  884,  485,  484,
      486, 1286,  548,  484,  485,  548,  486, 1453,  481,  482,
      482,  481, 1452,  481,  482,  482,  481,  625,  625,  483,
      625,  681,  681, 1288,  483,  681,  554, 1287,  626, 1289,

      485, 1451,  486,  627,  628,  485, 1450,  486,  912,  482,
      482,  912,  481,  482,  482,  481, 1513, 1449,  548,  483,
     1513,  548, 1446,  483,  481,  482,  482,  481,  420, 1290,
      485, 1445,  876,  420,  485,  483,  486,  698,  481,  482,
      482,  481,  554,  511, 1442,  628,  485, 1717,  486,  483,
     1717,  628,  481,  482,  482,  481,  481,  482,  482,  481,
      485, 1961,  486,  483, 1961, 1718, 1962,  483, 1032, 1032,
     1032, 1032, 1291, 1515,  485,  609,  486, 1688,  485, 1292,
      486,  481,  482,  482,  481, 1962,  481,  482,  482,  481,
      607,  510,  483,  481,  482,  482,  481,  483, 1688, 1293,

     1035,  955,  551,  485,  483,  486,  870, 1294,  485,  870,
      486,  481,  482,  482,  481,  485,  955,  486, 1388, 1388,
     1388, 1388,  483,  481,  482,  482,  481,  481,  482,  482,
      481,  551,  955,  485,  483,  486, 1323, 1322,  483,  552,
     1389,  611, 1296, 1295,  552,  485,  877,  486,  958,  485,
     1261,  486,  481,  482,  482,  481, 1256, 1515, 1514, 1297,
     1256, 1514, 1593,  483, 1255, 1593,  481,  482,  482,  481,
      481,  482,  482,  481,  485, 1298,  486,  483, 1594, 1595,
     1299,  483, 1300, 1254,  481,  482,  482,  481,  485, 1253,
      486, 1252,  485, 1245,  486,  483,  481,  482,  482,  481,

     1514,  481,  482,  482,  481,  860,  485,  483,  486, 1513,
     1513, 1301,  483,  481,  482,  482,  481, 1218,  485, 1218,
      486,  446,  884,  485,  483,  486,  446,  481,  482,  482,
      481, 1302, 1192, 1191, 1192,  485, 1191,  486,  483,  481,
      482,  482,  481, 1183, 1268, 1269, 1303, 1268, 1186,  485,
      483,  486, 1305, 1183, 1177, 1304,  481,  482,  482,  481,
      629,  485, 1174,  486, 1182,  629, 1517,  483, 1455, 1040,
     1690,  481,  482,  482,  481, 1191, 1456, 1306,  485, 1173,
      486,  713,  483, 1172, 1171,  481,  482,  482,  481, 1455,
     1741, 1690, 1307,  485,  792,  486,  483,  481,  482,  482,

      481,  552, 1170, 1308, 1631, 1309,  552,  485,  483,  486,
      552,  481,  482,  482,  481,  481,  482,  482,  481,  485,
      870,  486,  483,  870, 1169, 1168,  483,  481,  482,  482,
      481,  484, 1310,  485, 1167,  486,  484,  485,  483,  486,
      484,  481,  482,  482,  481,  792, 1588, 1154, 1311,  485,
     1152,  486,  483,  481,  482,  482,  481, 1312,  481,  482,
      482,  481, 1151,  485,  483,  486,  884, 1517, 1516,  483,
     1313, 1516, 1150, 1149, 1148,  485, 1593,  486, 1314, 1593,
      485, 1147,  486,  481,  482,  482,  481,  481,  482,  482,
      481,  484, 1594, 1595,  483,  758,  484, 1146,  483, 1145,

      484, 1315, 1144, 1590, 1143,  485,  758,  486, 1316,  485,
     1516,  486,  481,  482,  482,  481, 1142, 1317,  481,  482,
      482,  481, 1141,  483,  481,  482,  482,  481,  548,  483,
     1140,  548, 1139, 1138,  485,  483,  486,  510,  548,  549,
      485,  548,  486, 1137,  550,  551,  485, 1318,  486,  549,
      553, 1136,  554,  548,  550,  551,  548,  688,  688, 1319,
      553,  688,  554,  548,  549, 1320,  548, 1135, 1327,  550,
      551, 1134, 1133,  548,  549,  553,  548,  554,  728,  550,
      551, 1321, 1182, 1131,  549,  553, 1182,  554, 1182,  550,
      551, 1130, 1515, 1129,  776,  553, 1514,  554, 1514, 1492,

     1337, 1128, 1328, 1329, 1330, 1329, 1329, 1330, 1329, 1329,
     1329, 1329, 1329, 1329, 1329, 1331, 1329, 1329, 1329, 1329,
     1332, 1333, 1329,  958,  579, 1182, 1334, 1329, 1335, 1329,
     1329, 1329, 1127, 1972,  548, 1514, 1972,  548,  728, 1263,
     1263, 1263, 1263,  548,  615,  549,  548, 1329, 1329, 1329,
      550,  551, 1939, 1940,  549, 1939,  553, 1116,  554,  550,
      551, 1264, 1115,  548, 1110,  553,  548,  554, 1109,  698,
     1246,  864,  864, 1246,  549, 1329, 1329, 1329,  548,  550,
      551,  548,  866, 1338, 1107,  553,  698,  554, 1106,  549,
      548,  692,  867,  548,  550,  551, 1385, 1385, 1385, 1385,

      553,  549,  554, 1386,  552,  578,  550,  551,  548,  552,
      692,  548,  553,  552,  554,  629, 1634, 1189,  607,  549,
      628, 1189, 1035, 1189,  550,  551, 1339, 1033,  548, 1491,
      553,  548,  554,  612,  776, 2037, 2037, 1342, 2037,  549,
      548, 1340, 1341,  548,  550,  551, 1538, 1538, 1538, 1538,
      553,  549,  554, 1243,  552,  548,  550,  551,  548, 1343,
     1189,  955,  553,  551,  554,  484,  549,  548,  867, 1387,
      548,  550,  551,  877,  875,  872, 1344,  553,  549,  554,
      860,  484,  477,  550,  551,  548,  484, 1345,  548,  553,
      484,  554,  439,  433,  548, 1589,  549,  548,  430,  552,

      799,  550,  551,  798,  552,  549,  579,  553,  552,  554,
      550,  551,  548,  797, 1632,  548,  553,  794,  554,  869,
      791,  790,  789,  549,  548,  958, 1182,  548,  550,  551,
     1455,  788,  787,  406,  553,  549,  554,  769,  713,  768,
      550,  551, 1346, 1457,  548, 1347,  553,  548,  554,  552,
      765, 1455,  958,  764,  552,  549,  548,  763,  552,  548,
      550,  551,  760,  757,  756, 1189,  553,  549,  554, 1463,
      755, 1349,  550,  551,  754, 1348,  548, 1456,  553,  548,
      554, 1717,  713,  753, 1717, 1946,  548,  549, 1946,  548,
     1463, 1350,  550,  551,  737,  736,  483,  549,  553, 1718,

      554,  548,  550,  551,  548,  697,  697, 1351,  553,  697,
      554,  548,  549,  735,  548,  701,  701,  550,  551,  701,
      730,  548,  549,  553,  548,  554,  727,  550,  551,  726,
      724,  548,  549,  553,  548,  554,  579,  550,  551,  723,
      860,  548,  549,  553,  548,  554, 1352,  550,  551, 1242,
     1242, 1242,  549,  553,  722,  554, 1353,  550,  551,  548,
      406,  745,  548,  553,  578,  554,  406,  737, 1354,  548,
      549, 1242,  548,  879,  879,  550,  551,  736,  880,  880,
      549,  553, 1355,  554,  548,  550,  551,  548,  881, 2037,
     2037,  553, 2037,  554,  548,  549,  735,  548, 1242,  730,

      550,  551,  727, 1356,  548,  549,  553,  548,  554, 1990,
      550,  551, 1990,  726,  629,  549,  553, 1671,  554,  629,
      550,  551,  723,  629,  722, 1357,  553, 1991,  554,  548,
      711, 1189,  548, 1358,  879, 1463, 1262, 1263, 1263, 1262,
      549, 1359,  704,  713,  548,  550,  551,  548, 1457, 1360,
      703,  553,  698,  554,  548,  549, 1463,  548, 1264,  692,
      550,  551,  623, 1361,  548,  549,  553,  548,  554,  406,
      550,  551,  612,  471,  629,  549,  553, 1040,  554,  629,
      550,  551,  548,  629, 1946,  548,  553, 1946,  554, 1263,
     1263, 1263, 1263,  549, 1362,  483,  958,  548,  550,  551,

      548,  477,  474,  471,  553, 1513,  554,  458,  549, 1686,
      455, 1264,  449,  550,  551,  548, 1363,  713,  548,  553,
      552,  554,  713, 1364,  548,  552,  549,  548,  442,  552,
     1686,  550,  551, 1365, 1633,  549,  439,  553,  629,  554,
      550,  551,  548,  629, 2042,  548,  553,  629,  554,  406,
     2055,  548, 1673,  549,  548, 2042, 2042, 2042,  550,  551,
      548, 1366,  549,  548,  553, 2084,  554,  550,  551,  406,
      421,  549,  414,  553,  629,  554,  550,  551,  548,  629,
     1367,  548,  553,  629,  554,  406, 1674,  548, 1368,  549,
      548, 1369,  552,  579,  550,  551, 1972,  552,  549, 1972,

      553,  552,  554,  550,  551,  548, 2181,  615,  548,  553,
     2042,  554, 1370,  706,  706,  548,  549,  706,  548, 2181,
     2181,  550,  551,  958, 2181,  548,  549,  553,  548,  554,
     2181,  550,  551, 2181, 2181,  629,  549,  553, 1371,  554,
      629,  550,  551, 2181,  629, 2181, 1372,  553,  548,  554,
     1672,  548,  548,  629,  654,  548,  958, 2181,  629,  549,
     2181, 2181,  629,  549,  550,  551, 1373, 2181,  550,  551,
      553, 2181,  554, 1192,  553,  548,  554, 1191,  548, 1191,
     1990, 2181, 2181, 1990,  548, 1374,  549,  548, 2181, 2181,
     2181,  550,  551,  548, 2181,  549,  548,  553, 1991,  554,

      550,  551,  548, 1375,  549,  548,  553, 2181,  554,  550,
      551, 1376, 2181,  549, 2181,  553, 1191,  554,  550,  551,
      548, 1189, 2181,  548,  553, 1189,  554, 1189, 2181, 2181,
     2181,  549, 1972,  776,  578, 1972,  550,  551, 1492, 1377,
     1378, 2181,  553,  615,  554,  624,  625, 2181,  624, 1379,
     1237,  463,  463, 1237,  624,  625,  626,  624, 2181, 2181,
     2181,  627,  628, 1961, 1189,  626, 1961,  553, 1962,  554,
      627,  628,  464, 2181,  876, 2181,  553, 1380,  554,  624,
      625, 2181,  624,  624,  625, 1390,  624, 1962,  743,  743,
      626, 2181,  743, 2181,  626,  627,  628, 2181, 1517,  627,

      628,  553, 1516,  554, 1516,  553, 2181,  554, 1249, 1249,
     1249, 1249,  747,  747, 2181, 1250,  747, 2181, 1391, 1329,
     1392, 1393, 1329, 1392, 1329, 1329, 1329, 1329, 1329, 1329,
     1329, 1394, 1329, 1329, 1329, 1329, 1395, 1396, 1329, 1040,
     1397, 1516, 1334, 1329, 1335, 1329, 1329, 1329,  751,  751,
      624,  625,  751,  624, 2181,  482,  482,  482,  482,  624,
      625,  626,  624, 1329, 1329, 1329,  627,  628, 2181, 2181,
      626, 2181,  553, 2181,  554,  627,  628,  485, 2181,  624,
      625,  553,  624,  554, 2181, 1237,  463,  463, 1237, 2181,
      626, 1329, 1329, 1329, 1515,  627,  628, 1398, 1514, 2181,

     1514,  553, 2181,  554, 2181,  624,  625,  464,  624,  876,
      654, 2181, 2181, 2181,  624,  625,  626,  624, 2181, 2181,
     2181,  627,  628,  624,  625,  626,  624,  553, 1399,  554,
      627,  628,  624,  625,  626,  624,  553, 1514,  554,  627,
      628,  624,  625,  626,  624,  553, 2181,  554,  627,  628,
     2085, 2181,  626, 2085,  553, 2181,  554,  627,  628,  624,
      625, 2086,  624,  553, 2181,  554, 2181,  653, 1513, 1513,
      626, 2111, 1513, 2181, 2111,  627,  628, 1400, 2181, 1403,
      411, 2181, 2112,  554, 2181,  411, 1401, 1402,  624,  625,
     1517,  624, 1404, 2181, 1516, 2181, 1516,  624,  625,  626,

      624, 2181, 2181, 2181,  627,  628,  624,  625,  626,  624,
      553, 1513,  554,  627,  628,  624,  625,  626,  624,  553,
     2181,  554,  627,  628,  624,  625,  626,  624,  553, 2181,
      554,  627,  628, 1516, 2181,  626, 1405,  553, 2181,  554,
      627,  628,  624,  625, 1406,  624,  553, 2181,  554, 2181,
     2181,  624,  625,  626,  624, 2181, 2181,  654,  627,  628,
      624,  625,  626,  624,  553, 2181,  554,  627,  628, 2181,
     2181,  626, 2181, 1040, 2181,  554,  627,  628, 2181, 1515,
     1514, 1407,  553, 1514,  554,  624,  625, 2181,  624,  624,
      625, 2181,  624, 1408,  766,  766,  626, 2181,  766, 2181,

      626,  627,  628, 2181, 2181,  627,  628,  553, 2181,  554,
     2181,  553, 2181,  554, 2181, 1517, 1516,  624,  625, 1516,
      624, 2181, 1514, 1409, 2181, 2181,  624,  625,  626,  624,
     2181, 2181, 1410,  627,  628,  548, 1411,  626,  548,  553,
     2181,  554,  627,  628,  625,  625,  549,  625,  553, 2181,
      554,  550,  551,  624,  625,  626,  624,  553, 1516,  554,
      627,  628,  625,  625,  626,  625, 2181, 2181, 1412,  627,
      628,  624,  625,  626,  624,  553, 2181,  554,  627,  628,
      624,  625,  626,  624, 2181, 2181,  654,  627,  628,  579,
     2181,  626, 2181,  553, 2181,  554,  627,  628,  624,  625,

     2114,  624,  553, 2114,  554, 2181, 2181,  624,  625,  626,
      624, 2043, 2181, 1413,  627,  628, 2181, 2181,  626, 2181,
      553, 2181,  554,  627,  628, 2181, 1414,  624,  625,  553,
      624,  554, 2181,  653, 2181, 2181, 2181, 2181,  626,  624,
      625, 2181,  624,  627,  628, 1415, 2181, 2181, 2181,  553,
      626,  554, 2181,  771,  771,  627,  628,  771, 1416,  624,
      625,  553,  624,  554, 1381,  606,  606, 1381,  624,  625,
      626,  624, 2181, 2181, 2181,  627,  628,  624,  625,  626,
      624,  553, 2181,  554,  627,  628,  607, 2181,  626, 1417,
      553, 2181,  554,  627,  628,  624,  625, 2085,  624,  553,

     2085,  554, 2181, 2181,  548, 1418,  626,  548, 2086, 2181,
     2181,  627,  628,  624,  625,  549,  624,  553, 2181,  554,
      550,  551, 2181, 1419,  626, 1420,  553, 2181,  554,  627,
      628, 2181, 1421,  624,  625,  553,  624,  554, 2181, 2181,
     2181, 1596,  624,  625,  626,  624, 2181,  785,  785,  627,
      628,  785, 2181,  626, 1422,  553, 2181,  554,  627,  628,
      624,  625, 2181,  624,  553, 2181,  554,  539,  539,  539,
      539,  626,  624,  625,  540,  624,  627,  628, 1423, 2181,
     2181, 2181,  553,  626,  554, 1040, 2181, 2181,  627,  628,
      624,  625, 2114,  624,  553, 2114,  554, 2156,  855,  855,

     2156,  626,  855, 2043, 1424, 2181,  627,  628, 2051, 2181,
      624,  625,  553,  624,  554, 1381,  606,  606, 1381, 1425,
     2181,  626, 2156, 1426, 2181, 2156,  627,  628,  624,  625,
     2181,  624,  553, 2051,  554, 2181, 2181,  607, 2181,  626,
      624,  625, 2181,  624,  627,  628, 1246,  864,  864, 1246,
      553,  626,  554,  865, 1427, 2181,  627,  628,  866, 2181,
      624,  625,  553,  624,  554, 1247, 1247, 1247,  867,  624,
      625,  626,  624, 2181, 2181, 1428,  627,  628, 2181, 2181,
      626, 2181,  553, 2157,  554,  627,  628,  624,  625, 1430,
      624,  553, 1429,  554, 2181, 2181,  624,  625,  626,  624,

     2181, 2181, 2181,  627,  628, 2156, 2181,  626, 2156,  553,
     2181,  554,  627,  628,  624,  625, 2051,  624,  553,  869,
      554, 1431, 2181, 2181, 2181,  626,  624,  625, 2042,  624,
      627,  628, 1040, 2181, 2055, 2056,  553,  626,  554, 2057,
     2057, 2042,  627,  628, 2181, 2181, 2181, 1432,  553, 2058,
      554,  624,  625, 2181,  624, 1433, 1388, 1388, 1388, 1388,
     2181, 2181,  626,  624,  625, 1040,  624,  627,  628,  619,
      619,  619,  619,  553,  626,  554,  620, 1434, 1389,  627,
      628,  624,  625, 2181,  624,  553, 2181,  554, 2181, 2181,
      624,  625,  626,  624, 2042, 2056, 2181,  627,  628,  624,

      625,  626,  624,  553, 2181,  554,  627,  628, 2181, 2181,
      626, 1435,  553, 2181,  554,  627,  628, 2181, 1436,  624,
      625,  553,  624,  554, 1862, 1862,  482, 1862,  624,  625,
      626,  624, 2181, 1028, 1028,  627,  628, 1028, 2181,  626,
     1437,  553, 2181,  554,  627,  628,  485, 1108, 1108,  653,
      553, 1108,  554, 2181, 1438, 2181,  624,  625, 2181,  624,
      481,  482,  482,  481, 2065, 2065, 1439,  626, 2181,  880,
      880,  483,  627,  628, 2181, 1440, 2181, 2181,  553, 2066,
      554, 2181,  485, 2181,  486, 1246,  864,  864, 1246, 2181,
     2181, 2181,  865, 1856, 1856, 1856, 1856,  866,  868,  868,

     1857, 2181,  868, 2181, 1247, 1247, 1247,  867, 1246,  864,
      864, 1246, 2181, 1441, 2181,  865, 1932, 1932, 1932, 1932,
      866, 2181, 2181, 1537, 2181, 2065, 2181, 1539, 1539, 1539,
      867, 1257, 1257, 1257, 1257, 2181, 2181, 2181, 1258, 2181,
     2181, 2181, 2181, 1443, 1443, 2181, 2181, 1443,  481,  482,
      482,  481, 2181,  464, 1862, 1862,  482, 1862,  869,  483,
     2181, 2181,  481,  482,  482,  481,  481,  482,  482,  481,
      485, 2181,  486,  483, 2181, 2181,  485,  483, 2181, 2181,
     2181,  869, 1933, 2181,  485, 2181,  486,  741,  485, 2181,
      486, 1259, 1549,  482,  482, 1549, 1513, 2181, 2181, 1547,

     1513, 2181, 1513, 1550, 1260, 2181, 2181, 2181,  776, 1545,
     2181, 2181, 2181,  776,  485, 2181,  876, 2181,  912,  482,
      482,  912,  481,  482,  482,  481, 2065, 2065, 1548,  483,
     2181,  880,  880,  483,  481,  482,  482,  481, 2181, 1513,
      485, 2066,  486, 2181,  485,  483,  486, 2181,  481,  482,
      482,  481,  481,  482,  482,  481,  485, 2156,  486,  483,
     2156, 2181, 2181,  483, 1731, 1731, 1731, 1731, 2051, 1551,
      485, 1732,  486, 2181,  485, 2181,  486, 2181,  511,  481,
      482,  482,  481,  481,  482,  482,  481, 2065,  511, 2134,
      483, 2181, 2134, 2181,  483,  481,  482,  482,  481, 2168,

     2051,  485, 2168,  486, 2181,  485,  483,  486, 2167, 2181,
     2051, 1552, 2181, 2048, 2181, 2181, 1553,  485, 2181,  486,
     1281,  482,  482, 1281, 1734,  481,  482,  482,  481, 2181,
     2181, 1282, 2156, 2181, 1554, 2156,  483, 1735, 1902, 1902,
     1902, 1902,  485, 2051,  876, 1903, 2181,  485, 1555,  486,
      481,  482,  482,  481,  481,  482,  482,  481, 2181, 1556,
     2111,  483, 2181, 2111, 2181,  483,  481,  482,  482,  481,
     2181, 2127,  485, 2181,  486, 2181,  485,  483,  486, 2176,
     2181, 2181, 1557,  481,  482,  482,  481, 2181,  485, 2181,
      486, 2181, 2181, 2181,  483,  481,  482,  482,  481,  481,

      482,  482,  481, 2181, 2181,  485,  483,  486, 1558, 1559,
      483,  481,  482,  482,  481, 2181, 2181,  485, 2181,  486,
     2181,  485,  483,  486, 1954, 1954,  482, 1954, 1560,  481,
      482,  482,  481,  485,  884,  486,  481,  482,  482,  481,
      483, 1856, 1856, 1856, 1856, 2181,  485,  483, 1857, 2181,
     2181,  485,  884,  486,  481,  482,  482,  481,  485, 2181,
      486, 2181, 2181,  510, 2181,  483,  481,  482,  482,  481,
     1561, 2181,  481,  482,  482,  481,  485,  483,  486, 2181,
     2181, 2181, 2181,  483, 2181, 2181, 2181, 2181,  485, 2181,
      486, 1562, 2181, 2181,  485, 1563,  486, 2181,  481,  482,

      482,  481, 1564,  481,  482,  482,  481, 2181, 2181,  483,
      481,  482,  482,  481,  483,  481,  482,  482,  481, 1566,
      485,  483,  486, 2181, 2181,  485,  483,  486, 2181, 1565,
     2181, 2181,  485, 2181,  486, 2181, 2181,  485, 2181,  486,
      481,  482,  482,  481, 2181, 1567,  739,  739,  739,  739,
     1568,  483,  481,  482,  482,  481,  481,  482,  482,  481,
     2042, 1569,  485,  483,  486, 2181, 2055,  483, 2181, 2181,
     1570, 2042, 2042, 2042,  485, 2181,  486, 2181,  485, 2181,
      486, 2084,  481,  482,  482,  481,  481,  482,  482,  481,
     2181, 2181, 2181,  483, 2181,  740, 2181,  483,  481,  482,

      482,  481, 2181, 1571,  485, 2181,  486, 2181,  485,  483,
      486, 2181,  481,  482,  482,  481, 1572,  741, 1573, 2181,
      485, 2164,  486,  483, 2164, 2181, 2042,  481,  482,  482,
      481, 2181, 2043, 2181,  485, 2181,  486, 1574,  483,  481,
      482,  482,  481, 2181, 2181, 2048,  510, 2181, 2181,  485,
      483,  486, 2181,  481,  482,  482,  481, 2181, 1575, 2181,
     2181,  485, 2156,  486,  483, 2156, 2181, 1576,  481,  482,
      482,  481, 2181, 2051, 2181,  485, 1577,  486, 2181,  483,
      481,  482,  482,  481,  482,  482,  482,  482, 1578, 2181,
      485,  483,  486, 2181,  481,  482,  482,  481,  548, 2181,

     2181,  548,  485, 2181,  486,  483,  485, 1579, 2181,  549,
     1792, 1792, 1792, 1792,  550,  551,  485, 1793,  486, 2181,
      553, 2181,  554, 2181, 2174, 1580, 1267, 1268, 1269, 1269,
     1268, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1270, 1267,
     1267, 1267, 1267, 1581, 1267, 1267, 2181, 1582, 2181, 1271,
     1267, 1272, 1267, 1267, 1267, 2181, 2181, 1583,  481,  482,
      482,  481,  548, 1601, 2181,  548, 2181, 2181, 2181,  483,
     1267, 1267, 1267,  549, 1385, 1385, 1385, 1385,  550,  551,
      485, 1386,  486, 1795,  553, 2181,  554, 2181, 2181, 2181,
      548, 2181, 2156,  548,  548, 2156,  607,  548, 1267, 1267,

     1267,  549, 2181, 2051, 2181,  549,  550,  551, 1584, 2181,
      550,  551,  553, 1585,  554, 2181,  553, 1586,  554, 2181,
     1932, 1932, 1932, 1932, 1597,  987,  988,  987,  987,  988,
      987,  987,  987,  987,  987,  987,  987,  989,  987,  987,
      987,  987,  990,  991,  987, 2181,  579, 1387,  992,  987,
      993,  987,  987,  987, 2180, 2042,  548,  958, 2181,  548,
     2181, 2043, 2042, 1549,  482,  482, 1549,  549, 2042,  987,
      987,  987,  550,  551, 1550, 2181, 2093, 1598,  553,  548,
      554, 2181,  548, 2181, 2181,  485, 2033,  876, 2181,  548,
      549,  741,  548, 2181, 2181,  550,  551,  987,  987,  987,

      549,  553, 2181,  554, 2181,  550,  551,  548, 2181, 2181,
      548,  553, 2181,  554, 2181, 2181,  548, 2181,  549,  548,
     1599, 2042, 2042,  550,  551,  548, 2181,  549,  548,  553,
     2181,  554,  550,  551, 1600, 2181,  549, 2181,  553, 2181,
      554,  550,  551,  548, 2181, 2181,  548,  553, 2181,  554,
     2181, 2181, 2181, 1602,  549,  548, 2181, 2181,  548,  550,
      551, 2181, 2181, 2181, 1603,  553,  549,  554, 2181, 2181,
      548,  550,  551,  548, 1604, 2181, 2181,  553, 2181,  554,
     1605,  549, 2181, 2181, 2181,  548,  550,  551,  548, 2181,
     2181, 2181,  553, 2181,  554, 2181,  549,  548, 2181, 2181,

      548,  550,  551, 2181, 2181, 1606,  958,  553,  549,  554,
     2181, 2181,  548,  550,  551,  548, 2181, 2181, 2181,  553,
     2181,  554,  548,  549, 2181,  548, 2181,  958,  550,  551,
     2181, 2181, 2156,  549,  553, 2156,  554,  548,  550,  551,
      548, 2181, 2181, 2051,  553, 2181,  554,  548,  549,  578,
      548, 2181, 2181,  550,  551, 2181, 1607, 2156,  549,  553,
     2156,  554,  548,  550,  551,  548, 2181, 2181, 2051,  553,
     2181,  554,  548,  549, 1608,  548, 2181, 2181,  550,  551,
     2181, 1609, 2181,  549,  553, 1610,  554, 2181,  550,  551,
      548, 2181, 2179,  548,  553, 2181,  554, 2181, 2181, 2181,

      548,  549, 2181,  548, 2181, 2181,  550,  551, 2181, 1612,
     1611,  549,  553, 2181,  554,  548,  550,  551,  548, 1613,
     2181, 2178,  553, 2181,  554, 2181,  549,  548, 2181, 2181,
      548,  550,  551, 1902, 1902, 1902, 1902,  553,  549,  554,
     1903, 1614,  548,  550,  551,  548, 2181, 2181, 2181,  553,
     2181,  554, 2181,  549, 2181, 1615, 2181,  548,  550,  551,
      548, 2181, 2181, 2181,  553, 2181,  554, 2181,  549, 2181,
     2181, 2181,  548,  550,  551,  548, 2181, 2181, 1616,  553,
     2181,  554, 2181,  549,  548, 2181, 2181,  548,  550,  551,
     2181, 1617, 2181, 2181,  553,  549,  554, 2181, 2181, 2181,

      550,  551,  548, 2181, 1618,  548,  553, 2181,  554, 2181,
     2181,  548, 2181,  549,  548, 2181, 2181, 2181,  550,  551,
     2181,  578,  549, 1619,  553, 2181,  554,  550,  551,  548,
     2181, 2181,  548,  553, 2181,  554, 2181, 2181, 2181,  548,
      549, 2181,  548, 2181, 1620,  550,  551, 2181, 2181, 2181,
      549,  553, 2181,  554, 2181,  550,  551, 1621, 2181,  548,
     1622,  553,  548,  554, 2181, 2181, 2181, 2181,  548, 2181,
      549,  548, 2181, 2181, 2181,  550,  551, 2181, 1623,  549,
     2181,  553, 2181,  554,  550,  551,  548, 2181, 2181,  548,
      553, 2181,  554, 1624, 2181,  548, 2181,  549,  548, 2181,

     2181, 2181,  550,  551, 2181, 2181,  549, 2181,  553, 2181,
      554,  550,  551, 2181, 2181, 2181, 1625,  553, 2181,  554,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 1626,  624,  625, 2181,  624,
      624,  625, 2181,  624, 2181, 1628, 2181,  626, 2181, 1627,
     1629,  626,  627,  628, 1630, 2181,  627,  628,  553, 2181,
      554, 2181,  553, 2181,  554,  624,  625, 2181,  624, 2181,
     2181, 2181, 2181, 1636,  624,  625,  626,  624, 2181, 2181,
     2181,  627,  628, 2181, 2181,  626, 2181, 2181, 2181,  554,
      627,  628, 2181, 2181, 2181, 2181,  553, 2181,  554, 2181,

     2181, 2181, 1637,  987, 1067, 1068,  987, 1067,  987,  987,
      987,  987,  987,  987,  987, 1069,  987,  987,  987,  987,
     1070, 1071,  987, 2181, 2181, 2181,  992,  987,  993,  987,
      987,  987, 2181, 2181,  624,  625, 2181,  624, 1639, 2100,
     1263, 1263, 2100,  624,  625,  626,  624,  987,  987,  987,
      627,  628, 2181, 2181,  626, 1638,  553, 2181,  554,  627,
      628, 1264, 2181,  624,  625,  553,  624,  554, 2181, 2100,
     1263, 1263, 2100, 2181,  626,  987,  987,  987, 2181,  627,
      628, 2181, 2181,  624,  625,  553,  624,  554, 2181, 2181,
      654, 1264,  624,  625,  626,  624, 2181,  654, 2181,  627,

      628,  624,  625,  626,  624,  553, 2181,  554,  627,  628,
     2181, 2181,  626, 2181,  553, 2181,  554,  627,  628,  624,
      625, 2181,  624,  553, 2181,  554, 1040, 2181,  624,  625,
      626,  624, 2181, 2181, 2181,  627,  628, 2181, 1640,  626,
     2181,  553, 2181,  554,  627,  628, 1932, 1932, 1932, 1932,
      553, 2181,  554,  624,  625, 2181,  624, 1641, 2181, 2181,
     2181, 2181, 2181, 2181,  626, 1642, 2181, 2181, 2181,  627,
      628,  624,  625, 2181,  624,  553, 1643,  554, 2181, 2181,
      624,  625,  626,  624, 2181, 2181, 1644,  627,  628,  624,
      625,  626,  624,  553, 2181,  554,  627,  628,  624,  625,

      626,  624,  553, 2181,  554,  627,  628, 2181, 1645,  626,
     2181,  553, 2034,  554,  627,  628, 2181,  741,  624,  625,
      553,  624,  554, 2181, 2181, 2181, 2181,  624,  625,  626,
      624, 1040, 2181, 1646,  627,  628,  624,  625,  626,  624,
      553, 2181,  554,  627,  628, 2181, 1040,  626, 2181,  553,
     2181,  554,  627,  628,  624,  625, 2181,  624,  553, 2181,
      554, 2181,  653,  624,  625,  626,  624, 2181, 2181, 2181,
      627,  628, 2181, 2181,  626, 2181,  553, 1647,  554,  627,
      628,  624,  625, 2181,  624,  553, 2181,  554, 2181, 1648,
      624,  625,  626,  624, 2181, 1649, 2181,  627,  628, 2181,

     2181,  626, 1650,  553, 2181,  554,  627,  628,  624,  625,
     2181,  624,  553, 2181,  554, 2181, 2181, 2181, 2181,  626,
     1852, 1263, 1263, 1852,  627,  628, 1651, 2181, 1652, 2181,
      553,  483,  554,  624,  625, 2181,  624, 1653, 2181, 2181,
     2181, 2181, 1264, 2181,  626,  624,  625, 2181,  624,  627,
      628, 2042, 2181, 2042, 2042,  553,  626,  554, 2042, 1654,
     2181,  627,  628,  624,  625, 2181,  624,  553, 2181,  554,
     1731, 1731, 1731, 1731,  626,  624,  625, 1732,  624,  627,
      628, 2181, 2181, 2181, 2181,  553,  626,  554, 1655, 2181,
     2181,  627,  628,  624,  625, 2181,  624,  553, 2181,  554,

     2181, 2181,  624,  625,  626,  624, 2181, 2181, 1656,  627,
      628, 2181, 2181,  626, 2181,  553, 2181,  554,  627,  628,
     2181, 2181,  624,  625,  553,  624,  554, 1657, 2181, 2181,
     1734, 2181, 2181,  626, 2181, 2181, 2181, 1658,  627,  628,
     2181, 2181, 2181, 1735,  553, 2181,  554,  624,  625, 2181,
      624,  624,  625, 1659,  624, 2181, 2181,  653,  626, 2181,
     2181, 2181,  626,  627,  628, 2181, 2181,  627,  628,  553,
     2181,  554, 2181,  553, 2181,  554, 2181,  624,  625, 2181,
      624, 2181, 1660, 2181, 1792, 1792, 1792, 1792,  626, 2181,
     2181, 1793, 2181,  627,  628,  624,  625, 2181,  624,  553,

     1662,  554, 1661, 2181, 2181, 2181,  626,  624,  625, 2181,
      624,  627,  628, 2042, 2181, 2042, 2042,  553,  626,  554,
     2042, 2181, 2181,  627,  628, 2181, 1663, 2181, 2181,  553,
     2181,  554, 2181, 2181,  624,  625, 2181,  624, 2181, 2181,
     2181, 2181, 2181,  624,  625,  626,  624, 2181, 2181, 1664,
      627,  628,  624,  625,  626,  624,  553, 1795,  554,  627,
      628, 2181, 2181,  626, 1665,  553, 2181,  554,  627,  628,
      481,  482,  482,  481,  553, 2181,  554, 1900, 1388, 1388,
     1900,  483, 2045,  482, 2045, 2045, 1726, 2181,  615, 2181,
     2181, 2181,  485, 2043,  486, 2181, 2181, 2181, 2181, 1389,

     2181, 1666, 1668, 2181, 2047, 2181, 1667, 1669, 2181, 2181,
     2181, 1670,  987,  987,  987,  987,  987,  987,  987,  987,
      987,  987,  987,  987,  987,  987,  987,  987,  987,  987,
      987,  987,  786,  786,  786,  987,  987,  987,  987,  987,
      987,  786,  786,  786,  786,  786,  786,  786,  786,  786,
      786,  786,  786,  786,  786,  786,  987,  987,  987,  786,
      786,  786,  786,  786, 1711,  786,  786,  786,  786,  786,
      786,  786,  786,  786,  786,  786,  786,  786,  786,  786,
      786,  786,  786,  786,  987,  987,  987, 1538, 1538, 1538,
     1538, 2181, 2181, 2181, 1243, 1246,  864,  864, 1246, 2181,

     2181, 2181,  865, 2042, 2181, 2042, 2042,  866, 2181,  867,
     2042, 2181, 2181, 2181, 1539, 1539, 1539,  867, 1246,  864,
      864, 1246, 2181, 2181, 2181,  865, 2181, 2181, 2181, 2181,
      866,  481,  482,  482,  481, 2181, 2181, 1247, 1247, 1247,
      867, 2181,  483,  481,  482,  482,  481, 2181, 2181, 2181,
     2181, 2181, 2181,  485,  483,  486, 2181, 2181, 2181, 2181,
      869,  481,  482,  482,  481,  485, 2181,  486,  869, 2181,
     2181, 2181,  483,  481,  482,  482,  481, 2181, 2181, 2181,
     2181, 1736, 1730,  485,  483,  486, 2181, 2181, 2181, 2181,
     2181,  869, 2181,  548, 2181,  485,  548,  486, 2181, 2181,

     2181, 2181, 2181, 2181,  549, 2181, 2181, 2181, 1737,  550,
      551, 2181, 2181, 2181, 2181,  553, 2181,  554, 2181, 2181,
     1738, 1267, 1739, 1740, 1269, 1739, 1267, 1267, 1267, 1267,
     1267, 1267, 1267, 1270, 1267, 1267, 1267, 1267, 1267, 1267,
     1267, 2181, 2181, 2181, 1271, 1267, 1272, 1267, 1267, 1267,
     1772, 2042,  481,  482,  482,  481, 2181, 2043, 2042,  481,
      482,  482,  481,  483, 2042, 1267, 1267, 1267, 2181, 2181,
      483, 2181, 2093, 2181,  485, 2181,  486, 2181, 2181, 2181,
     2181,  485, 2181,  486, 2181,  481,  482,  482,  481, 2181,
     2181, 2181, 2181, 1267, 1267, 1267,  483,  481,  482,  482,

      481, 2181, 2181, 2181, 2181, 2181, 2181,  485,  483,  486,
     2181, 1742, 2181, 2181, 2181, 2181, 1743, 2042, 2042,  485,
     2181,  486,  481,  482,  482,  481, 2181, 2181, 2181,  481,
      482,  482,  481,  483, 2181, 2181,  884, 2181, 2181,  548,
      483, 2181,  548, 2181,  485, 2181,  486, 2181,  510, 2181,
      549,  485, 2181,  486, 2181,  550,  551,  481,  482,  482,
      481,  553, 2181,  554,  481,  482,  482,  481,  483, 2181,
     2181, 2181, 2181, 2181, 2181,  483, 2181, 1744, 1745,  485,
     2181,  486,  481,  482,  482,  481,  485, 2181,  486,  481,
      482,  482,  481,  483, 1773, 2181, 2181, 2181, 2181, 2181,

      483, 2181, 2181, 2181,  485, 2181,  486,  481,  482,  482,
      481,  485, 2181,  486,  884, 2181,  884, 2181,  483,  481,
      482,  482,  481, 2181, 2181, 2042, 2181, 2042, 2042,  485,
      483,  486, 2042, 2181, 2181, 2181,  481,  482,  482,  481,
      884,  485, 2181,  486, 2181, 2181,  884,  483, 2181, 2181,
     2181, 2181, 2181, 2181,  481,  482,  482,  481,  485, 2181,
      486, 2181, 2181, 2181, 1746,  483,  481,  482,  482,  481,
     2181, 2181, 2181, 2181, 2181, 2181,  485,  483,  486, 2181,
     1747, 2181, 2181, 2181, 2181, 2138, 2181, 2181,  485, 2181,
      486, 2181,  481,  482,  482,  481, 2181, 2181, 2042, 2181,

     1748, 2181, 2181,  483, 2181, 2181, 2181, 1749, 2181,  481,
      482,  482,  481, 2181,  485, 2181,  486, 2181, 2181, 2181,
      483,  481,  482,  482,  481, 2181, 2181, 2181, 2181, 2181,
     1750,  485,  483,  486, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 1751, 2181,  485, 2181,  486,  481,  482,  482,  481,
      481,  482,  482,  481, 2181, 2181, 2181,  483,  884, 2181,
     2181,  483, 2181, 2181, 2181, 2181, 2181, 2181,  485, 2181,
      486, 2181,  485, 2181,  486, 2181,  481,  482,  482,  481,
      481,  482,  482,  481, 2181, 1752, 2181,  483, 2181, 2181,
     2181,  483, 2181, 2181, 2181, 2181, 2181, 1753,  485, 2181,

      486, 2181,  485, 2181,  486,  481,  482,  482,  481,  511,
     2181, 2181,  481,  482,  482,  481,  483, 2181, 2181, 2181,
     2181, 2181, 2181,  483, 2181, 2181,  510,  485, 2181,  486,
     2181, 2181,  884, 2181,  485, 2181,  486,  481,  482,  482,
      481,  481,  482,  482,  481, 2181, 2181, 2181,  483, 2181,
     2181, 2181,  483, 2181, 1754, 2181, 2181, 2181, 2181,  485,
     2181,  486, 2181,  485, 2181,  486,  481,  482,  482,  481,
     2181, 2181, 2181, 2181, 2181, 2181, 1552,  483, 1852, 1263,
     1263, 1852, 2181,  481,  482,  482,  481, 2181,  485,  483,
      486,  511, 2181, 2181,  483, 2181, 2181, 2181, 2181, 2181,

     1264, 2181, 1854, 1755, 2181,  485, 2181,  486, 2181, 2181,
     2181, 2181, 2181, 1756,  895,  896,  897,  897,  896,  895,
      895,  895,  895,  895,  895,  895,  898,  895,  895,  895,
      895,  895,  895,  895, 1759, 2181, 2181,  899,  895,  900,
      895,  895,  895, 2181, 2181,  481,  482,  482,  481, 2181,
     2181, 2181,  481,  482,  482,  481,  483, 2181,  895,  895,
      895, 2181, 2181,  483, 2181, 2181, 2181,  485, 2181,  486,
     2181, 2181, 2181, 2181,  485, 2181,  486, 2181,  511,  481,
      482,  482,  481, 2181, 2181, 2181,  895,  895,  895, 2181,
      483, 2181, 2181, 2181, 2181, 2181,  481,  482,  482,  481,

     1758,  485,  884,  486, 2181, 2181, 2181,  483, 2181, 2181,
     2181, 2181, 2181,  481,  482,  482,  481, 2181,  485, 2181,
      486, 2181, 2181, 2181,  483, 2181, 1760, 2181, 2181, 2181,
      481,  482,  482,  481, 2181,  485, 2181,  486, 2181, 2181,
     2181,  483,  481,  482,  482,  481, 2181, 2181, 2181, 2181,
     2181, 2181,  485,  483,  486, 1761,  548, 2181, 2181,  548,
     1762, 2181, 2181, 2181,  485,  548,  486,  549,  548, 2181,
     2181, 2181,  550,  551, 2181, 2181,  549, 2181,  553, 2181,
      554,  550,  551, 2181, 2181, 1763, 2181,  553, 1764,  554,
     2181, 2181,  548, 2181, 1767,  548, 2181, 2181, 2181, 2181,

     2181, 2181,  548,  549, 2181,  548, 2181, 2181,  550,  551,
     2181, 2181, 1768,  549,  553, 2181,  554, 2181,  550,  551,
     2181, 2181, 2181, 2181,  553, 2181,  554, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 1769,
     1329, 1330, 1329, 1329, 1330, 1329, 1329, 1329, 1329, 1329,
     1329, 1329, 1331, 1329, 1329, 1329, 1329, 1332, 1333, 1329,
     2181, 1771, 2181, 1334, 1329, 1335, 1329, 1329, 1329, 2181,
     2181, 2181,  548, 2181, 2181,  548, 2181, 2181, 2181, 2045,
      482, 2045, 2045,  549, 1329, 1329, 1329, 1770,  550,  551,
     2043, 2181, 2181, 2181,  553, 2181,  554, 2181, 2181, 2181,

      548, 2047, 2181,  548,  548, 2181, 2181,  548, 2181, 2181,
     2181,  549, 1329, 1329, 1329,  549,  550,  551, 2181, 2181,
      550,  551,  553,  958,  554, 2181,  553, 2181,  554, 2181,
      548, 2181, 2181,  548, 2181, 2042, 2181, 2042, 2042, 2181,
     2181,  549, 2042, 2181, 2181,  548,  550,  551,  548, 2181,
     2181,  578,  553, 1774,  554,  548,  549, 2042,  548, 2181,
     2181,  550,  551, 2181, 2181, 2181,  549,  553, 2181,  554,
      548,  550,  551,  548, 2181, 2181, 2181,  553, 2181,  554,
      548,  549, 2181,  548, 2181, 2181,  550,  551, 2181,  958,
      548,  549,  553,  548,  554,  958,  550,  551, 2181, 2181,

      548,  549,  553,  548,  554, 2181,  550,  551, 2042, 2181,
     2181,  549,  553, 2181,  554, 2181,  550,  551, 2181,  958,
     2181,  958,  553,  548,  554, 2181,  548, 2181, 2181, 2181,
     2181, 2181,  548, 2181,  549,  548, 2181, 1775, 2181,  550,
      551,  548, 2181,  549,  548,  553, 2181,  554,  550,  551,
      548, 1776,  549,  548,  553, 2181,  554,  550,  551, 2181,
     2181,  549, 2181,  553, 1777,  554,  550,  551, 2181, 2181,
     2181, 2181,  553, 2181,  554,  548, 2181, 2181,  548, 2181,
     2181, 1779, 2181, 2181, 2181,  548,  549, 1778,  548, 2181,
      958,  550,  551, 2181, 2181,  548,  549,  553,  548,  554,

     2181,  550,  551, 2181, 2181,  548,  549,  553,  548,  554,
     2181,  550,  551, 2181, 1780, 2181,  549,  553, 2181,  554,
     2181,  550,  551, 2181, 2181,  548, 1781,  553,  548,  554,
     2181, 2181, 2181, 2181, 2181, 2181,  549,  548, 2181, 2181,
      548,  550,  551, 2181,  579,  578, 2181,  553,  549,  554,
     2181, 2181, 2181,  550,  551,  548, 2181,  958,  548,  553,
     2181,  554, 2181, 2181,  548, 2181,  549,  548, 2181, 2181,
     2181,  550,  551,  548, 1782,  549,  548,  553, 2181,  554,
      550,  551, 2181, 2181,  549, 2181,  553, 2181,  554,  550,
      551, 2181, 2181, 2181, 2181,  553, 2181,  554, 2181,  548,

     2181,  958,  548, 2094, 1263, 2095, 2094, 2181, 2181,  579,
      549, 2181, 2181, 2181, 2043,  550,  551, 2181, 2181, 2181,
     1784,  553, 2181,  554, 2181, 2096, 1783,  969,  970,  969,
      969,  970,  969,  969,  969,  969,  969,  969,  969,  971,
      969,  969,  969,  969,  972,  973,  969, 2181, 2181,  958,
      974,  969,  975,  969,  969,  969, 2181, 2181,  548, 2181,
     2181,  548, 2181, 2181, 2181, 1852, 1263, 1263, 1852,  549,
     2181,  969,  969,  969,  550,  551,  483, 2181, 2181, 2181,
      553,  548,  554, 2181,  548, 2181, 2181, 1264, 2181, 1854,
     2181,  579,  549,  548, 2181, 2181,  548,  550,  551,  969,

      969,  969, 2181,  553,  549,  554, 2181, 2181, 2181,  550,
      551,  548, 2181, 1785,  548,  553, 2181,  554, 2181, 2181,
      548, 2181,  549,  548, 2181, 2181, 1855,  550,  551, 2181,
     2181,  549, 1786,  553, 2181,  554,  550,  551,  548, 2181,
     1787,  548,  553, 2181,  554, 2181, 2181, 2181, 2181,  549,
     2042, 2181, 2042, 2042,  550,  551, 2181, 2042,  548, 2181,
      553,  548,  554, 2181, 2181, 2181, 2181, 1789, 2181,  549,
     1788, 2181, 2042, 2181,  550,  551, 2181, 2181,  624,  625,
      553,  624,  554, 2181, 2181, 2181, 2181, 2181, 2181,  626,
     2181, 2181, 2181, 1790,  627,  628,  624,  625, 2181,  624,

      553, 2181,  554, 2181, 1791, 2181, 2181,  626,  624,  625,
     2090,  624,  627,  628, 2181, 2181, 1796, 2181,  553,  626,
      554, 2181, 2181, 2042,  627,  628, 2181, 2181,  624,  625,
      553,  624,  554, 2181, 2181, 2181, 2181, 2181, 2181,  626,
     2181, 2181, 2181, 1797,  627,  628, 2181, 2181, 2181, 2181,
      553, 2181,  554, 2181, 2181, 1798, 1329, 1392, 1393, 1329,
     1392, 1329, 1329, 1329, 1329, 1329, 1329, 1329, 1394, 1329,
     1329, 1329, 1329, 1395, 1396, 1329, 2181, 2181, 2181, 1334,
     1329, 1335, 1329, 1329, 1329, 2181, 2181, 1800,  624,  625,
     2181,  624, 2181, 2181, 2181,  481,  482,  482,  481,  626,

     1329, 1329, 1329, 1799,  627,  628,  483, 2181, 2181, 2181,
      553, 2181,  554, 2181, 2181,  624,  625,  485,  624,  486,
     2181, 2181, 2181, 2181,  624,  625,  626,  624, 1329, 1329,
     1329,  627,  628,  624,  625,  626,  624,  553, 2181,  554,
      627,  628, 2181, 2181,  626, 1801,  553, 2181,  554,  627,
      628, 2181, 2181, 2181,  510,  553, 2181,  554, 2181, 2181,
      624,  625, 2181,  624, 2181, 2181, 1040, 2181, 2181,  624,
      625,  626,  624, 2181, 2181,  653,  627,  628, 2181, 2181,
      626, 2181,  553, 2181,  554,  627,  628, 2181, 1802,  624,
      625,  553,  624,  554, 2181, 2181, 2181, 2181, 2181, 2181,

      626,  624,  625, 2181,  624,  627,  628, 2181, 2181, 1803,
     2181,  553,  626,  554, 2181, 2181, 2181,  627,  628,  624,
      625, 2181,  624,  553, 2181,  554, 2181, 2181, 1040, 2181,
      626,  624,  625, 2181,  624,  627,  628, 2181, 2181, 1040,
     2181,  553,  626,  554, 2181, 2181, 2181,  627,  628, 2181,
     2181,  624,  625,  553,  624,  554, 2181, 2181, 2181, 2181,
      624,  625,  626,  624, 2181, 1040, 2181,  627,  628,  548,
     1040,  626,  548,  553, 2181,  554,  627,  628,  624,  625,
      549,  624,  553, 2181,  554,  550,  551, 2181, 1804,  626,
     2181,  553, 2181,  554,  627,  628, 2181, 2181,  624,  625,

      553,  624,  554, 2181, 2181, 2181, 2181, 2181, 2181,  626,
      624,  625, 1805,  624,  627,  628, 2181, 2181, 1883, 2181,
      553,  626,  554, 2181, 1806, 2181,  627,  628,  624,  625,
     2181,  624,  553, 2181,  554, 2181, 2181, 2181, 2181,  626,
      624,  625, 1807,  624,  627,  628, 2181, 1808, 2181, 2181,
      553,  626,  554, 2181, 2181, 2181,  627,  628, 2181, 1040,
      624,  625,  553,  624,  554, 2181, 2181, 2181, 2181, 2181,
     2181,  626,  624,  625, 2181,  624,  627,  628, 2181, 2181,
     2181, 2181,  553,  626,  554, 2181, 2181,  548,  627,  628,
      548, 1810, 1809, 2181,  553, 2181,  554, 2181,  549,  624,

      625, 2181,  624,  550,  551, 2181, 2181, 2181, 2181,  553,
      626,  554, 2181, 2181, 2181,  627,  628,  624,  625,  654,
      624,  553,  653,  554, 2181, 2181,  624,  625,  626,  624,
     2181, 2181, 2181,  627,  628, 2181, 1884,  626, 2181,  553,
     2181,  554,  627,  628, 2181, 2181,  624,  625,  553,  624,
      554, 1040, 2181, 2181, 2181, 2181, 2181,  626,  624,  625,
     2181,  624,  627,  628, 2181, 2181, 1811, 2181,  553,  626,
      554, 2181, 2181, 2181,  627,  628, 2095, 1263, 2095, 2095,
      553, 2181,  554, 2181, 2181,  624,  625, 2043,  624, 2181,
     1040, 2181, 2094, 1263, 2095, 2094,  626, 2181, 2096, 2181,

      654,  627,  628, 2043, 2181,  624,  625,  553,  624,  554,
     2181, 2181, 2181, 2181, 2096, 2181,  626, 2181, 2181, 2181,
     1812,  627,  628, 2181, 2181, 2181, 2181,  553, 2181,  554,
     2181, 2181, 1813,  969, 1051, 1052,  969, 1051,  969,  969,
      969,  969,  969,  969,  969, 1053,  969,  969,  969,  969,
     1054, 1055,  969, 2181, 2181, 1040,  974,  969,  975,  969,
      969,  969, 2181, 2181,  624,  625, 2181,  624, 2181, 2181,
     2181, 2181, 2181, 2181, 2181,  626, 2181,  969,  969,  969,
      627,  628, 2181, 2181, 2181, 2181,  553, 2181,  554, 2181,
     2181, 2181,  624,  625, 2181,  624, 2181,  654, 2181, 2181,

     2181,  624,  625,  626,  624,  969,  969,  969,  627,  628,
      624,  625,  626,  624,  553, 2181,  554,  627,  628, 1814,
     2181,  626, 2181,  553, 2181,  554,  627,  628,  624,  625,
     2181,  624,  553, 2181,  554, 2181, 2181, 2181, 2181,  626,
     2181, 2181, 2181, 1815,  627,  628,  624,  625, 1816,  624,
      553, 2181,  554, 2181, 2181, 2181, 2181,  626, 2181, 2181,
     2181, 2181,  627,  628, 2181, 2181, 2181, 2181,  553, 1817,
      554,  624,  625, 2181,  624, 1818, 2181, 2181,  481,  482,
      482,  481,  626, 2181, 2181, 2181, 2181,  627,  628,  483,
     2181, 2181, 2181,  553, 2181,  554,  481,  482,  482,  481,

      485, 1819,  486, 2181, 2181, 2181, 2181,  483,  481,  482,
      482,  481, 2181, 2181, 2181, 2181, 2181, 1820,  485,  483,
      486, 2181,  548, 2181, 2181,  548, 2181, 1859, 2181, 2181,
      485, 2181,  486,  549, 1861, 1862,  482, 1861,  550,  551,
     1851, 2181, 2181, 2181,  553, 1550,  554, 2181,  481,  482,
      482,  481,  481,  482,  482,  481,  485, 1860,  876,  483,
     2181, 2181, 2181,  483, 2181, 2181, 2181, 2181, 2181, 2181,
      485, 2181,  486, 2181,  485, 2181,  486,  481,  482,  482,
      481,  578, 2181, 2181,  481,  482,  482,  481,  483, 2181,
     2181, 2181, 2181, 2181, 2181,  483, 2181, 1863, 2181,  485,

     2181,  486,  481,  482,  482,  481,  485, 2181,  486, 2181,
     2181, 2181, 2181,  483, 2181, 2181, 2181, 1864, 2181, 2181,
      481,  482,  482,  481,  485, 2181,  486,  481,  482,  482,
      481,  483, 2181, 1865, 2181, 2181, 2181, 2181,  483, 2181,
     2181,  511,  485, 2181,  486,  481,  482,  482,  481,  485,
     2181,  486, 2181, 2181, 2181, 2181,  483, 1866, 2181, 2181,
     2181, 2181,  481,  482,  482,  481, 2181,  485, 2181,  486,
     2181,  884, 2181,  483, 1867, 2181, 2181, 2181, 2181,  481,
      482,  482,  481, 2181,  485, 2181,  486, 2181, 2181, 2181,
      483, 2181, 2181, 2181, 2181, 2181,  481,  482,  482,  481,

     2181,  485, 2181,  486, 2181, 1868, 2181,  483, 2181, 2181,
     2181, 2181, 2181, 1869, 2181, 2181, 2181, 2181,  485, 2181,
      486,  481,  482,  482,  481,  481,  482,  482,  481, 2181,
      884, 2181,  483, 2181, 2181, 2181,  483, 2181, 2181, 2181,
     2181, 2181, 2181,  485, 2181,  486, 2181,  485, 2181,  486,
     2181, 2181, 2181, 2181, 2181,  481,  482,  482,  481, 2181,
     1870, 2181,  481,  482,  482,  481,  483, 2181, 2181, 2181,
     2181, 2181, 1871,  483, 2181, 2181, 2181,  485, 2181,  486,
     2181, 2181, 2181, 2181,  485, 2181,  486, 1872, 1267, 1268,
     1269, 1269, 1268, 1267, 1267, 1267, 1267, 1267, 1267, 1267,

     1270, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 2181, 2181,
     2181, 1271, 1267, 1272, 1267, 1267, 1267, 2181, 2181, 1875,
     2181, 2181, 1874, 2181, 2181,  481,  482,  482,  481, 2181,
     2181, 2181, 1267, 1267, 1267, 1873,  483, 2095, 1263, 2095,
     2095, 2181,  481,  482,  482,  481, 2181,  485, 2043,  486,
     2181, 2181, 2181,  483, 2181, 2181, 2181, 2181, 2181, 2096,
     1267, 1267, 1267, 2181,  485, 2181,  486,  481,  482,  482,
      481,  481,  482,  482,  481, 2181, 1876, 2181,  483, 2181,
     2181, 2181,  483, 2181, 2181, 2181, 2181, 2181, 2181,  485,
     2181,  486, 2181,  485,  884,  486,  481,  482,  482,  481,

     2181, 2181, 2181, 2181, 2181, 2181, 2181,  483,  481,  482,
      482,  481, 2181, 2181, 2181, 2181, 2181, 2181,  485,  483,
      486, 2181, 1878, 2181, 2181, 1877,  481,  482,  482,  481,
      485, 2181,  486, 2181, 2181,  548, 2181,  483,  548, 2181,
     2181, 2181, 2181, 2181, 2181, 2181,  549, 2181,  485, 2181,
      486,  550,  551,  884, 2181, 2181, 2181,  553,  548,  554,
     2181,  548, 2181, 2181, 2181, 1879, 1882,  548, 2181,  549,
      548, 2181, 2181, 2181,  550,  551,  548, 2181,  549,  548,
      553, 2181,  554,  550,  551,  548, 2181,  549,  548,  553,
      510,  554,  550,  551,  548, 2181,  549,  548,  553, 2181,

      554,  550,  551, 2181, 2181,  549, 2181,  553, 2181,  554,
      550,  551, 2181, 2181, 2181, 2181,  553,  548,  554, 2181,
      548, 2181, 2181, 1885, 2181, 1886,  548, 2181,  549,  548,
     2181,  579, 2181,  550,  551,  548, 2181,  549,  548,  553,
     1887,  554,  550,  551,  548,  958,  549,  548,  553, 2181,
      554,  550,  551, 2181, 2181,  549, 2181,  553, 2181,  554,
      550,  551, 2181, 2181, 1888, 2181,  553,  548,  554, 2181,
      548, 2181, 2181, 2181, 2181, 2181,  548, 2181,  549,  548,
     2181, 2181, 2181,  550,  551,  548, 1889,  549,  548,  553,
     2181,  554,  550,  551, 2181,  958,  549, 2181,  553, 1890,

      554,  550,  551, 2181, 2181, 2181, 2181,  553,  548,  554,
     2181,  548,  548, 2181, 2181,  548, 2181, 2181, 1891,  549,
     2181, 2181, 2181,  549,  550,  551, 2181, 2181,  550,  551,
      553, 2181,  554, 2181,  553, 2181,  554,  958, 1892, 1329,
     1330, 1329, 1329, 1330, 1329, 1329, 1329, 1329, 1329, 1329,
     1329, 1331, 1329, 1329, 1329, 1329, 1332, 1333, 1329, 2181,
     2181, 2181, 1334, 1329, 1335, 1329, 1329, 1329, 1894, 2181,
     2181,  548, 2181, 2181,  548, 2181, 1895, 2181, 2146, 1263,
     2095, 2146,  549, 1329, 1329, 1329, 1893,  550,  551, 2127,
     2181, 2181, 2181,  553, 2181,  554, 2181, 2181, 2181,  548,

     2096, 2181,  548,  548, 2181, 2181,  548, 2181, 2181, 2181,
      549, 1329, 1329, 1329,  549,  550,  551, 2181, 2181,  550,
      551,  553, 1896,  554, 2181,  553,  548,  554, 2181,  548,
     2181, 2181, 2181, 2181, 2181, 2181,  548,  549, 2181,  548,
     2181, 2181,  550,  551, 2181, 2181, 2181,  549,  553, 2181,
      554, 2181,  550,  551, 1898, 2181,  548, 1897,  553,  548,
      554, 2181, 2181, 1900, 1388, 1388, 1900,  549, 2150,  463,
     2150, 2150,  550,  551,  615, 2181, 2181, 2181,  553, 2043,
      554,  624,  625,  958,  624, 1389, 2181,  618, 2181, 2181,
     2089, 2181,  626, 1899, 2181, 2181, 2181,  627,  628,  624,

      625, 2181,  624,  553, 2181,  554, 2181, 2181,  624,  625,
      626,  624, 1905, 2181, 2181,  627,  628, 2181, 2181,  626,
      578,  553, 2181,  554,  627,  628, 2181, 2181,  624,  625,
      553,  624,  554, 2181, 2181, 2181, 2181, 2181, 2181,  626,
      624,  625, 2181,  624,  627,  628, 2181, 2181, 1906, 2181,
      553,  626,  554, 2181, 2181, 2181,  627,  628,  624,  625,
     2181,  624,  553, 2181,  554, 2181, 2181,  653, 2181,  626,
      624,  625, 2181,  624,  627,  628, 2181, 1907, 2181, 2181,
      553,  626,  554, 2181, 2181, 2181,  627,  628, 2181, 2181,
      624,  625,  553,  624,  554, 2181, 2181, 2181, 2181,  624,

      625,  626,  624, 2181, 2181, 1908,  627,  628, 2181, 2181,
      626, 2181,  553, 2181,  554,  627,  628,  624,  625, 1909,
      624,  553,  654,  554, 2181, 2181, 2181, 2181,  626, 2181,
     2181, 2181, 2181,  627,  628,  624,  625, 2181,  624,  553,
     2181,  554, 2181, 2181, 2181, 1910,  626, 2181, 2181, 2181,
     1040,  627,  628, 2181, 2181,  624,  625,  553,  624,  554,
     2181, 2181, 2181, 2181, 1911, 2181,  626,  624,  625, 2181,
      624,  627,  628, 2181, 2181, 2181, 2181,  553,  626,  554,
     2181, 2181, 2181,  627,  628,  624,  625, 2181,  624,  553,
     2181,  554, 2181, 2181, 2181, 1912,  626,  624,  625, 2181,

      624,  627,  628, 2181, 2181, 2181, 1040,  553,  626,  554,
     2181, 2181, 2181,  627,  628, 2181, 2181, 2181, 2181,  553,
     2181,  554,  624,  625, 2181,  624,  624,  625, 2181,  624,
     2181, 1913, 2181,  626, 2181, 2181, 1914,  626,  627,  628,
     2181, 2181,  627,  628,  553, 2181,  554, 2181,  553, 2181,
      554, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 1915,
     1329, 1392, 1393, 1329, 1392, 1329, 1329, 1329, 1329, 1329,
     1329, 1329, 1394, 1329, 1329, 1329, 1329, 1395, 1396, 1329,
     2181, 2181, 1917, 1334, 1329, 1335, 1329, 1329, 1329, 2181,
     1918, 2181,  624,  625, 2181,  624, 2181, 2181, 2181, 2181,

     2181, 2181, 2181,  626, 1329, 1329, 1329, 1916,  627,  628,
     2181, 2181, 2181, 2181,  553, 2181,  554, 2181, 2181, 2181,
      624,  625, 2181,  624,  624,  625, 2181,  624, 2181, 2181,
     2181,  626, 1329, 1329, 1329,  626,  627,  628, 2181, 2181,
      627,  628,  553, 1919,  554, 2181,  553, 2181,  554,  624,
      625, 2181,  624,  624,  625, 2181,  624, 2181, 2181, 2181,
      626, 2181, 2181, 2181,  626,  627,  628, 2181, 2181,  627,
      628,  553, 1040,  554, 2181,  553, 2181,  554, 2181, 2181,
      624,  625, 1920,  624, 2181, 2181, 2181, 2181, 2181, 2181,
     2181,  626,  624,  625, 2181,  624,  627,  628, 2181, 2181,

     1921, 2181,  553,  626,  554, 2181, 2181, 2181,  627,  628,
     1040, 2181, 2181, 2181,  553, 2181,  554,  481,  482,  482,
      481, 1852, 1263, 1263, 1852, 2181, 2181, 2181,  483, 2181,
     2181, 2181,  483, 2181, 2181, 2181, 2181, 1922, 2181,  485,
     2181,  486, 2181, 1264, 2181, 1854, 1852, 1263, 1263, 1852,
      481,  482,  482,  481, 2181, 2181,  653,  483, 2181, 2181,
     2181,  483, 2181, 2181, 1944, 2181, 2181, 2181, 1264, 2181,
     1854, 2181,  485, 2181,  486, 2181,  481,  482,  482,  481,
     1861, 1862,  482, 1861, 2181, 2181, 2181,  483, 2181, 2181,
     2181, 1550, 2181, 2181, 2181, 2181, 1948, 1945,  485, 2181,

      486, 2181,  485, 2181,  876,  481,  482,  482,  481,  481,
      482,  482,  481, 2181, 2181, 2181,  483, 2181, 2181, 2181,
      483, 2181, 2181, 2181, 2181, 2181, 2181,  485, 2181,  486,
     2181,  485, 2181,  486,  481,  482,  482,  481, 2181, 2181,
      884, 2181, 2181, 2181, 2181,  483,  481,  482,  482,  481,
     2181, 2181, 1949, 2181, 2181, 2181,  485,  483,  486, 2181,
      511, 2181, 2181,  481,  482,  482,  481, 2181,  485, 2181,
      486, 2181, 2181, 2181,  483,  481,  482,  482,  481, 2181,
     1950, 2181, 2181, 2181, 2181,  485,  483,  486, 2181, 2181,
     2181, 2181, 1953, 1954,  482, 1953, 2181,  485, 2181,  486,

     2181, 2181, 2181,  483,  481,  482,  482,  481, 2181, 2181,
      884, 2181, 1951, 2181,  485,  483,  486, 2181, 2181, 2181,
     2181, 2181,  481,  482,  482,  481,  485, 2181,  486,  481,
      482,  482,  481,  483, 2181, 2181, 2181, 1952, 2181, 2181,
      483, 2181, 2181, 2181,  485, 2181,  486,  481,  482,  482,
      481,  485, 2181,  486, 2181, 1955, 2181, 2181,  483,  481,
      482,  482,  481, 2181, 2181, 2181, 2181, 2181, 2181,  485,
      483,  486, 2181, 2181, 2181, 2181,  481,  482,  482,  481,
     2181,  485, 2181,  486,  884, 2181, 2181,  483, 2181, 2181,
     1956, 2181, 2181, 2181, 2181, 2181, 1957, 2181,  485, 2181,

      486,  481,  482,  482,  481, 2181, 2181, 2181,  481,  482,
      482,  481,  483, 2181, 2181, 2181, 2181, 2181, 1958,  483,
     2181, 2181, 2181,  485, 2181,  486, 2181, 1959, 2181, 2181,
      485, 2181,  486,  481,  482,  482,  481, 2181, 2181, 2181,
      481,  482,  482,  481,  483, 2181, 2181, 2181, 2181, 2181,
      548,  483, 2181,  548, 2181,  485, 2181,  486, 2181,  884,
     1960,  549,  485, 2181,  486,  548,  550,  551,  548, 2181,
     2181, 2181,  553, 2181,  554, 2181,  549,  548, 2181, 2181,
      548,  550,  551,  510, 2181, 2181, 2181,  553,  549,  554,
     2181,  884,  548,  550,  551,  548, 1963, 2181, 2181,  553,

     2181,  554, 2181,  549,  548, 2181, 2181,  548,  550,  551,
     2181, 2181, 2181, 2181,  553,  549,  554, 2181, 2181, 2181,
      550,  551,  548, 2181, 1964,  548,  553, 2181,  554,  958,
     2181,  548, 2181,  549,  548, 2181, 2181, 2181,  550,  551,
     2181, 2181,  549,  579,  553, 2181,  554,  550,  551,  548,
     1965, 2181,  548,  553, 2181,  554, 2181, 2181, 2181,  548,
      549, 2181,  548, 2181, 2181,  550,  551, 2181, 2181, 2181,
      549,  553, 2181,  554,  548,  550,  551,  548, 2181, 2181,
     1966,  553, 2181,  554,  548,  549,  958,  548, 2181, 2181,
      550,  551, 2181, 2181, 2181,  549,  553, 2181,  554, 2181,

      550,  551,  548, 2181, 2181,  548,  553, 2181,  554, 2181,
     1967,  958, 2181,  549, 2181, 2181, 2181,  548,  550,  551,
      548, 2181, 2181, 2181,  553, 2181,  554, 2181,  549, 2181,
     2181, 2181,  548,  550,  551,  548,  958, 2181, 2181,  553,
     2181,  554, 2181,  549,  548, 1968, 2181,  548,  550,  551,
     2181, 1969, 2181, 2181,  553,  549,  554, 2181, 2181, 2181,
      550,  551,  548, 2181, 2181,  548,  553, 2181,  554, 2181,
     2181,  548, 2181,  549,  548, 2181, 1970, 2181,  550,  551,
     2181, 2181,  549,  958,  553, 2181,  554,  550,  551, 2181,
     2181, 2181, 2181,  553,  548,  554, 2181,  548, 1900, 1388,

     1388, 1900, 2181, 1971, 2181,  549, 2181, 2181, 2181,  615,
      550,  551, 2181,  958,  624,  625,  553,  624,  554, 2181,
     1389,  578,  618, 2181, 2181,  626,  624,  625, 2181,  624,
      627,  628, 2181, 2181, 2181, 2181,  553,  626,  554, 2181,
     2181, 2181,  627,  628, 2181,  958,  624,  625,  553,  624,
      554, 2181, 2181, 2181, 2181,  624,  625,  626,  624, 2181,
     1974, 2181,  627,  628,  624,  625,  626,  624,  553, 2181,
      554,  627,  628, 2181, 2181,  626, 2181,  553, 2181,  554,
      627,  628, 2181, 2181, 2181, 2181,  553, 2181,  554, 2181,
     1040,  624,  625, 1975,  624, 2181, 2181, 2181, 2181, 2181,

      624,  625,  626,  624, 2181, 2181,  654,  627,  628, 2181,
     1976,  626, 2181,  553, 2181,  554,  627,  628,  624,  625,
     2181,  624,  553, 2181,  554, 2181, 2181, 2181, 2181,  626,
      624,  625, 2181,  624,  627,  628, 2181, 2181, 2181, 2181,
      553,  626,  554, 2181, 2181, 2181,  627,  628, 2181, 1977,
      624,  625,  553,  624,  554, 1040, 2181, 2181, 2181, 2181,
     2181,  626,  624,  625, 2181,  624,  627,  628, 2181, 2181,
     2181, 2181,  553,  626,  554, 2181, 2181, 2181,  627,  628,
     1040, 1978,  624,  625,  553,  624,  554, 2181, 2181, 2181,
     2181,  624,  625,  626,  624, 2181, 2181, 2181,  627,  628,

      624,  625,  626,  624,  553, 2181,  554,  627,  628, 2181,
     2181,  626, 1040,  553, 2181,  554,  627,  628,  624,  625,
     2181,  624,  553, 1979,  554, 2181, 2181, 2181, 2181,  626,
     2181, 1980, 2181, 2181,  627,  628,  624,  625, 2181,  624,
      553, 2181,  554, 2181, 2181,  624,  625,  626,  624, 2181,
     1981, 1040,  627,  628,  624,  625,  626,  624,  553, 2181,
      554,  627,  628, 2181, 2181,  626, 2181,  553, 2181,  554,
      627,  628,  481,  482,  482,  481,  553, 1982,  554, 1852,
     1263, 1263, 1852,  483, 2181, 2181, 2181, 1040, 2181, 2181,
      483, 2181, 2181, 2181,  485,  653,  486,  481,  482,  482,

      481, 1264, 2181, 1854, 2181, 1040, 2181, 2181,  483,  481,
      482,  482,  481, 2181, 2181, 2181, 2181, 2181, 2181,  485,
      483,  486, 2181, 2181, 2181, 2181,  481,  482,  482,  481,
     2181,  485, 2181,  486, 1997, 2181, 1995,  483, 2181, 2181,
     2181, 1996, 2181,  481,  482,  482,  481, 2181,  485, 2181,
      486, 2181, 2181, 2181,  483, 1953, 1954,  482, 1953, 2181,
      481,  482,  482,  481, 2181,  485,  483,  486, 2181, 2181,
     2181,  483, 1998, 2181, 2181, 1999, 2181,  485, 2181,  876,
     2181, 2181,  485, 2181,  486, 2181, 2181, 2181, 2181, 2040,
     2181, 2181, 2181, 2181, 1552, 2000, 2001, 1269, 2002, 2001,

     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2003, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2004, 2004, 2004, 2005, 2000,
     2006, 2000, 2000, 2000, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2000,
     2000, 2000, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2000, 2000, 2000,
      481,  482,  482,  481,  481,  482,  482,  481, 2181, 2181,
     2181,  483, 2181, 2181, 2181,  483, 2181, 2181, 2181, 2181,
     2181, 2181,  485, 2181,  486, 2181,  485, 2181,  486,  481,

      482,  482,  481,  481,  482,  482,  481, 2181, 2181, 2181,
      483, 2181, 2181, 2181,  483, 2181, 2181, 2181, 2181, 2181,
      884,  485, 2181,  486, 2181,  485, 2181,  486,  481,  482,
      482,  481,  548, 2181, 2181,  548, 2007, 2181, 2181,  483,
     2181, 2181, 2181,  549, 2181, 2181, 2008, 2181,  550,  551,
      485, 2181,  486, 2181,  553, 2181,  554, 2181, 2009, 2010,
     2011, 2012, 2012, 2011, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2013, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2181,
     2181, 2181, 2014, 2010, 2015, 2010, 2010, 2010, 2181, 2181,
     2181,  548,  884, 2181,  548, 2018, 2181, 2181, 1852, 1263,

     1263, 1852,  549, 2010, 2010, 2010, 2016,  550,  551,  483,
     2181, 2181, 2181,  553, 2181,  554, 2181, 2181,  548, 2181,
     1264,  548, 1854, 2181, 2181, 2181, 2181,  548, 2017,  549,
      548, 2010, 2010, 2010,  550,  551,  548, 2181,  549,  548,
      553, 2181,  554,  550,  551, 2039, 2181,  549, 2181,  553,
     2181,  554,  550,  551, 2181, 2181, 2181, 2181,  553,  548,
      554, 2181,  548,  548, 2181, 2181,  548, 2019, 2181, 2181,
      549, 2181, 2181, 2181,  549,  550,  551, 2181,  958,  550,
      551,  553, 2181,  554, 2181,  553,  958,  554, 2181,  548,
     2181, 2181,  548, 2181, 2181, 2181, 2181, 2181,  548, 2181,

      549,  548, 2181, 2181, 2181,  550,  551, 2181, 2181,  549,
     2021,  553, 2181,  554,  550,  551,  624,  625, 2181,  624,
      553, 2020,  554, 2181, 2181,  624,  625,  626,  624, 2181,
     2181, 2181,  627,  628,  624,  625,  626,  624,  553, 2181,
      554,  627,  628, 2181, 2022,  626, 2181,  553, 2181,  554,
      627,  628, 2181, 2023,  624,  625,  553,  624,  554, 2181,
     2181, 2181,  958,  624,  625,  626,  624, 2181, 2181, 2181,
      627,  628, 2181, 2181,  626, 2181,  553, 2181,  554,  627,
      628, 2181, 2181, 2025, 2181,  553, 2181,  554, 2024, 2181,
      624,  625, 2181,  624, 2181, 2181, 2181, 2181, 2181,  624,

      625,  626,  624, 2181, 2181, 1040,  627,  628,  624,  625,
      626,  624,  553, 1040,  554,  627,  628,  624,  625,  626,
      624,  553, 2181,  554,  627,  628, 2181, 2181,  626, 2181,
      553, 2181,  554,  627,  628, 2181, 2181, 2181, 2181,  553,
     2181,  554,  481,  482,  482,  481, 2027, 2181, 2181, 2181,
     2181, 2181, 2026,  483,  481,  482,  482,  481, 2181, 2181,
     2181, 2181, 2181, 2028,  485,  483,  486, 2181, 2181, 2181,
     2181, 2181,  481,  482,  482,  481,  485, 2181,  486, 2181,
     2181, 1040, 2181,  483, 2044,  482, 2045, 2044, 2181,  481,
      482,  482,  481, 2181,  485, 2046,  486, 2181, 2181, 2181,

      483, 2181, 2038, 2181, 2181, 2181, 2047, 2181, 2048, 2181,
     2181,  485, 2181,  486, 2181, 2181, 2181, 2181,  884, 2041,
     2042, 2050,  482, 2045, 2050, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2051, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2059, 2181, 2181, 2047, 2042, 2052, 2042, 2042, 2042, 2181,
     2181,  481,  482,  482,  481, 2181, 2181, 2181,  481,  482,
      482,  481,  483, 2181, 2042, 2042, 2042, 2181, 2181,  483,
     2181, 2181, 2181,  485, 2181,  486, 2062,  482,  482, 2062,
      485, 2181,  486, 2181, 2181, 2181, 2181, 1550,  481,  482,
      482,  481, 2042, 2042, 2042, 2181, 2181, 2181,  485,  483,

     2063, 2181,  548, 2181, 2181,  548, 2181, 2181, 2181, 2181,
      485, 2181,  486,  549, 2060, 2181, 2181, 2181,  550,  551,
     2181, 2181,  548, 2181,  553,  548,  554, 2181, 2061, 2181,
     2181, 2067,  548,  549, 2181,  548, 2181, 2181,  550,  551,
     2181, 2181,  548,  549,  553,  548,  554, 2181,  550,  551,
     2181, 2181,  548,  549,  553,  548,  554, 2181,  550,  551,
     2181, 2181, 2181,  549,  553, 2181,  554,  548,  550,  551,
      548, 2181, 2181, 2181,  553, 2181,  554, 2181,  549, 2068,
     2181, 2181, 2181,  550,  551, 2181,  958,  624,  625,  553,
      624,  554, 2181, 2069, 2181, 2181,  624,  625,  626,  624,

     2181, 2181, 2181,  627,  628, 2181, 2181,  626, 2181,  553,
     2181,  554,  627,  628, 2181, 2070, 2072, 2181,  553, 2181,
      554, 2181,  624,  625, 2181,  624, 2181, 2181, 2181, 2181,
     2181,  624,  625,  626,  624, 2181, 2181, 2071,  627,  628,
      624,  625,  626,  624,  553, 2181,  554,  627,  628, 2181,
     2181,  626, 2181,  553, 2181,  554,  627,  628, 2181, 2181,
     1040, 2181,  553, 2181,  554, 2181, 2181,  624,  625, 2073,
      624, 2181, 2181, 2181,  481,  482,  482,  481,  626, 2181,
     2181, 2181, 2074,  627,  628,  483, 2181, 2181, 2181,  553,
     2181,  554, 2181, 2181, 2181, 2181,  485, 2181,  486, 1852,

     1263, 1263, 1852, 2075,  481,  482,  482,  481, 2181, 2181,
      483,  481,  482,  482,  481,  483, 2181, 2181, 2181, 2181,
     2181, 1264,  483, 1854, 2181, 2181,  485, 2181,  486, 2044,
      482, 2045, 2044,  485, 2181,  486, 2080, 2076, 2082, 2181,
     2046, 2181, 2181, 2050,  482, 2045, 2050, 2181, 2181, 2042,
     2181, 2047, 2181, 2048, 2051, 2055, 2056, 2181, 2181, 2181,
     2057, 2057, 2042, 2081, 2181, 2047, 2181, 2048,  548, 2181,
     2058,  548, 2181, 2181, 2083, 2062,  482,  482, 2062,  549,
     2181, 2181, 2181, 2181,  550,  551, 1550, 2181, 2181, 2181,
      553, 2181,  554, 2181, 2181, 2181, 2181,  485, 2181, 2063,

     2181, 2181, 2101, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2042, 2056, 2042, 2087, 1257,
     2087, 2087, 2042, 2042, 2042, 2088, 2042, 2042, 2042, 2043,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2089, 2042, 2042, 2042, 2042, 2042, 2090, 2090, 2090, 2090,
     2090, 2090, 2090, 2090, 2090, 2090, 2090, 2090, 2090, 2090,
     2090, 2042, 2042, 2042, 2090, 2090, 2090, 2090, 2090, 2090,
     2090, 2090, 2090, 2090, 2090, 2090, 2090, 2090, 2091, 2090,
     2090, 2090, 2090, 2090, 2090, 2090, 2090, 2090, 2090, 2042,
     2042, 2092, 2042, 2181, 2181, 2181, 2181, 2181, 2055, 2056,

     2181, 2181, 2181, 2057, 2057, 2042,  481,  482,  482,  481,
     2181, 2181, 2181, 2058, 2181, 2181, 2181,  483,  481,  482,
      482,  481, 2181, 2181, 2181, 2181, 2181, 2181,  485,  483,
      486, 2181,  548, 2181, 2181,  548, 2181, 2181, 2181, 2181,
      485, 2181,  486,  549,  481,  482,  482,  481,  550,  551,
     2181, 2181, 2181, 2181,  553,  483,  554, 2181, 2042, 2056,
     2181,  548, 2181, 2181,  548, 2181,  485, 2181,  486, 2181,
     2097, 2181,  549, 2181, 2181, 2181,  548,  550,  551,  548,
     2181, 2181,  884,  553, 2181,  554,  548,  549, 2181,  548,
     2181, 2181,  550,  551, 2181, 2098, 2103,  549,  553, 2181,

      554, 2181,  550,  551,  624,  625, 2181,  624,  553, 2181,
      554, 2181, 2181, 2181, 2181,  626, 2181, 2181, 2181, 2181,
      627,  628, 2181, 2181, 2102, 2181,  553, 2181,  554, 2181,
      624,  625, 2181,  624, 2181, 2181, 2181, 2104, 2105, 2181,
      958,  626,  624,  625, 2181,  624,  627,  628, 2181, 2181,
     2181, 2181,  553,  626,  554, 2181, 2181, 2181,  627,  628,
      624,  625, 2181,  624,  553, 2181,  554, 2181, 2181, 2181,
     2181,  626,  624,  625, 2181,  624,  627,  628, 2181, 2181,
     2181, 2181,  553,  626,  554, 2181, 2181, 2181,  627,  628,
     2181, 2181, 2181, 2106,  553, 2181,  554, 1852, 1263, 1263,

     1852, 2181, 2181, 2181, 2181, 2181, 2107, 2181,  483,  481,
      482,  482,  481, 2181, 2181, 2181, 2181, 2181, 2181, 1264,
      483, 1854, 2181, 2108, 1040, 2181,  481,  482,  482,  481,
     2181,  485, 2181,  486, 2181, 2181, 2181,  483, 2181,  884,
     2181, 2181, 2181,  481,  482,  482,  481, 2181,  485, 2181,
      486, 2181,  548, 2181,  483,  548, 2181, 2113, 2181, 2181,
     2181, 2181, 2181,  549, 2181,  485, 2181,  486,  550,  551,
     2181, 2181, 2181, 2181,  553, 2181,  554, 2181, 2181, 2181,
     2181, 2181,  958, 2181, 2181, 2181, 2181, 2181, 2181, 2121,
      884, 2042, 2117,  539, 2117, 2117, 2042, 2042, 2042, 2118,

     2042, 2042, 2042, 2043, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119,
     2119, 2119, 2119, 2119, 2119, 2042, 2042, 2042, 2119, 2119,
     2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119,
     2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119,
     2119, 2119, 2119, 2042, 2042, 2042,  481,  482,  482,  481,
      548, 2181, 2181,  548, 2181, 2181, 2181,  483, 2181, 2181,
      548,  549, 2181,  548, 2181, 2181,  550,  551,  485, 2181,
      486,  549,  553, 2181,  554,  548,  550,  551,  548, 2181,

     2181, 2181,  553, 2181,  554, 2181,  549,  624,  625, 2181,
      624,  550,  551, 2181, 2181, 2181,  884,  553,  626,  554,
     2181, 2181, 2181,  627,  628, 2181, 2123,  624,  625,  553,
      624,  554, 2181, 2181,  958, 2181, 2181, 1040,  626,  624,
      625, 2181,  624,  627,  628,  958, 2181, 2181, 2181,  553,
      626,  554, 2181, 2181, 2181,  627,  628,  624,  625, 2181,
      624,  553, 2181,  554, 2111,  482, 2045, 2111,  626, 2181,
     2181, 2181, 2181,  627,  628, 2127, 2181, 2181, 2181,  553,
     2181,  554, 2181, 2181, 2181, 2124, 2047, 2181, 2048, 2181,
     2181, 1040, 1852, 1263, 1263, 1852, 2181,  481,  482,  482,

      481,  548, 2181,  483,  548, 2181, 2181, 1040,  483, 2181,
     2181, 2181,  549, 2181, 1264, 2181, 1854,  550,  551,  485,
     2181,  486, 2181,  553, 2181,  554, 2181, 2149,  463, 2150,
     2149, 2156, 1263, 2095, 2156, 2181, 2181, 2181, 2043, 2181,
     2181, 2181, 2051, 2181, 2181, 2181, 2141, 2181, 2181, 2089,
     2142, 2048, 2181, 2096, 2128, 2042, 2129,  871, 2129, 2129,
     2042, 2042, 2042, 2130, 2042, 2042, 2042, 2043, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2089, 2042,
     2042, 2042, 2042, 2042, 2131, 2131, 2131, 2131, 2131, 2131,
     2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2042,

     2042, 2042, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131,
     2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131,
     2131, 2131, 2131, 2131, 2131, 2131, 2131, 2042, 2042, 2132,
     2042, 2134, 2181, 2042, 2134, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2051, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2135, 2135, 2135, 2042, 2042, 2048, 2042, 2042, 2042, 2135,
     2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135,
     2135, 2135, 2135, 2135, 2042, 2042, 2042, 2135, 2135, 2135,
     2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135,
     2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135,

     2135, 2135, 2042, 2042, 2042, 2042, 2136, 1731, 2136, 2136,
     2042, 2042, 2042, 2137, 2042, 2042, 2042, 2043, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2138, 2138, 2138, 2138, 2138, 2138,
     2138, 2138, 2138, 2138, 2138, 2138, 2138, 2138, 2138, 2042,
     2042, 2042, 2138, 2138, 2138, 2138, 2138, 2138, 2138, 2138,
     2138, 2138, 2138, 2138, 2138, 2138, 2139, 2138, 2138, 2138,
     2138, 2138, 2138, 2138, 2138, 2138, 2138, 2042, 2042, 2140,
      624,  625, 2181,  624, 2181, 2181, 2181, 2181, 2181, 2181,
     2181,  626, 2181, 2181, 2181, 2181,  627,  628, 2181, 2181,

     2181, 2181,  553, 2181,  554, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2143,
     2042, 2146, 1263, 2095, 2146, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2112, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2147, 2147, 2147, 2096, 2042, 2148, 2042, 2042, 2042, 2147,
     2147, 2147, 2147, 2147, 2147, 2147, 2147, 2147, 2147, 2147,
     2147, 2147, 2147, 2147, 2042, 2042, 2042, 2147, 2147, 2147,
     2147, 2147, 2147, 2147, 2147, 2147, 2147, 2147, 2147, 2147,
     2147, 2147, 2147, 2147, 2147, 2147, 2147, 2147, 2147, 2147,

     2147, 2147, 2042, 2042, 2042, 2042, 2149,  463, 2150, 2149,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2043, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2151, 2151, 2151, 2089, 2042,
     2048, 2042, 2042, 2042, 2151, 2151, 2151, 2151, 2151, 2151,
     2151, 2151, 2151, 2151, 2151, 2151, 2151, 2151, 2151, 2042,
     2042, 2042, 2151, 2151, 2151, 2151, 2151, 2151, 2151, 2151,
     2151, 2151, 2151, 2151, 2151, 2151, 2151, 2151, 2151, 2151,
     2151, 2151, 2151, 2151, 2151, 2151, 2151, 2042, 2042, 2042,
     2042, 2152,  857, 2152, 2152, 2042, 2042, 2042, 2153, 2042,
     2042, 2042, 2043, 2042, 2042, 2042, 2042, 2042, 2042, 2042,

     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2154,
     2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154,
     2154, 2154, 2154, 2154, 2042, 2042, 2042, 2154, 2154, 2154,
     2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154,
     2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154,
     2154, 2154, 2042, 2042, 2042, 2042, 2158, 1856, 2158, 2158,
     2042, 2042, 2042, 2159, 2042, 2042, 2042, 2043, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2160, 2160, 2160, 2160, 2160, 2160,
     2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2042,

     2042, 2042, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160,
     2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160,
     2160, 2160, 2160, 2160, 2160, 2160, 2160, 2042, 2042, 2042,
      481,  482,  482,  481,  548, 2181, 2181,  548, 2181, 2181,
     2181,  483, 2181, 2181,  548,  549, 2181,  548, 2181, 2181,
      550,  551,  485, 2181,  486,  549,  553, 2181,  554, 2181,
      550,  551,  624,  625, 2181,  624,  553, 2181,  554, 2181,
     2181, 2181, 2181,  626, 2181, 2181, 2181, 2161,  627,  628,
     2181, 2162, 2181, 2181,  553, 2181,  554, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,

     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2171, 2181, 2163,
     2042, 2164, 2181, 2042, 2164, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2043, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2165, 2165, 2165, 2042, 2042, 2048, 2042, 2042, 2042, 2165,
     2165, 2165, 2165, 2165, 2165, 2165, 2165, 2165, 2165, 2165,
     2165, 2165, 2165, 2165, 2042, 2042, 2042, 2165, 2165, 2165,
     2165, 2165, 2165, 2165, 2165, 2165, 2165, 2165, 2165, 2165,
     2165, 2165, 2165, 2165, 2165, 2165, 2165, 2165, 2165, 2165,
     2165, 2165, 2042, 2042, 2042, 2042, 2168, 2181, 2042, 2168,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2051, 2042, 2042,

     2042, 2042, 2042, 2042, 2042, 2169, 2169, 2169, 2042, 2042,
     2042, 2042, 2042, 2042, 2169, 2169, 2169, 2169, 2169, 2169,
     2169, 2169, 2169, 2169, 2169, 2169, 2169, 2169, 2169, 2042,
     2042, 2042, 2169, 2169, 2169, 2169, 2169, 2169, 2169, 2169,
     2169, 2169, 2169, 2169, 2169, 2169, 2169, 2169, 2169, 2169,
     2169, 2169, 2169, 2169, 2169, 2169, 2169, 2042, 2042, 2042,
      481,  482,  482,  481,  624,  625, 2181,  624, 2181, 2181,
     2181,  483, 2181, 2181, 2181,  626, 2181, 2181, 2181, 2181,
      627,  628,  485, 2181,  486, 2181,  553, 2181,  554,  481,
      482,  482,  481,  548, 2181, 2181,  548, 2181, 2181, 2181,

      483, 2181, 2181, 2181,  549, 2181, 2181, 2181, 2181,  550,
      551,  485, 2181,  486, 2181,  553, 2181,  554,  624,  625,
     2181,  624, 2181, 2170, 2181, 2181, 2181, 2172, 2181,  626,
     2181, 2181, 2181, 2181,  627,  628, 2181, 2181, 2181, 2181,
      553, 2181,  554, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181,  884, 2181, 2181, 2181,  958, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 1040,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,

       58,   58,   58,   58,   58,   58,   58,   58,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   86,   86,
       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
       86,   86,   86,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,

       96,   96,   96,   96,   96,   96,   96,   96,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  316,  316,  316,  316,  316,  316,  316,
      316,  316,  316,  316,  316,  316,  316,  316,  316,  316,

      316,  316,  316,  316,  316,  316,  316,  316,  372,  372,
      372,  372,  372,  372,  372,  372,  372,  372,  372,  372,
      372,  372,  372,  372,  372,  372,  372,  372,  372,  372,
      372,  372,  372,  411,  411, 2181, 2181,  411, 2181,  411,
      411,  411,  411,  411,  411,  411,  411,  411,  411,  411,
      411,  411, 2181,  411,  411,  411,  411,  411,  415,  415,
     2181,  415,  415,  415,  415,  415,  415,  415,  415,  415,
      415,  415,  415,  415,  415,  415,  415,  415,  415,  415,
      415,  415,  415,  420,  420, 2181,  420,  420, 2181,  420,
      420,  420,  420,  420,  420,  420,  420,  420,  420,  420,

      420,  420,  420,  420,  420,  420,  420,  420,  428,  428,
      428,  428,  428,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  428,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  428,  436,  436, 2181,  436,  436,  436,  436,
      436,  436,  436, 2181,  436,  436, 2181,  436,  436,  436,
      436,  436,  436,  436,  436,  436,  436,  436,  446,  446,
     2181, 2181,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  446,  446,  454,  454, 2181,  454,  454,  454,  454,
      454,  454,  454, 2181,  454,  454,  454,  454,  454,  454,

      454,  454,  454,  454,  454,  454,  454,  454,  467,  467,
      467,  467, 2181,  467, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181,  467, 2181,  467,  467, 2181, 2181,  467, 2181,
     2181,  467,  470,  470, 2181,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  484,  484,  484,
      484, 2181, 2181, 2181,  484, 2181, 2181, 2181, 2181, 2181,
      484,  484,  484,  484,  484, 2181, 2181,  484,  541,  541,
      541,  541, 2181,  541, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181,  541,  541, 2181, 2181,  541,  552,

     2181, 2181,  552, 2181, 2181, 2181,  552, 2181, 2181,  552,
      552, 2181,  552,  552,  552,  552,  552, 2181, 2181,  552,
      610,  610,  610,  610, 2181,  610, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181,  610, 2181,  610,  610, 2181, 2181,
      610, 2181, 2181,  610,  616,  616,  616,  616, 2181, 2181,
     2181,  616, 2181, 2181, 2181, 2181, 2181,  616,  616,  616,
      616,  616, 2181, 2181,  616,  621,  621,  621,  621, 2181,
      621, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181,  621,  621, 2181, 2181,  621,  629,  629, 2181,  629,
     2181, 2181, 2181,  629, 2181, 2181,  629,  629, 2181,  629,

      629,  629,  629,  629, 2181, 2181,  629,  682, 2181, 2181,
      682,  682, 2181, 2181,  682,  691,  691, 2181,  691,  691,
     2181, 2181,  691,  699, 2181,  699, 2181, 2181,  699,  699,
     2181, 2181,  699,  702, 2181, 2181,  702,  702, 2181, 2181,
      702,  708, 2181, 2181,  708,  708, 2181, 2181,  708,  713,
      713, 2181,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  744, 2181, 2181,  744,  744, 2181,
     2181,  744,  749, 2181, 2181,  749, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181,  749,  749, 2181,  749,  749,

     2181, 2181,  749,  752, 2181, 2181,  752,  752, 2181, 2181,
      752,  767,  767, 2181,  767, 2181,  767,  767, 2181,  767,
      767,  767,  767,  767,  767,  767,  767,  767,  767,  767,
      767,  767,  767,  767,  767,  767,  770, 2181, 2181,  770,
      770, 2181, 2181,  770,  773,  773,  773,  773, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181,  773,  773, 2181,
      773,  773, 2181,  773,  773,  776,  776, 2181,  776,  776,
     2181, 2181,  776,  776,  776,  776,  776,  776,  776,  776,
      776,  776,  776,  776, 2181,  776,  776,  776,  776,  776,
      779,  779, 2181,  779,  779,  779,  779,  779,  779,  779,

      779,  779,  779,  779,  779,  779,  779,  779,  779,  779,
      779,  779,  779,  779,  779,  786, 2181, 2181,  786,  786,
     2181, 2181,  786,  411,  411, 2181, 2181,  411, 2181,  411,
      411,  411,  411,  411,  411,  411,  411,  411,  411,  411,
      411,  411, 2181,  411,  411,  411,  411,  411,  420,  420,
     2181,  420,  420, 2181,  420,  420,  420,  420,  420,  420,
      420,  420,  420,  420,  420,  420,  420,  420,  420,  420,
      420,  420,  420,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  428,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  428,  428,  428,  428,  428,  428,  436,  436,

     2181,  436,  436,  436,  436,  436,  436,  436, 2181,  436,
      436, 2181,  436,  436,  436,  436,  436,  436,  436,  436,
      436,  436,  436,  446,  446, 2181, 2181,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  454,  454,
     2181,  454,  454,  454,  454,  454,  454,  454, 2181,  454,
      454,  454,  454,  454,  454,  454,  454,  454,  454,  454,
      454,  454,  454,  484,  484,  484,  484, 2181, 2181, 2181,
      484, 2181, 2181, 2181, 2181, 2181,  484,  484,  484,  484,
      484, 2181, 2181,  484,  859,  859,  859,  859, 2181,  859,

     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
      859,  859, 2181, 2181,  859,  470,  470, 2181,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      868,  868,  868,  868, 2181,  868, 2181, 2181,  868,  868,
     2181, 2181, 2181, 2181,  868, 2181,  868,  868, 2181, 2181,
      868, 2181, 2181,  868,  878,  878, 2181,  878,  878, 2181,
      878,  878,  878,  878,  878,  878,  878, 2181,  878,  878,
      878,  878,  878,  878,  878,  878, 2181,  878,  878,  541,
      541,  541,  541, 2181,  541, 2181, 2181, 2181, 2181, 2181,

     2181, 2181, 2181, 2181, 2181,  541,  541, 2181, 2181,  541,
      949, 2181, 2181,  949, 2181, 2181, 2181,  949, 2181, 2181,
     2181, 2181, 2181,  949, 2181,  949,  949,  949, 2181, 2181,
      949,  953, 2181, 2181,  953, 2181, 2181, 2181, 2181, 2181,
      953, 2181, 2181, 2181, 2181, 2181, 2181,  953,  953, 2181,
     2181,  953,  552, 2181, 2181,  552, 2181, 2181, 2181,  552,
     2181, 2181,  552,  552, 2181,  552,  552,  552,  552,  552,
     2181, 2181,  552,  553, 2181, 2181,  553, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181,  553,  553,  553,  553,
      553, 2181, 2181,  553,  954,  954, 2181,  954,  954,  954,

      954,  954,  954,  954,  954,  954,  954,  954,  954,  954,
     2181,  954,  954,  954,  954,  954,  954,  954,  954,  616,
      616,  616,  616, 2181, 2181, 2181,  616, 2181, 2181, 2181,
     2181, 2181,  616,  616,  616,  616,  616, 2181, 2181,  616,
     1031, 1031, 1031, 1031, 2181, 1031, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 1031, 1031, 2181, 2181,
     1031, 1034, 1034, 2181, 1034, 1034, 2181, 1034, 1034, 2181,
     2181, 1034, 1034, 1034, 2181, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 2181, 2181, 1034,  621,  621,  621,  621,
     2181,  621, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,

     2181, 2181,  621,  621, 2181, 2181,  621, 1037, 2181, 2181,
     1037, 2181, 2181, 2181, 1037, 2181, 2181, 2181, 2181, 2181,
     1037, 2181, 2181, 1037, 1037, 2181, 2181, 1037,  629,  629,
     2181,  629, 2181, 2181, 2181,  629, 2181, 2181,  629,  629,
     2181,  629,  629,  629,  629,  629, 2181, 2181,  629,  682,
     2181, 2181,  682,  682, 2181, 2181,  682,  691,  691, 2181,
      691,  691, 2181, 2181,  691,  699, 2181,  699, 2181, 2181,
      699,  699, 2181, 2181,  699, 1108, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 1108, 1108, 2181, 2181,
     1108,  702, 2181, 2181,  702,  702, 2181, 2181,  702,  708,

     2181, 2181,  708,  708, 2181, 2181,  708,  713,  713, 2181,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  744, 2181, 2181,  744,  744, 2181, 2181,  744,
      749, 2181, 2181,  749, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181,  749,  749, 2181,  749,  749, 2181, 2181,
      749,  752, 2181, 2181,  752,  752, 2181, 2181,  752,  770,
     2181, 2181,  770,  770, 2181, 2181,  770, 1153, 1153, 2181,
     1153, 2181, 1153, 1153, 1153, 1153, 1153, 1153, 1153, 1153,
     1153, 1153, 1153, 1153, 1153, 1153, 2181, 1153, 1153, 1153,

     1153, 1153, 1155, 1155, 2181, 1155, 1155, 1155, 1155, 1155,
     1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155,
     1155, 1155, 1155, 1155, 1155, 1155, 1155,  773,  773,  773,
      773, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
      773,  773, 2181,  773,  773, 2181,  773,  773,  776,  776,
     2181,  776,  776, 2181, 2181,  776,  776,  776,  776,  776,
      776,  776,  776,  776,  776,  776,  776, 2181,  776,  776,
      776,  776,  776,  786, 2181, 2181,  786,  786, 2181, 2181,
      786, 1182, 1182, 1182, 1182, 1182, 1182, 1182, 1182, 1182,
     1182, 1182, 1182, 1182, 2181, 1182, 1182, 1182, 1182, 1182,

     1182, 1182, 1182, 1182, 1182, 1182, 1185, 1185, 1185, 1185,
     1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185,
     1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185,
     1185, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189,
     1189, 1189, 1189, 1189, 2181, 1189, 1189, 1189, 1189, 1189,
     1189, 1189, 1189, 1189, 1189, 1189, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1194, 1194, 1194, 1194, 1194, 1194, 1194, 1194, 1194,
     1194, 1194, 1194, 1194, 1194, 1194, 1194, 1194, 1194, 1194,

     1194, 1194, 1194, 1194, 1194, 1194, 1197, 1197, 1197, 1197,
     1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197,
     1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197,
     1197,  411,  411, 2181, 2181,  411, 2181,  411,  411,  411,
      411,  411,  411,  411,  411,  411,  411,  411,  411,  411,
     2181,  411,  411,  411,  411,  411, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200,
     1200, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,

     1202, 1202, 1202, 1202, 1202, 1202, 1204, 1204, 1204, 1204,
     1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204,
     1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204,
     1204, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207,
     1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207,
     1207, 1207, 1207, 1207, 1207, 1207,  420,  420, 2181,  420,
      420, 2181,  420,  420,  420,  420,  420,  420,  420,  420,
      420,  420,  420,  420,  420,  420,  420,  420,  420,  420,
      420, 1210, 1210, 1210, 1210, 1210, 1210, 1210, 1210, 1210,
     1210, 1210, 1210, 1210, 1210, 1210, 1210, 1210, 1210, 1210,

     1210, 1210, 1210, 1210, 1210, 1210, 1212, 1212, 1212, 1212,
     1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212,
     1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212,
     1212,  428,  428,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  428,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  428,  428,  428,  428, 1220, 1220, 1220, 1220,
     1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220,
     1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220, 1220,
     1220, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223,
     1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223,

     1223, 1223, 1223, 1223, 1223, 1223,  446,  446, 2181, 2181,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  446,
      446, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1228, 1228, 1228, 1228,
     1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228,
     1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228,
     1228, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,

     1233, 1233, 1233, 1233, 1233, 1233,  454,  454, 2181,  454,
      454,  454,  454,  454,  454,  454, 2181,  454,  454,  454,
      454,  454,  454,  454,  454,  454,  454,  454,  454,  454,
      454, 1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235,
     1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235,
     1235, 1235, 1235, 1235, 1235, 1235, 1238, 1238, 1238, 1238,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 1238,
     1238, 1238, 1238, 1238, 2181, 2181, 1238,  484,  484,  484,
      484, 2181, 2181, 2181,  484, 2181, 2181, 2181, 2181, 2181,
      484,  484,  484,  484,  484, 2181, 2181,  484,  859,  859,

      859,  859, 2181,  859, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181,  859,  859, 2181, 2181,  859, 1241,
     2181, 2181, 1241, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 1241, 2181, 1241, 1241, 1241, 2181, 2181, 1241,
      868,  868,  868,  868, 2181,  868, 2181, 2181,  868,  868,
     2181, 2181, 2181, 2181,  868, 2181,  868,  868, 2181, 2181,
      868, 2181, 2181,  868, 1248, 1248, 1248, 1248, 2181, 1248,
     2181, 2181, 1248, 2181, 2181, 2181, 2181, 1248, 1248, 2181,
     1248, 1248, 2181, 2181, 1248, 2181, 2181, 1248, 1251, 1251,
     1251, 1251, 2181, 1251, 2181, 2181, 2181, 2181, 2181, 2181,

     2181, 2181, 2181, 2181, 1251, 1251, 2181, 2181, 1251,  855,
      855,  855,  855, 2181,  855, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181,  855, 2181,  855,  855, 2181, 2181,  855,
     2181, 2181,  855,  879,  879, 2181,  879,  879, 2181,  879,
      879,  879,  879,  879, 2181, 2181, 2181,  879,  879,  879,
      879,  879,  879,  879,  879, 2181,  879,  879,  467,  467,
      467,  467, 2181,  467, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181,  467, 2181,  467,  467, 2181, 2181,  467, 2181,
     2181,  467,  878,  878, 2181,  878,  878, 2181,  878,  878,
      878,  878,  878,  878,  878, 2181,  878,  878,  878,  878,

      878,  878,  878,  878, 2181,  878,  878,  880,  880, 2181,
      880,  880, 2181,  880,  880, 2181, 2181,  880,  880,  880,
     2181,  880,  880,  880,  880,  880,  880,  880,  880, 2181,
     2181,  880,  949, 2181, 2181,  949, 2181, 2181, 2181,  949,
     2181, 2181, 2181, 2181, 2181,  949, 2181,  949,  949,  949,
     2181, 2181,  949,  953, 2181, 2181,  953, 2181, 2181, 2181,
     2181, 2181,  953, 2181, 2181, 2181, 2181, 2181, 2181,  953,
      953, 2181, 2181,  953, 1326, 2181, 2181, 1326, 2181, 2181,
     2181, 2181, 1326, 2181, 2181, 2181, 2181, 1326, 2181, 2181,
     1326, 1326, 2181, 2181, 1326,  954,  954, 2181,  954,  954,

      954,  954,  954,  954,  954,  954,  954,  954,  954,  954,
      954, 2181,  954,  954,  954,  954,  954,  954,  954,  954,
      552, 2181, 2181,  552, 2181, 2181, 2181,  552, 2181, 2181,
      552,  552, 2181,  552,  552,  552,  552,  552, 2181, 2181,
      552,  553, 2181, 2181,  553, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181,  553,  553,  553,  553,  553, 2181,
     2181,  553, 1382, 1382, 1382, 1382, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 1382, 1382, 2181, 1382, 1382,
     2181, 2181, 1382, 1031, 1031, 1031, 1031, 2181, 1031, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 1031,

     1031, 2181, 2181, 1031, 1384, 2181, 2181, 1384, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 1384, 2181, 2181,
     1384, 1384, 2181, 2181, 1384, 1028, 1028, 1028, 1028, 2181,
     1028, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 1028,
     2181, 1028, 1028, 2181, 2181, 1028, 2181, 2181, 1028,  610,
      610,  610,  610, 2181,  610, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181,  610, 2181,  610,  610, 2181, 2181,  610,
     2181, 2181,  610, 1034, 1034, 2181, 1034, 1034, 2181, 1034,
     1034, 2181, 2181, 1034, 1034, 1034, 2181, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 2181, 2181, 1034, 1037, 2181,

     2181, 1037, 2181, 2181, 2181, 1037, 2181, 2181, 2181, 2181,
     2181, 1037, 2181, 2181, 1037, 1037, 2181, 2181, 1037,  629,
      629, 2181,  629, 2181, 2181, 2181,  629, 2181, 2181,  629,
      629, 2181,  629,  629,  629,  629,  629, 2181, 2181,  629,
     1443, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 1443, 1443, 2181, 2181, 1443, 1444, 2181, 1444, 2181,
     2181, 1444, 1444, 2181, 2181, 1444,  702, 2181, 2181,  702,
      702, 2181, 2181,  702,  708, 2181, 2181,  708,  708, 2181,
     2181,  708, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454,
     1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454,

     1454, 1454, 1454, 1454, 1454, 1454, 1454, 1458, 1458, 1458,
     1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458,
     1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458,
     1458, 1458,  713,  713, 2181,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713,  713, 1462, 1462, 1462,
     1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462,
     1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462, 1462,
     1462, 1462, 1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465,
     1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465,

     1465, 1465, 1465, 1465, 1465, 1465, 1465,  744, 2181, 2181,
      744,  744, 2181, 2181,  744,  752, 2181, 2181,  752,  752,
     2181, 2181,  752, 1487, 1487, 2181, 1487, 2181, 1487, 1487,
     1487, 1487, 1487, 1487, 1487, 1487, 1487, 1487, 1487, 1487,
     1487, 1487, 2181, 1487, 1487, 1487, 1487, 1487, 1490, 1490,
     1490, 1490, 1490, 1490, 1490, 1490, 1490, 1490, 1490, 1490,
     1490, 1490, 1490, 1490, 1490, 1490, 1490, 1490, 1490, 1490,
     1490, 1490, 1490, 1493, 1493, 1493, 1493, 1493, 1493, 1493,
     1493, 1493, 1493, 1493, 1493, 1493, 1493, 1493, 1493, 1493,
     1493, 1493, 1493, 1493, 1493, 1493, 1493, 1493,  776,  776,

     2181,  776,  776, 2181, 2181,  776,  776,  776,  776,  776,
      776,  776,  776,  776,  776,  776,  776, 2181,  776,  776,
      776,  776,  776, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
     1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
     1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1498, 1498,
     1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498,
     1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498,
     1498, 1498, 1498,  786, 2181, 2181,  786,  786, 2181, 2181,
      786, 1508, 1508, 1508, 1508, 1508, 1508, 1508, 1508, 1508,
     1508, 2181, 1508, 1508, 2181, 1508, 1508, 1508, 1508, 1508,

     1508, 1508, 1508, 1508, 1508, 1508, 1510, 1510, 1510, 1510,
     1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510,
     1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510,
     1510, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185,
     1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185,
     1185, 1185, 1185, 1185, 1185, 1185, 1513, 1513, 1513, 1513,
     1513, 1513, 1513, 1513, 1513, 1513, 2181, 1513, 1513, 2181,
     1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513,
     1513, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514,
     1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514,

     1514, 1514, 1514, 1514, 1514, 1514, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,
     1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,
     1516, 1516, 1516, 1516, 1516, 1516,  411,  411, 2181, 2181,
      411, 2181,  411,  411,  411,  411,  411,  411,  411,  411,
      411,  411,  411,  411,  411, 2181,  411,  411,  411,  411,
      411, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197,
     1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197,

     1197, 1197, 1197, 1197, 1197, 1197, 1518, 1518, 1518, 1518,
     1518, 1518, 1518, 1518, 1518, 1518, 1518, 1518, 1518, 1518,
     1518, 1518, 1518, 1518, 1518, 1518, 1518, 1518, 1518, 1518,
     1518, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519,
     1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519,
     1519, 1519, 1519, 1519, 1519, 1519, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520,
     1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520,

     1520, 1520, 1520, 1520, 1520, 1520,  420,  420, 2181,  420,
      420, 2181,  420,  420,  420,  420,  420,  420,  420,  420,
      420,  420,  420,  420,  420,  420,  420,  420,  420,  420,
      420, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207,
     1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207,
     1207, 1207, 1207, 1207, 1207, 1207, 1521, 1521, 1521, 1521,
     1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
     1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
     1521, 1522, 1522, 1522, 1522, 1522, 1522, 1522, 1522, 1522,
     1522, 1522, 1522, 1522, 1522, 1522, 1522, 1522, 1522, 1522,

     1522, 1522, 1522, 1522, 1522, 1522, 1212, 1212, 1212, 1212,
     1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212,
     1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212,
     1212, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523,
     1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523,
     1523, 1523, 1523, 1523, 1523, 1523, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
     1524,  428,  428,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  428,  428,  428,  428,  428,  428,  428,  428,

      428,  428,  428,  428,  428,  428, 1527, 1527, 1527, 1527,
     1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527,
     1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527,
     1527,  446,  446, 2181, 2181,  446,  446,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  446,  446,  446,  446,  446, 1223, 1223, 1223, 1223,
     1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223,
     1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223, 1223,
     1223, 1530, 1530, 1530, 1530, 1530, 1530, 1530, 1530, 1530,
     1530, 1530, 1530, 1530, 1530, 1530, 1530, 1530, 1530, 1530,

     1530, 1530, 1530, 1530, 1530, 1530, 1531, 1531, 1531, 1531,
     1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531,
     1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531,
     1531, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228,
     1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228,
     1228, 1228, 1228, 1228, 1228, 1228, 1532, 1532, 1532, 1532,
     1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,
     1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,
     1532, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,

     1233, 1233, 1233, 1233, 1233, 1233, 1535, 1535, 1535, 1535,
     1535, 1535, 1535, 1535, 1535, 1535, 1535, 1535, 1535, 1535,
     1535, 1535, 1535, 1535, 1535, 1535, 1535, 1535, 1535, 1535,
     1535, 1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235,
     1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235, 1235,
     1235, 1235, 1235, 1235, 1235, 1235, 1536, 1536, 1536, 1536,
     1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536,
     1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536,
     1536, 1238, 1238, 1238, 1238, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 1238, 1238, 1238, 1238, 1238, 2181,

     2181, 1238,  484,  484,  484,  484, 2181, 2181, 2181,  484,
     2181, 2181, 2181, 2181, 2181,  484,  484,  484,  484,  484,
     2181, 2181,  484, 1241, 2181, 2181, 1241, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 1241, 2181, 1241, 1241,
     1241, 2181, 2181, 1241, 1248, 1248, 1248, 1248, 2181, 1248,
     2181, 2181, 1248, 2181, 2181, 2181, 2181, 1248, 1248, 2181,
     1248, 1248, 2181, 2181, 1248, 2181, 2181, 1248, 1251, 1251,
     1251, 1251, 2181, 1251, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 1251, 1251, 2181, 2181, 1251, 1540,
     1540, 1540, 1540, 2181, 1540, 2181, 2181, 1540, 2181, 2181,

     2181, 2181, 1540, 1540, 2181, 1540, 1540, 2181, 2181, 1540,
     2181, 2181, 1540,  467,  467,  467,  467, 2181,  467, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181,  467, 2181,  467,
      467, 2181, 2181,  467, 2181, 2181,  467,  541,  541,  541,
      541, 2181,  541, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181,  541,  541, 2181, 2181,  541,  878,  878,
     2181,  878,  878, 2181,  878,  878,  878,  878,  878,  878,
      878, 2181,  878,  878,  878,  878,  878,  878,  878,  878,
     2181,  878,  878, 1326, 2181, 2181, 1326, 2181, 2181, 2181,
     2181, 1326, 2181, 2181, 2181, 2181, 1326, 2181, 2181, 1326,

     1326, 2181, 2181, 1326,  552, 2181, 2181,  552, 2181, 2181,
     2181,  552, 2181, 2181,  552,  552, 2181,  552,  552,  552,
      552,  552, 2181, 2181,  552,  553, 2181, 2181,  553, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,  553,  553,
      553,  553,  553, 2181, 2181,  553,  954,  954, 2181,  954,
      954,  954,  954,  954,  954,  954,  954,  954,  954,  954,
      954,  954, 2181,  954,  954,  954,  954,  954,  954,  954,
      954, 1382, 1382, 1382, 1382, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 1382, 1382, 2181, 1382, 1382, 2181,
     2181, 1382, 1384, 2181, 2181, 1384, 2181, 2181, 2181, 2181,

     2181, 2181, 2181, 2181, 2181, 1384, 2181, 2181, 1384, 1384,
     2181, 2181, 1384,  610,  610,  610,  610, 2181,  610, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181,  610, 2181,  610,
      610, 2181, 2181,  610, 2181, 2181,  610,  621,  621,  621,
      621, 2181,  621, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181,  621,  621, 2181, 2181,  621,  629,  629,
     2181,  629, 2181, 2181, 2181,  629, 2181, 2181,  629,  629,
     2181,  629,  629,  629,  629,  629, 2181, 2181,  629, 1675,
     1675, 2181, 1675, 1675, 2181, 2181, 1675, 1444, 2181, 1444,
     2181, 2181, 1444, 1444, 2181, 2181, 1444,  702, 2181, 2181,

      702,  702, 2181, 2181,  702,  708, 2181, 2181,  708,  708,
     2181, 2181,  708,  713,  713, 2181,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713,  713,  713, 1458, 1458,
     1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458,
     1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458,
     1458, 1458, 1458, 1185, 1185, 1185, 1185, 1185, 1185, 1185,
     1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185,
     1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1685, 1685,
     1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,

     1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685, 1685,
     1685, 1685, 1685, 1687, 1687, 1687, 1687, 1687, 1687, 1687,
     1687, 1687, 1687, 1687, 1687, 1687, 1687, 1687, 1687, 1687,
     1687, 1687, 1687, 1687, 1687, 1687, 1687, 1687, 1465, 1465,
     1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465,
     1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465,
     1465, 1465, 1465, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
     1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1689, 1689,
     1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,

     1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
     1689, 1689, 1689,  744, 2181, 2181,  744,  744, 2181, 2181,
      744,  752, 2181, 2181,  752,  752, 2181, 2181,  752, 1706,
     1706, 2181, 1706, 2181, 1706, 1706, 1706, 1706, 1706, 1706,
     1706, 1706, 1706, 1706, 1706, 1706, 1706, 1706, 2181, 1706,
     1706, 1706, 1706, 1706,  776,  776, 2181,  776,  776, 2181,
     2181,  776,  776,  776,  776,  776,  776,  776,  776,  776,
      776,  776,  776, 2181,  776,  776,  776,  776,  776, 1493,
     1493, 1493, 1493, 1493, 1493, 1493, 1493, 1493, 1493, 1493,
     1493, 1493, 1493, 1493, 1493, 1493, 1493, 1493, 1493, 1493,

     1493, 1493, 1493, 1493, 1708, 1708, 1708, 1708, 1708, 1708,
     1708, 1708, 1708, 1708, 1708, 1708, 1708, 1708, 1708, 1708,
     1708, 1708, 1708, 1708, 1708, 1708, 1708, 1708, 1708, 1709,
     1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
     1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
     1709, 1709, 1709, 1709, 1498, 1498, 1498, 1498, 1498, 1498,
     1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498,
     1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1498, 1710,
     1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710,
     1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710,

     1710, 1710, 1710, 1710,  786, 2181, 2181,  786,  786, 2181,
     2181,  786, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510,
     1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510, 1510,
     1510, 1510, 1510, 1510, 1510, 1510, 1510, 1719, 1719, 1719,
     1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719,
     1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719,
     1719, 1719, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514,
     1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514,
     1514, 1514, 1514, 1514, 1514, 1514, 1514, 1516, 1516, 1516,
     1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,

     1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,
     1516, 1516,  411,  411, 2181, 2181,  411, 2181,  411,  411,
      411,  411,  411,  411,  411,  411,  411,  411,  411,  411,
      411, 2181,  411,  411,  411,  411,  411, 1519, 1519, 1519,
     1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519,
     1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519,
     1519, 1519, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520,
     1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520,
     1520, 1520, 1520, 1520, 1520, 1520, 1520,  420,  420, 2181,
      420,  420, 2181,  420,  420,  420,  420,  420,  420,  420,

      420,  420,  420,  420,  420,  420,  420,  420,  420,  420,
      420,  420, 1522, 1522, 1522, 1522, 1522, 1522, 1522, 1522,
     1522, 1522, 1522, 1522, 1522, 1522, 1522, 1522, 1522, 1522,
     1522, 1522, 1522, 1522, 1522, 1522, 1522, 1523, 1523, 1523,
     1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523,
     1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523,
     1523, 1523,  428,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  428,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  428,  428,  428,  428,  428, 1527, 1527, 1527,
     1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527,

     1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527,
     1527, 1527, 1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721,
     1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721,
     1721, 1721, 1721, 1721, 1721, 1721, 1721,  446,  446, 2181,
     2181,  446,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  446, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531,
     1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531,
     1531, 1531, 1531, 1531, 1531, 1531, 1531, 1532, 1532, 1532,
     1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,

     1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,
     1532, 1532, 1535, 1535, 1535, 1535, 1535, 1535, 1535, 1535,
     1535, 1535, 1535, 1535, 1535, 1535, 1535, 1535, 1535, 1535,
     1535, 1535, 1535, 1535, 1535, 1535, 1535, 1536, 1536, 1536,
     1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536,
     1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536,
     1536, 1536,  484,  484,  484,  484, 2181, 2181, 2181,  484,
     2181, 2181,  484, 2181, 2181,  484,  484,  484,  484,  484,
     2181, 2181,  484,  868,  868,  868,  868, 2181,  868, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181,  868, 2181,  868,

      868, 2181, 2181,  868, 2181, 2181,  868, 1540, 1540, 1540,
     1540, 2181, 1540, 2181, 2181, 1540, 2181, 2181, 2181, 2181,
     1540, 1540, 2181, 1540, 1540, 2181, 2181, 1540, 2181, 2181,
     1540, 1248, 1248, 1248, 1248, 2181, 1248, 2181, 2181, 1248,
     2181, 2181, 2181, 2181, 1248, 1248, 2181, 1248, 1248, 2181,
     2181, 1248, 2181, 2181, 1248, 1733, 1733, 1733, 1733, 2181,
     1733, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 1733, 1733, 2181, 2181, 1733, 2181, 2181, 1733,  552,
     2181, 2181,  552, 2181, 2181, 2181,  552, 2181, 2181,  552,
      552, 2181,  552,  552,  552,  552,  552, 2181, 2181,  552,

     1794, 1794, 1794, 1794, 2181, 1794, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 1794, 1794, 2181, 2181,
     1794, 2181, 2181, 1794,  629,  629, 2181,  629, 2181, 2181,
     2181,  629, 2181, 2181,  629,  629, 2181,  629,  629,  629,
      629,  629, 2181, 2181,  629, 1675, 1675, 2181, 1675, 1675,
     2181, 2181, 1675,  702, 2181, 2181,  702,  702, 2181, 2181,
      702,  708, 2181, 2181,  708,  708, 2181, 2181,  708,  713,
      713, 2181,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713, 1687, 1687, 1687, 1687, 1687, 1687,

     1687, 1687, 1687, 1687, 1687, 1687, 1687, 1687, 1687, 1687,
     1687, 1687, 1687, 1687, 1687, 1687, 1687, 1687, 1687, 1514,
     1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514,
     1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514, 1514,
     1514, 1514, 1514, 1514, 1689, 1689, 1689, 1689, 1689, 1689,
     1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689,
     1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1689, 1516,
     1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,
     1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,
     1516, 1516, 1516, 1516,  744, 2181, 2181,  744,  744, 2181,

     2181,  744,  752, 2181, 2181,  752,  752, 2181, 2181,  752,
      776,  776, 2181,  776,  776, 2181, 2181,  776,  776,  776,
      776,  776,  776,  776,  776,  776,  776,  776,  776, 2181,
      776,  776,  776,  776,  776, 1709, 1709, 1709, 1709, 1709,
     1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
     1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
     1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710,
     1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710,
     1710, 1710, 1710, 1710, 1710,  786, 2181, 2181,  786,  786,
     2181, 2181,  786, 1719, 1719, 1719, 1719, 1719, 1719, 1719,

     1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719,
     1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1721, 1721,
     1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721,
     1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721, 1721,
     1721, 1721, 1721, 1845, 1845, 1845, 1845, 1845, 1845, 1845,
     1845, 1845, 1845, 2181, 1845, 1845, 2181, 1845, 1845, 1845,
     1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845, 1733, 1733,
     1733, 1733, 2181, 1733, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 1733, 1733, 2181, 2181, 1733, 2181,
     2181, 1733, 1853, 1853, 1853, 1853, 2181, 2181, 2181, 1853,

     2181, 2181, 2181, 2181, 2181, 1853, 1853, 1853, 1853, 1853,
     2181, 2181, 1853, 1858, 1858, 1858, 1858, 2181, 1858, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 1858,
     1858, 2181, 2181, 1858,  552, 2181, 2181,  552, 2181, 2181,
     2181,  552, 2181, 2181,  552,  552, 2181,  552,  552,  552,
      552,  552, 2181, 2181,  552, 1794, 1794, 1794, 1794, 2181,
     1794, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 1794, 1794, 2181, 2181, 1794, 2181, 2181, 1794, 1901,
     1901, 1901, 1901, 2181, 2181, 2181, 1901, 2181, 2181, 2181,
     2181, 2181, 1901, 1901, 1901, 1901, 1901, 2181, 2181, 1901,

     1904, 1904, 1904, 1904, 2181, 1904, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 1904, 1904, 2181, 2181,
     1904,  629,  629, 2181,  629, 2181, 2181, 2181,  629, 2181,
     2181,  629,  629, 2181,  629,  629,  629,  629,  629, 2181,
     2181,  629,  702, 2181, 2181,  702,  702, 2181, 2181,  702,
      708, 2181, 2181,  708,  708, 2181, 2181,  708,  880,  880,
     2181,  880,  880, 2181,  880,  880, 2181, 2181,  880,  880,
      880, 2181,  880,  880,  880,  880,  880,  880,  880,  880,
     2181, 2181,  880, 1947, 2181, 2181, 1947, 2181, 2181, 2181,
     1947, 2181, 2181, 2181, 2181, 2181, 1947, 2181, 2181, 1947,

     1947, 2181, 2181, 1947, 1973, 2181, 2181, 1973, 2181, 2181,
     2181, 1973, 2181, 2181, 2181, 2181, 2181, 1973, 2181, 2181,
     1973, 1973, 2181, 2181, 1973, 2031, 2031, 2031, 2031, 2031,
     2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2031, 2181,
     2031, 2031, 2181, 2181, 2031, 2031, 2031, 2031, 2031, 2031,
     2042, 2042, 2181, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2054, 2054, 2181, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,

     2064, 2064, 2181, 2064, 2064, 2181, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2181, 2064, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2181, 2064, 2064, 2056, 2056, 2181, 2056, 2056,
     2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056,
     2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056, 2056,
      879,  879, 2181,  879,  879, 2181,  879,  879,  879,  879,
      879, 2181, 2181, 2181,  879,  879,  879,  879,  879,  879,
      879,  879, 2181,  879,  879, 2057, 2057, 2181, 2057, 2057,
     2057, 2057, 2057, 2057, 2057, 2057, 2057, 2057, 2057, 2057,
     2057, 2057, 2057, 2057, 2057, 2057, 2057, 2057, 2057, 2057,

     2065, 2065, 2181, 2065, 2065, 2181, 2065, 2065, 2065, 2065,
     2065, 2181, 2181, 2181, 2065, 2065, 2065, 2065, 2065, 2065,
     2065, 2065, 2181, 2065, 2065,   57, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,

     2181
    } ;

static yyconst short int yy_chk[22102] =
    {   0,
        0,    0,    1,    1,    2,    2,    2,    2,   93,   93,
        3,    3,    1,    1,    3,    2,    2,  841,  841,    1,
        3,    3,    2,   18,  270,   63,   18,    3,    1,   18,
       63,    2,    4,    4,    4,    4,    3,    4,    5,    5,
       66,   18,    5,    4,    4,   66, 2180,   71,    5,    5,
        4,   20,   71,    3,   20,    5,    7,    7,  279,    4,
        6,    6,    6,    6,    5,    6,    7,    7,  280,   20,
       75,    6,    6,    7,   22,   75,    4,   22,    6,  279,
      270,  294,    7,    8,    8,    8,    8,    6,   82,  280,
      294,   85,   22,   82,    8,    8,   85,  246,  246,    7,

      246,    8,    9,    9,    9,    9,   10,   10,   10,   10,
        8,   11,   11,    9,    9,    9, 2175,   10,   10,   10,
        9,   11,   11, 2173,   10,   91,   95,    8,   11,    9,
       91,   95,  245,   10,   13,   13,  245,   11,   12,   12,
       12,   12,   15,   15,   13,   13,   13,  296,  296,   12,
       12,   13,   15,   15,  249,  260,   12,  249, 2166,   15,
       13,   14,   14,   14,   14,   12,   24,   26,   15,   24,
       26, 2005,   14,   14,   14,   16,   16,   16,   16,   14,
       28,  297, 2005,   28,   24,   26,   16,   16,   14,  102,
      105,  111,  114,   16,  102,  105,  111,  114,   28,  297,

     2155,  260,   16,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,

       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,

       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,

       23,   23,   23,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,

       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,

       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   30,   97,
      121,   30,   97,  124,  138,  121,  172, 2145,  124,  138,
      206,  172,   97,  332,  332,  206,   30,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,

       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   32,  132,  330,   32,  132,  169,  169,  169,
      169, 2144,  213,  330,  169,  272,  132,  213,  272, 2133,
       32,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,

       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   34,  308,  281,   34,
       35,   35,  308,  157,   36,   36,   36,   36,  315,   40,
       35,   35,   40,  315,   34,   36,   36,   35,  157,  281,
      157,   42,   36,   35,   42,   35,   35,   40,   36,  164,
       36,   36,   37,   37,  173, 2127,   37,  173,   46,   42,
      164,   46,   37,   37,  164,   48,  164,  173,   48,   37,
       38,   38,   38,   38,  321,   38,   46,   37,   37,  321,
      282,   38,   38,   48,   50,  284,   52,   50,   38,   52,
      161,  291,   56,  161,  291,   56,   38,   38,   39,   39,

       59,  282,   50,   59,   52,  161,  284,  161,   39,   39,
       56,   65,  351,  351,   65,   39,   53,   53,   59, 2126,
       53,   39,   53,   39,   39,   74,   53,   53,   74,   65,
      396,  396,   77,   53, 2125,   77,   39,   84,   87,   87,
       84,   87,   53,   74,  405,   39,   39,   39,  337,   39,
       77, 2116,   39,  337,   39,   84,   87, 2112,  405,   53,
       39,   39,   39,   39,   39,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,

       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       43,   43,   54,   54,   54,   54,  798,   54,  798,   54,
       43,   43,   94,   54,   54,   94,  107,   43,  363,  107,
       54,   43,   43,  363,  104,  113,   43,  104,  113,   54,
       94,  369,  116, 2110,  107,  116,  369,  104,   43,  413,
      154,  123,  104,  113,  123,  143,   54,   43,   43,   43,
      116,   43,  154,  413,   43,  154,   43,  154,  251,  123,

      264,  251,   43,  264,   43,   43,   43,  479,  479,  713,
       43,   44,   44,   44,   44,  125,  125,  125,  125,  545,
      545,  251,   44,   44,  126,  126,  126,  126,  156,   44,
      713,  143,  165,   44,   44,  143, 2109,  125,   44,  165,
      156,  143,  126,  156,  165,  156,  126,  165,  349,  165,
       44,  127,  127,  127,  127,  149, 2091,  349, 2079,   44,
       44,   44,  317,   44,  188,  317,   44,  149,   44,  149,
      149,  264,  149,  127,   44, 2078,   44,   44,   44,  188,
      317,  188,   44,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,

       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
       49,   49,   49,   49,   49,   49,   49,   49,   49,   49,

       49,   49,   49,   49,   49,   49,   49,   49,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,

       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,  130,  130,
      130,  130,  139,  139,  139,  130,  144,  144,  144,  144,
      145,  145,  145,  145, 2077,  158,  158,  144,  378,  158,
      130,  145,  255,  378,  139,  255,  159, 2065,  144, 2063,
      144,  158,  145,  158,  145,  146,  146,  146,  146,  159,

      255,  159,  145,  159,  171,  255,  146,  171,  283,  394,
      423,  139,  148,  148,  148,  148,  283,  146,  394,  146,
     2055,  283,  130,  148,  423,  150,  150,  146,  851,  283,
      151,  130,  150,  151,  148,  150,  148,  152,  150,  382,
      851,  150,  151,  150,  382,  151,  152,  151,  152,  185,
     2046,  151,  152,  403,  152,  153,  153,  152,  403,  171,
      148,  185,  408,  153,  185,  153,  185,  408,  153, 2042,
      153,  153,  155,  153,  155,  148,  155,  148,  160,  160,
      166,  166,  155,  155,  410,  162,  166,  155,  162,  155,
      404,  162,  162,  160,  160,  166,  160,  166,  410,  404,

      162,  162,  162,  432,  162,  163,  162,  410,  163,  441,
     2036,  163,  170,  170,  170,  170, 2047,  432,  170,  163,
      163,  176,  163,  441,  176,  177,  163, 2047,  177,  186,
      170,  186,  176,  186,  170, 2034,  177,  176,  176,  186,
      186,  177,  177,  176,  186,  176,  186,  177,  178,  177,
      689,  178,  179,  412,  689,  179,  417,  177,  190,  178,
     2033,  417,  412,  179,  178,  178, 2089,  180,  179,  179,
      178,  190,  178,  190,  179,  190,  179, 2089,  425,  180,
      178,  180,  180,  425,  180,  181,  181,  182,  243,  243,
      182,  243,  181,  768,  768,  181,  183,  187,  181,  182,

      179,  181,  182,  181,  182,  183,  243,  183,  182,  187,
      243,  183,  187,  183,  187,  179,  183,  179,  184,  184,
     2032,  189,  189,  197,  197,  189,  184,  191,  184,  197,
     2030,  184,  192,  184,  184,  192,  184,  189,  197,  189,
      197,  191,  191,  448,  191,  193,  825,  192,  193,  192,
      825,  193,  193,  194,  195,  336,  194,  448,  336,  194,
      193,  193,  193, 2029,  193,  195,  193,  194,  194,  195,
      194,  195,  196,  336,  194,  199,  199,  199,  199,  196,
      200,  200,  200,  200,  196,  340,  422,  196,  340,  196,
      201,  201,  201,  201,  228,  422,  451,  199,  200,  440,

     2014,  451,  200,  203,  203,  203,  203,  340,  440,  228,
      203,  228,  201,  209,  209,  209,  209, 2003,  460,  211,
      211,  211,  211,  460,  209,  203,  211,  212,  212,  212,
      212,  216,  216,  709,  216,  209,  356,  209,  709,  356,
      217,  217,  216,  217, 2000,  212,  831,  216,  216,  212,
      831,  217,  286,  216,  356,  216,  217,  217,  218,  218,
      286,  218,  217,  419,  217,  286, 1993,  219,  219,  218,
      219,  457,  217,  286,  218,  218,  203,  419,  219, 1992,
      218,  220,  218,  219,  219,  457,  419,  221,  221,  219,
      218,  219,  225,  220,  221,  220,  220,  221,  220,  222,

      221,  409,  222,  221,  225,  221, 1991,  225,  223,  225,
      409,  222,  778, 1987,  222,  219,  222,  223,  418,  223,
      222,  224,  224,  223,  409,  223,  778,  418,  223,  224,
      219,  224,  219, 1985,  224,  227,  224,  224,  226,  224,
      226,  418,  226,  810,  810,  447,  230,  227,  226,  226,
      227,  231,  227,  226,  447,  226,  229,  229, 1984,  230,
      229,  230,  456,  230,  232,  231,  231,  232,  231,  426,
      233,  456,  229,  233,  229,  471,  233,  233,  426,  232,
     1983,  232, 1943,  235,  471,  233,  233,  233,  777,  233,
      234,  233,  426,  234,  235, 1942,  234,  777,  235,  274,

      235,  236,  274,  368,  234,  234,  368,  234,  236,  237,
      237,  234,  525,  236,  525,  237,  236,  274,  236,  242,
      242,  368,  242,  525,  237, 1941,  237,  250,  250,  525,
      250,  431,  256,  256,  285,  256,  523,  285,  523,  285,
      523,  242,  527,  431,  527,  250,  781,  523,  431,  250,
      256,  781,  285,  527,  256,  302,  302,  302,  302, 1938,
      285,  303,  303,  303,  303,  304,  304,  304,  304, 1937,
      274,  314,  314,  314,  314,  381,  812,  812,  381,  303,
      371,  371,  371,  371,  383,  383,  383,  383,  437,  314,
      242,  437, 1936,  381,  384,  384,  384,  384,  250,  853,

      402,  437,  371,  402,  302,  385,  385,  385,  385, 1935,
      303,  853,  384,  407,  304,  427,  407,  534,  402,  534,
      314,  401,  401,  401,  401,  371,  302,  416,  534,  427,
      416,  407,  303,  383,  424,  804,  304,  424,  427,  401,
      804, 1454,  314,  384,  435,  416,  429,  429,  443,  429,
      444,  443,  424,  686,  385,  383,  686,  445,  435,  444,
      450,  443, 1454,  450,  429,  384,  443,  435,  452, 1934,
      401,  445,  453,  444,  461,  462,  385,  452,  450, 1933,
      445,  455,  455,  461,  455,  459,  453,  543,  459,  462,
      543,  452,  401,  548, 1931,  453,  548,  461,  462,  463,

      463,  463,  463,  459,  465,  465,  465,  465,  467,  467,
      467,  467,  468,  468,  468,  468, 1930,  548,  524,  467,
      524,  463,  465,  468,  621,  524,  465,  621,  472,  524,
      467,  472,  467, 1929,  468,  621,  468,  469,  469,  469,
      469,  472,  543, 1928,  469,  473,  473,  473,  473,  475,
      475,  475,  473,  477,  477,  477,  477,  473,  473, 1926,
      477,  481,  481,  481,  481,  544,  468,  473,  544,  809,
      541,  475,  481,  541,  809,  477, 1925,  482,  482,  482,
      482,  541,  533,  481,  533,  481,  484,  484,  484,  484,
      486,  486,  533,  533,  541,  486,  486,  484,  475,  482,

      487,  487,  487,  487,  546,  486,  547,  546,  484,  547,
      484,  487,  488,  488,  488,  488,  836,  546,  473,  547,
      544,  836,  487,  488,  487, 1924,  477, 1881,  489,  489,
      489,  489,  526, 1207,  488, 1854,  488, 1207,  526,  489,
      526, 1233,  487,  490,  490,  490,  490,  526,  488,  526,
      489,  486,  489, 1233,  490,  491,  491,  491,  491,  838,
      492,  492,  492,  492,  838,  490,  491,  490,  820,  820,
     1850,  492,  493,  493,  493,  493,  782,  491,  553,  491,
     1849,  553,  492,  493,  492,  782,  494,  494,  494,  494,
     1848,  489,  685,  685,  493,  685,  493,  494,  529,  782,

      529,  490,  553,  529,  495,  495,  495,  495,  494,  529,
      494,  496,  496,  496,  496,  495,  822,  822,  693,  491,
      492,  693,  496,  493, 1846,  528,  495,  528,  495,  690,
      690,  528,  690,  496, 1234,  496,  528,  497,  497,  497,
      497,  498,  498,  498,  498,  530, 1234,  530,  497,  494,
      494,  495,  498,  535,  530,  535,  530,  707,  496,  497,
      707,  497,  535,  498,  535,  498,  507,  507,  507,  507,
      500,  500,  500,  500,  532, 1843,  532,  507,  537,  537,
      537,  500,  532, 1209,  538,  532,  538, 1209,  507,  537,
      507, 1842,  500,  498,  500,  538,  497, 1841,  498,  499,

      499,  499,  499,  499,  499,  499,  499,  499,  499,  499,
      499,  499,  499,  499,  499,  499,  499,  499,  499,  830,
      830, 1840,  499,  499,  499,  499,  499,  499,  507,  500,
      501,  501,  501,  501, 1844,  502,  502,  502,  502,  552,
     1839,  501,  552,  499,  499,  499,  502,  536, 1844,  536,
      552,  536,  501,  801,  501,  552,  552,  502,  536,  502,
     1212,  552,  801,  552, 1212,  499,  503,  503,  503,  503,
     1838,  499,  499,  499, 1111,  728,  801,  503,  728, 1111,
      504,  504,  504,  504,  505,  505,  505,  505,  503, 1235,
      503,  504,  592,  501,  592,  505,  506,  506,  506,  506,

      502, 1235,  504,  592,  504,  783,  505,  506,  505,  592,
      508,  508,  508,  508,  509,  509,  509,  509,  506,  783,
      506,  508,  590, 1837,  590,  509,  590,  503,  783, 1836,
      503, 1213,  508,  590,  508, 1213,  509,  504,  509,  510,
      510,  510,  510,  505,  512,  512,  512,  512,  832,  832,
      510,  513,  513,  513,  513,  512,  506,  539,  539,  539,
      539,  510,  513,  510,  539,  508,  512, 2035,  512,  514,
      514,  514,  514,  513,  705,  513, 2035,  705,  509,  594,
      514,  594,  846,  846, 1834,  515,  515,  515,  515,  593,
      594,  514,  595,  514,  595,  593,  515,  593,  595,  516,

      516,  516,  516,  595,  593,  512,  593,  515,  513,  515,
      516,  517,  517,  517,  517,  513,  518,  518,  518,  518,
     1522,  516,  517,  516, 1522,  715,  715,  518,  514,  540,
      540,  540,  540,  517,  715,  517,  540,  597,  518,  597,
      518,  519,  519,  519,  519,  705,  597,  715,  597,  515,
      847,  847,  519,  520,  520,  520,  520,  516,  521,  521,
      521,  521, 1236,  519,  520,  519, 1833,  518, 1832,  521,
      522,  522,  522,  522, 1236,  520, 1831,  520,  517,  531,
      521,  522,  521, 1457,  591,  531,  591,  531,  848,  848,
      519,  591,  522, 1232,  522,  591,  531,  531, 1232,  598,

      780,  531, 1535,  780, 1457,  598,  521,  598,  520,  542,
      542,  542,  542,  520, 1535,  542,  598,  598,  780,  555,
     1523,  598,  555,  522, 1523,  522, 1536,  542, 1830,  556,
      555,  542,  556, 1462,  522,  555,  555,  596, 1536,  596,
      556,  555,  596,  555, 1829,  556,  556,  557,  596,  866,
      557,  556,  866,  556, 1462,  601,  558,  601,  557,  558,
     1464,  555, 1827,  557,  557,  556,  601,  558,  599,  557,
      599,  557,  558,  558,  559, 1826,  599,  559,  558,  599,
      558, 1464,  600,  560,  600,  559,  560, 1825,  802, 1824,
      559,  559,  600,  600,  560,  605,  559,  605,  559,  560,

      560,  561,  802, 1823,  561,  560,  605,  560,  854,  854,
      557,  802,  561,  562,  558, 1822,  562,  561,  561,  611,
      611,  611,  611,  561,  562,  561,  611, 1164, 1164,  562,
      562,  563, 1821,  695,  563,  562,  695,  562,  559,  604,
      604,  604,  563,  560, 1166, 1166,  564,  563,  563,  564,
      604,  747,  561,  563,  747,  563,  695,  564,  565, 1179,
     1179,  565,  564,  564,  606,  606,  606,  606,  564,  565,
      564, 1181, 1181,  747,  565,  565,  562,  562,  563, 1766,
      565,  566,  565, 2096,  566,  586,  606,  859,  586,  669,
      859,  669,  566,  564, 2096, 1119,  586,  566,  566, 1119,

      669,  586,  586,  566,  603,  566,  603,  586,  603,  586,
      568,  859, 1765,  568,  602,  603,  602,  565,  815,  815,
     1119,  568,  815,  602, 1729,  602,  568,  568,  619,  619,
      619,  619,  568,  566,  568,  619,  586, 1728,  566,  567,
      567,  567,  567,  567,  567,  567,  567,  567,  567,  567,
      567,  567,  567,  567,  567,  567,  567,  567,  567, 1223,
     1223,  815,  567,  567,  567,  567,  567,  567, 1727,  568,
      569,  849,  849,  569,  849,  608,  608,  608,  608,  570,
     1726,  569,  570,  567,  567,  567,  569,  569, 1721,  672,
      570,  672,  569,  608,  569,  570,  570,  608,  672,  571,

      672,  570,  571,  570, 1719,  567,  614,  614,  614,  614,
      571,  567,  567,  567,  572,  571,  571,  572,  665, 1718,
      665,  571,  665,  571,  573,  572, 1716,  573,  614,  665,
      572,  572, 1715,  569,  574,  573,  572,  574,  572,  748,
      573,  573,  748, 1125,  570,  574,  573, 1125,  573, 1714,
      574,  574,  620,  620,  620,  620,  574, 1713,  574,  620,
      571,  748,  575,  571,  667,  575,  667, 1456, 1125,  850,
      850,  572,  850,  575,  576,  667, 1712,  576,  575,  575,
     1456,  667, 1711,  573,  575,  576,  575,  850, 1456,  577,
      576,  576,  577,  806,  574,  668,  576,  666,  576,  666,

      577,  668,  806,  668,  666,  577,  577,  674,  666,  674,
      668,  577,  668,  577,  580,  674,  806,  580,  674,  622,
      622,  622,  622,  583,  575,  580,  583, 1707,  807,  576,
      580,  580,  625,  625,  583,  625,  580,  622,  580,  583,
      583,  622,  807,  625, 1706,  583, 1705,  583,  625,  625,
     1704,  807, 1703,  577,  578,  578,  578,  578,  578,  578,
      578,  578,  578,  578,  578,  578,  578,  578,  578,  578,
      578,  578,  578,  578, 1702,  580, 1701,  578,  578,  578,
      578,  578,  578, 1685,  670,  581,  670,  583,  581, 1031,
      670, 1700, 1031, 1699,  582,  670,  581,  582,  578,  578,

      578,  581,  581,  718, 1685,  582,  718,  581,  718,  581,
      582,  582, 1698,  675,  584,  675,  582,  584,  582,  684,
      684,  718,  684,  675,  675,  584,  578,  578,  578,  718,
      584,  584, 1697,  676,  585,  676,  584,  585,  584,  720,
      720,  684,  581,  587,  676,  585,  587, 1696,  720,  581,
      585,  585,  588,  582,  587,  588,  585,  817,  585,  587,
      587,  720,  720,  588,  680,  587,  680,  587,  588,  588,
      589,  817,  584,  589,  588,  680,  588, 1225, 1225, 1695,
      817,  589,  610,  610,  610,  610,  589,  589,  612,  612,
      612,  612,  589,  610,  589,  612,  816,  671,  587,  671,

      588,  585,  671,  587,  610,  816,  610, 1694,  671, 1693,
      612,  613,  613,  613,  613,  616,  616,  616,  616,  816,
     1691, 1132,  613,  589, 1132,  589,  616,  624,  624, 1690,
      624,  716,  716,  613,  589, 1228, 1228,  616,  624,  616,
     1229, 1229, 1688,  624,  624,  716,  629,  629,  678,  629,
      678,  624,  678,  716, 1684,  630,  630,  629,  630,  678,
     1683,  612,  629,  629,  631,  631,  630,  631,  629, 1682,
      629,  630,  630,  683,  683,  631,  683,  630,  826,  630,
      631,  631,  632,  632, 1681,  632,  631,  826,  631, 1531,
     1531,  633,  633,  632,  633,  683, 1680,  630,  632,  632,

      631,  826,  633,  719,  632,  842,  632,  633,  633,  634,
      634,  719,  634,  633,  842,  633,  719, 1679,  635,  635,
      634,  635, 1532, 1532,  719,  634,  634, 1244,  842,  635,
     1244,  634, 1678,  634,  635,  635,  636,  636,  712,  636,
      635,  712,  635, 1677,  683,  632,  677,  636,  677,  633,
      821,  821,  636,  636,  821,  677,  712,  677,  636, 1676,
      636,  679,  679,  679,  637,  637, 1675,  637,  638,  638,
     1594,  638,  679,  634, 1592,  637, 1591,  827,  635,  638,
      637,  637, 1724, 1724,  638,  638,  637,  636,  637, 1214,
      638,  827,  638,  821,  639,  639,  700,  639, 1581,  700,

      827, 1214, 1543,  721,  721,  639, 1214,  878,  878,  712,
      639,  639,  878,  878,  700,  638,  639,  721,  639,  700,
      640,  640,  878,  640,  843,  721,  721,  637,  637,  641,
      641,  640,  641, 1725, 1725, 1542,  640,  640,  843, 1160,
      641,  639,  640, 1541,  640,  641,  641,  843, 1160,  643,
      643,  641,  643,  641,  687,  687, 1534,  687,  644,  644,
      643,  644, 1160, 1529,  952,  643,  643,  952,  878,  644,
     1527,  643,  687,  643,  644,  644,  687,  952, 1526,  640,
      644,  641,  644, 1524, 1516, 1514,  641,  642,  642,  642,
      642,  642,  642,  642,  642,  642,  642,  642,  642,  642,

      642,  642,  642,  642,  642,  642,  642, 1156,  643, 1512,
      642,  642,  642,  642,  642,  642, 1156, 1156, 1510,  645,
      645,  644,  645, 1507, 1506, 1256,  694,  694, 1256,  694,
      645,  642,  642,  642, 1505,  645,  645,  738,  738,  738,
      738,  645, 1383,  645,  694, 1383,  646,  646,  694,  646,
     1215,  749, 1504,  642,  749,  647,  647,  646,  647,  642,
      642,  642,  646,  646,  648,  648,  647,  648,  646, 1503,
      646,  647,  647,  749, 1124,  648, 1502,  647, 1501,  647,
      648,  648,  649,  649,  645,  649,  648, 1491,  648,  857,
      857,  857,  857,  649, 1487, 1124,  857,  694,  649,  649,

      650,  650, 1036,  650,  649, 1036,  649,  646,  738, 1486,
      646,  650,  647, 1036,  813,  813,  650,  650,  813, 1485,
     1215, 1215,  650,  648,  650, 1458,  813,  651,  651, 1458,
      651,  813,  771,  771,  771,  771,  652,  652,  651,  652,
     1124, 1124,  649,  651,  651,  852, 1489,  652, 1484,  651,
     1458,  651,  652,  652,  771, 1489, 1489,  813,  652,  852,
      652, 1483,  650,  739,  739,  739,  739, 1482,  852,  655,
      655,  823,  655,  658,  658,  823,  658,  771, 1230, 1230,
      655, 1230,  651,  823,  658,  655,  655, 1481,  823,  658,
      658,  655, 1480,  655, 1479,  658, 1230,  658, 1478, 1217,

      652,  653,  653,  653,  653,  653,  653,  653,  653,  653,
      653,  653,  653,  653,  653,  653,  653,  653,  653,  653,
      653, 1477, 1476, 1475,  653,  653,  653,  653,  653,  653,
      655, 1474,  656,  656,  739,  656,  970,  658, 1473,  970,
     1472,  657,  657,  656,  657,  653,  653,  653,  656,  656,
      834, 1471,  657,  834,  656, 1470,  656,  657,  657, 1469,
      970,  659,  659,  657,  659,  657, 1466,  834,  833, 1217,
     1217,  833,  659,  653,  653,  653,  834,  659,  659, 1459,
      833,  660,  660,  659,  660,  659, 1533,  839,  839,  656,
      661,  661,  660,  661,  833, 1533,  656,  660,  660,  839,

      657,  661, 1453,  660,  839,  660,  661,  661, 1452, 1533,
      662,  662,  661,  662,  661,  742,  742,  742,  742,  659,
     1451,  662,  746,  746,  746,  746,  662,  662,  663,  663,
     1450,  663,  662,  742,  662,  784,  784,  784,  784,  663,
      746,  661, 1449,  948,  663,  663,  948, 1448,  660, 1447,
      663,  673,  663,  784,  948,  664,  664,  673,  664,  673,
      772,  772,  772,  772, 1446,  662,  664,  948,  673,  673,
      662,  664,  664,  673, 1445, 1444,  663,  664,  974,  664,
      949,  974,  772,  949, 1161, 1443,  742,  773,  773,  773,
      773,  949, 1395,  746,  800,  800,  800,  800, 1161,  824,

     1389, 1335,  974,  824,  949,  772,  784, 1161,  664,  773,
      664,  824,  800,  828,  829, 1332,  824,  828,  829,  664,
      858,  858,  858,  858, 1323,  828,  829,  858, 1322, 1271,
      828,  829,  773,  792,  792,  792,  792,  792,  792,  792,
      792,  792,  792,  792,  792,  792,  792,  792,  792,  792,
      792,  792,  792, 1264, 1255, 1254,  792,  792,  792,  792,
      792,  792, 1253,  953,  988,  800,  953,  988,  814,  814,
      818,  818,  814, 1037,  818,  953, 1037,  792,  792,  792,
      814, 1221,  818, 1218, 1037,  814,  992,  818,  988,  992,
     1324,  819,  819, 1324, 1216,  819, 1384,  840,  840, 1384,

      844,  844, 1324,  819, 1205,  792,  792,  792,  819,  840,
      992,  814,  844,  818,  840,  845,  845,  844,  855,  855,
      855,  855,  856,  856,  856,  856,  862,  845, 1544, 1120,
     1120, 1544,  845,  856,  819,  862,  862,  862, 1120, 1159,
      855, 1195,  855, 1159,  856, 1159,  856,  863,  863,  863,
      863, 1120, 1120, 1511,  863, 2099, 1511,  862, 2099,  863,
      863,  864,  864,  864,  864,  869,  869,  869,  869,  863,
     1193, 1511,  869,  865,  865,  865,  865,  856, 1121, 1121,
      865, 1191, 1159,  864,  862,  865,  865,  868,  868,  868,
      868, 1188, 1121, 1326,  868,  865, 1326, 1185, 1165,  868,

     1121, 1121, 1165, 1183, 1165, 1326,  868,  868,  868,  868,
      871,  871,  871,  871, 1197, 1197, 2122,  871, 1197, 2122,
      863,  877,  877,  877,  877, 1180, 1231, 1231,  877, 1231,
     1177, 1176,  871,  881,  881,  881,  881,  882,  882,  882,
      882, 1165, 1175,  877, 1231, 1461,  865,  960,  882, 1461,
      960,  883,  883,  883,  883,  881, 1174, 1197,  960,  882,
      868,  882,  883,  960,  960, 1029, 1029, 1029, 1029,  960,
     1461,  960, 1029,  883, 1173,  883, 1465,  882, 1172, 1240,
     1465,  877, 1240,  871, 1171,  885,  885,  885,  885,  886,
      886,  886,  886, 1157,  877, 1858,  885, 1157, 1858, 1157,

      886, 1465, 1170, 1240,  960, 1157, 1858,  885, 1493,  885,
     1157,  886, 1493,  886, 1493,  883,  884,  884,  884,  884,
      884,  884,  884,  884,  884,  884,  884,  884,  884,  884,
      884,  884,  884,  884,  884,  884, 1157, 1169, 1168,  884,
      884,  884,  884,  884,  884,  885,  886,  887,  887,  887,
      887, 1493,  888,  888,  888,  888, 1847, 1847,  887, 1847,
      884,  884,  884,  888, 1167, 1030, 1030, 1030, 1030,  887,
     1315,  887, 1030, 1155,  888, 1315,  888, 1153, 1152, 1315,
      889,  889,  889,  889,  890,  890,  890,  890,  884,  884,
      884,  889, 1151, 1150,  887,  890,  891,  891,  891,  891,

     1321, 1321,  889,  888,  889, 1321,  890,  891,  890, 1321,
      892,  892,  892,  892,  893,  893,  893,  893,  891, 1149,
      891,  892,  900,  900, 1148,  893, 1147,  900,  900,  889,
     1316, 1126,  892, 1316,  892, 1316,  893,  900,  893, 1316,
      894,  894,  894,  894, 1146, 1145,  890,  896,  896,  896,
      896,  894, 1126,  897,  897,  897,  897, 1241,  896,  891,
     1241,  893,  894, 1144,  894,  901,  901,  901,  901,  896,
     1143,  896, 1142,  892,  892,  897,  901,  902,  902,  902,
      902, 1241, 1468,  900, 1141, 1468, 1140,  901,  902,  901,
     1139,  894,  903,  903,  903,  903, 1138, 1126, 1126,  902,

     1137,  902, 1136,  903,  904,  904,  904,  904,  905,  905,
      905,  905, 1135,  901,  903,  904,  903, 1134, 1133,  905,
      906,  906,  906,  906,  902, 1467,  904, 1131,  904, 1467,
      905,  906,  905, 1468,  907,  907,  907,  907, 1028, 1028,
     1028, 1028,  906,  903,  906,  907,  908,  908,  908,  908,
     1467, 1130,  909,  909,  909,  909,  907,  908,  907, 1129,
     1028, 1128,  904,  909, 1317,  905, 1127, 1317,  908, 1317,
      908,  906, 1330, 1317,  909, 1330,  909, 1116,  910,  910,
      910,  910, 1115,  911,  911,  911,  911, 1052, 1052,  910,
     1052, 2208, 2208,  908,  911, 2208, 1330,  907, 1052,  909,

      910, 1114,  910, 1052, 1052,  911, 1113,  911,  912,  912,
      912,  912,  913,  913,  913,  913, 1208, 1112, 1334,  912,
     1208, 1334, 1110,  913,  914,  914,  914,  914, 1208,  910,
      912, 1109,  912, 1208,  913,  914,  913, 1108,  915,  915,
      915,  915, 1334,  911, 1106, 1070,  914, 1528,  914,  915,
     1528, 1054,  916,  916,  916,  916,  917,  917,  917,  917,
      915, 1880,  915,  916, 1880, 1528, 1880,  917, 1032, 1032,
     1032, 1032,  913, 1687,  916, 1032,  916, 1687,  917,  914,
      917,  918,  918,  918,  918, 1880,  919,  919,  919,  919,
     1032,  915,  918,  920,  920,  920,  920,  919, 1687,  916,

     1034,  993,  990,  918,  920,  918, 2245,  917,  919, 2245,
      919,  921,  921,  921,  921,  920,  975,  920, 1035, 1035,
     1035, 1035,  921,  922,  922,  922,  922,  923,  923,  923,
      923,  972,  954,  921,  922,  921,  951,  950,  923, 1374,
     1035, 1032,  919,  918, 1374,  922,  899,  922, 1374,  923,
      880,  923,  924,  924,  924,  924,  879, 1199, 1199,  920,
      876, 1199, 1325,  924,  875, 1325,  925,  925,  925,  925,
      926,  926,  926,  926,  924,  921,  924,  925, 1325, 1325,
      922,  926,  923,  874,  927,  927,  927,  927,  925,  873,
      925,  872,  926,  867,  926,  927,  928,  928,  928,  928,

     1199,  929,  929,  929,  929,  861,  927,  928,  927, 1224,
     1224,  924,  929,  930,  930,  930,  930,  837,  928,  835,
      928, 1224,  926,  929,  930,  929, 1224,  931,  931,  931,
      931,  925, 1202, 1202,  811,  930, 1202,  930,  931,  932,
      932,  932,  932,  808, 1553, 1553,  927, 1553,  805,  931,
      932,  931,  929,  803,  799,  928,  933,  933,  933,  933,
     1435,  932,  797,  932, 1117, 1435, 1689,  933, 1117, 1435,
     1689,  934,  934,  934,  934, 1202, 1117,  930,  933,  796,
      933, 1117,  934,  795,  794,  935,  935,  935,  935, 1117,
     1553, 1689,  931,  934,  793,  934,  935,  936,  936,  936,

      936, 1375,  791,  932, 1375,  933, 1375,  935,  936,  935,
     1375,  937,  937,  937,  937,  938,  938,  938,  938,  936,
     2306,  936,  937, 2306,  790,  789,  938,  939,  939,  939,
      939, 1318,  934,  937,  788,  937, 1318,  938,  939,  938,
     1318,  940,  940,  940,  940,  787, 1318,  767,  935,  939,
      765,  939,  940,  941,  941,  941,  941,  936,  942,  942,
      942,  942,  764,  940,  941,  940,  938, 1203, 1203,  942,
      937, 1203,  763,  762,  761,  941, 1593,  941,  939, 1593,
      942,  760,  942,  943,  943,  943,  943,  944,  944,  944,
      944, 1320, 1593, 1593,  943,  759, 1320,  757,  944,  756,

     1320,  940,  755, 1320,  754,  943,  753,  943,  941,  944,
     1203,  944,  945,  945,  945,  945,  745,  942,  946,  946,
      946,  946,  740,  945,  947,  947,  947,  947,  956,  946,
      737,  956,  736,  735,  945,  947,  945,  944,  957,  956,
      946,  957,  946,  734,  956,  956,  947,  943,  947,  957,
      956,  733,  956,  961,  957,  957,  961, 2210, 2210,  945,
      957, 2210,  957,  959,  961,  946,  959,  732,  956,  961,
      961,  731,  730,  962,  959,  961,  962,  961,  729,  959,
      959,  947, 1158,  727,  962,  959, 1158,  959, 1158,  962,
      962,  726, 1495,  725, 1158,  962, 1495,  962, 1495, 1158,

      961,  724,  957,  958,  958,  958,  958,  958,  958,  958,
      958,  958,  958,  958,  958,  958,  958,  958,  958,  958,
      958,  958,  958,  959,  962, 1158,  958,  958,  958,  958,
      958,  958,  723, 1904,  963, 1495, 1904,  963,  722, 1261,
     1261, 1261, 1261,  964, 1904,  963,  964,  958,  958,  958,
      963,  963, 1939, 1939,  964, 1939,  963,  711,  963,  964,
      964, 1261,  710,  965,  704,  964,  965,  964,  703,  699,
     1246, 1246, 1246, 1246,  965,  958,  958,  958,  966,  965,
      965,  966, 1246,  963,  698,  965,  697,  965,  692,  966,
      967,  691, 1246,  967,  966,  966, 1033, 1033, 1033, 1033,

      966,  967,  966, 1033, 1379,  964,  967,  967,  968, 1379,
      688,  968,  967, 1379,  967,  654, 1379, 1162, 1033,  968,
      627, 1162,  618, 1162,  968,  968,  965,  617,  976, 1162,
      968,  976,  968,  607, 1162, 1994, 1994,  967, 1994,  976,
      977,  966,  966,  977,  976,  976, 1245, 1245, 1245, 1245,
      976,  977,  976, 1245,  579,  978,  977,  977,  978,  968,
     1162,  554,  977,  550,  977,  511,  978,  979, 1245, 1033,
      979,  978,  978,  485,  480,  478,  976,  978,  979,  978,
      470, 1319,  464,  979,  979,  980, 1319,  977,  980,  979,
     1319,  979,  438,  434,  981, 1319,  980,  981,  428, 1377,

      399,  980,  980,  398, 1377,  981,  978,  980, 1377,  980,
      981,  981,  982,  397, 1377,  982,  981,  395,  981, 1245,
      393,  392,  391,  982,  983,  979, 1118,  983,  982,  982,
     1118,  390,  389,  379,  982,  983,  982,  364, 1118,  360,
      983,  983,  980, 1118,  984,  981,  983,  984,  983, 1376,
      354, 1118, 1376,  353, 1376,  984,  985,  352, 1376,  985,
      984,  984,  350,  348,  347, 1122,  984,  985,  984, 1122,
      346,  983,  985,  985,  345,  982,  986, 1122,  985,  986,
      985, 1717, 1122,  344, 1717, 1946,  994,  986, 1946,  994,
     1122,  984,  986,  986,  335,  334, 1946,  994,  986, 1717,

      986,  995,  994,  994,  995, 2212, 2212,  985,  994, 2212,
      994,  996,  995,  333,  996, 2214, 2214,  995,  995, 2214,
      331,  997,  996,  995,  997,  995,  329,  996,  996,  328,
      327,  998,  997,  996,  998,  996,  986,  997,  997,  326,
     1242,  999,  998,  997,  999,  997,  994,  998,  998, 1242,
     1242, 1242,  999,  998,  325,  998,  995,  999,  999, 1000,
      324,  312, 1000,  999,  996,  999,  310,  300,  997, 1001,
     1000, 1242, 1001, 1272, 1272, 1000, 1000,  299, 1272, 1272,
     1001, 1000,  998, 1000, 1002, 1001, 1001, 1002, 1272, 2037,
     2037, 1001, 2037, 1001, 1003, 1002,  298, 1003, 1242,  295,

     1002, 1002,  293,  999, 1004, 1003, 1002, 1004, 1002, 1940,
     1003, 1003, 1940,  292, 1436, 1004, 1003, 1436, 1003, 1436,
     1004, 1004,  290, 1436,  289, 1000, 1004, 1940, 1004, 1005,
      273, 1123, 1005, 1001, 1272, 1123, 1262, 1262, 1262, 1262,
     1005, 1002,  263, 1123, 1006, 1005, 1005, 1006, 1123, 1003,
      262, 1005,  254, 1005, 1007, 1006, 1123, 1007, 1262,  248,
     1006, 1006,  214, 1004, 1008, 1007, 1006, 1008, 1006,  208,
     1007, 1007,  207,  204, 1437, 1008, 1007, 1437, 1007, 1437,
     1008, 1008, 1009, 1437, 1947, 1009, 1008, 1947, 1008, 1263,
     1263, 1263, 1263, 1009, 1005, 1947, 1006, 1010, 1009, 1009,

     1010,  140,  136,  131, 1009, 1460, 1009,  122, 1010, 1460,
      120, 1263,  112, 1010, 1010, 1011, 1007, 1460, 1011, 1010,
     1378, 1010, 1460, 1008, 1012, 1378, 1011, 1012,  103, 1378,
     1460, 1011, 1011, 1009, 1378, 1012,  101, 1011, 1439, 1011,
     1012, 1012, 1013, 1439, 2048, 1013, 1012, 1439, 1012,   92,
     2048, 1014, 1439, 1013, 1014, 2048, 2048, 2048, 1013, 1013,
     1015, 1010, 1014, 1015, 1013, 2048, 1013, 1014, 1014,   83,
       79, 1015,   72, 1014, 1440, 1014, 1015, 1015, 1016, 1440,
     1011, 1016, 1015, 1440, 1015,   64, 1440, 1017, 1012, 1016,
     1017, 1013, 1380, 1380, 1016, 1016, 1972, 1380, 1017, 1972,

     1016, 1380, 1016, 1017, 1017, 1018,   57, 1972, 1018, 1017,
     2048, 1017, 1014, 2216, 2216, 1019, 1018, 2216, 1019,    0,
        0, 1018, 1018, 1015,    0, 1020, 1019, 1018, 1020, 1018,
        0, 1019, 1019,    0,    0, 1438, 1020, 1019, 1016, 1019,
     1438, 1020, 1020,    0, 1438,    0, 1017, 1020, 1021, 1020,
     1438, 1021, 1022, 1441, 1441, 1022, 1018,    0, 1441, 1021,
        0,    0, 1441, 1022, 1021, 1021, 1019,    0, 1022, 1022,
     1021,    0, 1021, 1498, 1022, 1023, 1022, 1498, 1023, 1498,
     1990,    0,    0, 1990, 1024, 1020, 1023, 1024,    0,    0,
        0, 1023, 1023, 1025,    0, 1024, 1025, 1023, 1990, 1023,

     1024, 1024, 1026, 1021, 1025, 1026, 1024,    0, 1024, 1025,
     1025, 1022,    0, 1026,    0, 1025, 1498, 1025, 1026, 1026,
     1027, 1163,    0, 1027, 1026, 1163, 1026, 1163,    0,    0,
        0, 1027, 1973, 1163, 1024, 1973, 1027, 1027, 1163, 1023,
     1025,    0, 1027, 1973, 1027, 1038, 1038,    0, 1038, 1026,
     1237, 1237, 1237, 1237, 1039, 1039, 1038, 1039,    0,    0,
        0, 1038, 1038, 1961, 1163, 1039, 1961, 1038, 1961, 1038,
     1039, 1039, 1237,    0, 1237,    0, 1039, 1027, 1039, 1041,
     1041,    0, 1041, 1042, 1042, 1038, 1042, 1961, 2219, 2219,
     1041,    0, 2219,    0, 1042, 1041, 1041,    0, 1499, 1042,

     1042, 1041, 1499, 1041, 1499, 1042,    0, 1042, 1249, 1249,
     1249, 1249, 2221, 2221,    0, 1249, 2221,    0, 1039, 1040,
     1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040,
     1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1041,
     1042, 1499, 1040, 1040, 1040, 1040, 1040, 1040, 2223, 2223,
     1043, 1043, 2223, 1043,    0, 1269, 1269, 1269, 1269, 1044,
     1044, 1043, 1044, 1040, 1040, 1040, 1043, 1043,    0,    0,
     1044,    0, 1043,    0, 1043, 1044, 1044, 1269,    0, 1045,
     1045, 1044, 1045, 1044,    0, 1238, 1238, 1238, 1238,    0,
     1045, 1040, 1040, 1040, 1709, 1045, 1045, 1043, 1709,    0,

     1709, 1045,    0, 1045,    0, 1046, 1046, 1238, 1046, 1238,
     1044,    0,    0,    0, 1047, 1047, 1046, 1047,    0,    0,
        0, 1046, 1046, 1048, 1048, 1047, 1048, 1046, 1045, 1046,
     1047, 1047, 1049, 1049, 1048, 1049, 1047, 1709, 1047, 1048,
     1048, 1050, 1050, 1049, 1050, 1048,    0, 1048, 1049, 1049,
     2049,    0, 1050, 2049, 1049,    0, 1049, 1050, 1050, 1051,
     1051, 2049, 1051, 1050,    0, 1050,    0, 1046, 1198, 1198,
     1051, 2080, 1198,    0, 2080, 1051, 1051, 1047,    0, 1049,
     1198,    0, 2080, 1051,    0, 1198, 1048, 1048, 1056, 1056,
     1710, 1056, 1050,    0, 1710,    0, 1710, 1057, 1057, 1056,

     1057,    0,    0,    0, 1056, 1056, 1058, 1058, 1057, 1058,
     1056, 1198, 1056, 1057, 1057, 1059, 1059, 1058, 1059, 1057,
        0, 1057, 1058, 1058, 1060, 1060, 1059, 1060, 1058,    0,
     1058, 1059, 1059, 1710,    0, 1060, 1056, 1059,    0, 1059,
     1060, 1060, 1061, 1061, 1057, 1061, 1060,    0, 1060,    0,
        0, 1067, 1067, 1061, 1067,    0,    0, 1058, 1061, 1061,
     1062, 1062, 1067, 1062, 1061,    0, 1061, 1067, 1067,    0,
        0, 1062,    0, 1059,    0, 1067, 1062, 1062,    0, 1519,
     1519, 1060, 1062, 1519, 1062, 1063, 1063,    0, 1063, 1064,
     1064,    0, 1064, 1061, 2225, 2225, 1063,    0, 2225,    0,

     1064, 1063, 1063,    0,    0, 1064, 1064, 1063,    0, 1063,
        0, 1064,    0, 1064,    0, 1520, 1520, 1065, 1065, 1520,
     1065,    0, 1519, 1062,    0,    0, 1066, 1066, 1065, 1066,
        0,    0, 1063, 1065, 1065, 1338, 1064, 1066, 1338, 1065,
        0, 1065, 1066, 1066, 1068, 1068, 1338, 1068, 1066,    0,
     1066, 1338, 1338, 1072, 1072, 1068, 1072, 1338, 1520, 1338,
     1068, 1068, 1393, 1393, 1072, 1393,    0,    0, 1065, 1072,
     1072, 1073, 1073, 1393, 1073, 1072,    0, 1072, 1393, 1393,
     1074, 1074, 1073, 1074,    0,    0, 1066, 1073, 1073, 1338,
        0, 1074,    0, 1073,    0, 1073, 1074, 1074, 1075, 1075,

     2084, 1075, 1074, 2084, 1074,    0,    0, 1076, 1076, 1075,
     1076, 2084,    0, 1072, 1075, 1075,    0,    0, 1076,    0,
     1075,    0, 1075, 1076, 1076,    0, 1073, 1077, 1077, 1076,
     1077, 1076,    0, 1074, 1250, 1250, 1250, 1250, 1077, 1078,
     1078, 1250, 1078, 1077, 1077, 1075,    0,    0,    0, 1077,
     1078, 1077,    0, 2228, 2228, 1078, 1078, 2228, 1076, 1079,
     1079, 1078, 1079, 1078, 1381, 1381, 1381, 1381, 1080, 1080,
     1079, 1080,    0,    0,    0, 1079, 1079, 1081, 1081, 1080,
     1081, 1079,    0, 1079, 1080, 1080, 1381,    0, 1081, 1077,
     1080,    0, 1080, 1081, 1081, 1082, 1082, 2085, 1082, 1081,

     2085, 1081,    0,    0, 1327, 1078, 1082, 1327, 2085,    0,
        0, 1082, 1082, 1083, 1083, 1327, 1083, 1082,    0, 1082,
     1327, 1327,    0, 1079, 1083, 1080, 1327,    0, 1327, 1083,
     1083,    0, 1081, 1084, 1084, 1083, 1084, 1083,    0,    0,
        0, 1327, 1085, 1085, 1084, 1085,    0, 2232, 2232, 1084,
     1084, 2232,    0, 1085, 1082, 1084,    0, 1084, 1085, 1085,
     1086, 1086,    0, 1086, 1085,    0, 1085, 1260, 1260, 1260,
     1260, 1086, 1087, 1087, 1260, 1087, 1086, 1086, 1083,    0,
        0,    0, 1086, 1087, 1086, 1084,    0,    0, 1087, 1087,
     1088, 1088, 2114, 1088, 1087, 2114, 1087, 2138, 2240, 2240,

     2138, 1088, 2240, 2114, 1085,    0, 1088, 1088, 2138,    0,
     1089, 1089, 1088, 1089, 1088, 1382, 1382, 1382, 1382, 1086,
        0, 1089, 2139, 1087,    0, 2139, 1089, 1089, 1090, 1090,
        0, 1090, 1089, 2139, 1089,    0,    0, 1382,    0, 1090,
     1091, 1091,    0, 1091, 1090, 1090, 1247, 1247, 1247, 1247,
     1090, 1091, 1090, 1247, 1088,    0, 1091, 1091, 1247,    0,
     1092, 1092, 1091, 1092, 1091, 1247, 1247, 1247, 1247, 1093,
     1093, 1092, 1093,    0,    0, 1089, 1092, 1092,    0,    0,
     1093,    0, 1092, 2139, 1092, 1093, 1093, 1094, 1094, 1091,
     1094, 1093, 1090, 1093,    0,    0, 1095, 1095, 1094, 1095,

        0,    0,    0, 1094, 1094, 2147,    0, 1095, 2147, 1094,
        0, 1094, 1095, 1095, 1096, 1096, 2147, 1096, 1095, 1247,
     1095, 1092,    0,    0,    0, 1096, 1097, 1097, 2006, 1097,
     1096, 1096, 1093,    0, 2006, 2006, 1096, 1097, 1096, 2006,
     2006, 2006, 1097, 1097,    0,    0,    0, 1094, 1097, 2006,
     1097, 1098, 1098,    0, 1098, 1095, 1388, 1388, 1388, 1388,
        0,    0, 1098, 1099, 1099, 1096, 1099, 1098, 1098, 1387,
     1387, 1387, 1387, 1098, 1099, 1098, 1387, 1097, 1388, 1099,
     1099, 1100, 1100,    0, 1100, 1099,    0, 1099,    0,    0,
     1101, 1101, 1100, 1101, 2006, 2006,    0, 1100, 1100, 1102,

     1102, 1101, 1102, 1100,    0, 1100, 1101, 1101,    0,    0,
     1102, 1098, 1101,    0, 1101, 1102, 1102,    0, 1099, 1103,
     1103, 1102, 1103, 1102, 1740, 1740, 1740, 1740, 1104, 1104,
     1103, 1104,    0, 2253, 2253, 1103, 1103, 2253,    0, 1104,
     1100, 1103,    0, 1103, 1104, 1104, 1740, 2327, 2327, 1102,
     1104, 2327, 1104,    0, 1101,    0, 1105, 1105,    0, 1105,
     1239, 1239, 1239, 1239, 2015, 2015, 1103, 1105,    0, 2015,
     2015, 1239, 1105, 1105,    0, 1104,    0,    0, 1105, 2015,
     1105,    0, 1239,    0, 1239, 1248, 1248, 1248, 1248,    0,
        0,    0, 1248, 1735, 1735, 1735, 1735, 1248, 2380, 2380,

     1735,    0, 2380,    0, 1248, 1248, 1248, 1248, 1251, 1251,
     1251, 1251,    0, 1105,    0, 1251, 1835, 1835, 1835, 1835,
     1251,    0,    0, 1239,    0, 2015,    0, 1251, 1251, 1251,
     1251, 1257, 1257, 1257, 1257,    0,    0,    0, 1257, 1258,
     1258, 1258, 1258, 2396, 2396,    0, 1258, 2396, 1259, 1259,
     1259, 1259,    0, 1257, 1862, 1862, 1862, 1862, 1248, 1259,
        0, 1258, 1265, 1265, 1265, 1265, 1266, 1266, 1266, 1266,
     1259,    0, 1259, 1265,    0,    0, 1862, 1266,    0,    0,
        0, 1251, 1835,    0, 1265,    0, 1265, 1835, 1266,    0,
     1266, 1257, 1268, 1268, 1268, 1268, 1494,    0,    0, 1265,

     1494,    0, 1494, 1268, 1257,    0,    0,    0, 1494, 1259,
        0,    0, 1258, 1494, 1268,    0, 1268,    0, 1273, 1273,
     1273, 1273, 1274, 1274, 1274, 1274, 2064, 2064, 1266, 1273,
        0, 2064, 2064, 1274, 1275, 1275, 1275, 1275,    0, 1494,
     1273, 2064, 1273,    0, 1274, 1275, 1274,    0, 1276, 1276,
     1276, 1276, 1277, 1277, 1277, 1277, 1275, 2157, 1275, 1276,
     2157,    0,    0, 1277, 1546, 1546, 1546, 1546, 2157, 1273,
     1276, 1546, 1276,    0, 1277,    0, 1277,    0, 1274, 1278,
     1278, 1278, 1278, 1279, 1279, 1279, 1279, 2064, 1275, 2134,
     1278,    0, 2134,    0, 1279, 1280, 1280, 1280, 1280, 2168,

     2134, 1278, 2168, 1278,    0, 1279, 1280, 1279, 2157,    0,
     2168, 1276,    0, 2134,    0,    0, 1277, 1280,    0, 1280,
     1281, 1281, 1281, 1281, 1546, 1283, 1283, 1283, 1283,    0,
        0, 1281, 2174,    0, 1278, 2174, 1283, 1546, 1795, 1795,
     1795, 1795, 1281, 2174, 1281, 1795,    0, 1283, 1279, 1283,
     1284, 1284, 1284, 1284, 1285, 1285, 1285, 1285,    0, 1280,
     2177, 1284,    0, 2177,    0, 1285, 1286, 1286, 1286, 1286,
        0, 2177, 1284,    0, 1284,    0, 1285, 1286, 1285, 2174,
        0,    0, 1283, 1287, 1287, 1287, 1287,    0, 1286,    0,
     1286,    0,    0,    0, 1287, 1288, 1288, 1288, 1288, 1289,

     1289, 1289, 1289,    0,    0, 1287, 1288, 1287, 1284, 1285,
     1289, 1290, 1290, 1290, 1290,    0,    0, 1288,    0, 1288,
        0, 1289, 1290, 1289, 1954, 1954, 1954, 1954, 1286, 1291,
     1291, 1291, 1291, 1290, 1287, 1290, 1292, 1292, 1292, 1292,
     1291, 1856, 1856, 1856, 1856,    0, 1954, 1292, 1856,    0,
        0, 1291, 1288, 1291, 1293, 1293, 1293, 1293, 1292,    0,
     1292,    0,    0, 1289,    0, 1293, 1294, 1294, 1294, 1294,
     1290,    0, 1295, 1295, 1295, 1295, 1293, 1294, 1293, 1857,
     1857, 1857, 1857, 1295,    0,    0, 1857,    0, 1294,    0,
     1294, 1291,    0,    0, 1295, 1292, 1295,    0, 1296, 1296,

     1296, 1296, 1293, 1297, 1297, 1297, 1297,    0,    0, 1296,
     1298, 1298, 1298, 1298, 1297, 1299, 1299, 1299, 1299, 1295,
     1296, 1298, 1296,    0,    0, 1297, 1299, 1297,    0, 1294,
        0,    0, 1298,    0, 1298,    0,    0, 1299,    0, 1299,
     1300, 1300, 1300, 1300,    0, 1296, 1932, 1932, 1932, 1932,
     1297, 1300, 1301, 1301, 1301, 1301, 1302, 1302, 1302, 1302,
     2056, 1298, 1300, 1301, 1300,    0, 2056, 1302,    0,    0,
     1299, 2056, 2056, 2056, 1301,    0, 1301,    0, 1302,    0,
     1302, 2056, 1303, 1303, 1303, 1303, 1304, 1304, 1304, 1304,
        0,    0,    0, 1303,    0, 1932,    0, 1304, 1305, 1305,

     1305, 1305,    0, 1300, 1303,    0, 1303,    0, 1304, 1305,
     1304,    0, 1306, 1306, 1306, 1306, 1301, 1932, 1302,    0,
     1305, 2164, 1305, 1306, 2164,    0, 2056, 1307, 1307, 1307,
     1307,    0, 2164,    0, 1306,    0, 1306, 1304, 1307, 1308,
     1308, 1308, 1308,    0,    0, 2164, 1303,    0,    0, 1307,
     1308, 1307,    0, 1309, 1309, 1309, 1309,    0, 1305,    0,
        0, 1308, 2167, 1308, 1309, 2167,    0, 1306, 1310, 1310,
     1310, 1310,    0, 2167,    0, 1309, 1307, 1309,    0, 1310,
     1312, 1312, 1312, 1312, 2012, 2012, 2012, 2012, 1308,    0,
     1310, 1312, 1310,    0, 1313, 1313, 1313, 1313, 1342,    0,

        0, 1342, 1312,    0, 1312, 1313, 2012, 1309,    0, 1342,
     1635, 1635, 1635, 1635, 1342, 1342, 1313, 1635, 1313,    0,
     1342,    0, 1342,    0, 2167, 1310, 1311, 1311, 1311, 1311,
     1311, 1311, 1311, 1311, 1311, 1311, 1311, 1311, 1311, 1311,
     1311, 1311, 1311, 1311, 1311, 1311,    0, 1312,    0, 1311,
     1311, 1311, 1311, 1311, 1311,    0,    0, 1313, 1314, 1314,
     1314, 1314, 1328, 1342,    0, 1328,    0,    0,    0, 1314,
     1311, 1311, 1311, 1328, 1385, 1385, 1385, 1385, 1328, 1328,
     1314, 1385, 1314, 1635, 1328,    0, 1328,    0,    0,    0,
     1337,    0, 2179, 1337, 1339, 2179, 1385, 1339, 1311, 1311,

     1311, 1337,    0, 2179,    0, 1339, 1337, 1337, 1314,    0,
     1339, 1339, 1337, 1314, 1337,    0, 1339, 1314, 1339,    0,
     1988, 1988, 1988, 1988, 1328, 1336, 1336, 1336, 1336, 1336,
     1336, 1336, 1336, 1336, 1336, 1336, 1336, 1336, 1336, 1336,
     1336, 1336, 1336, 1336, 1336,    0, 1337, 1385, 1336, 1336,
     1336, 1336, 1336, 1336, 2179, 2057, 1340, 1339,    0, 1340,
        0, 2057, 2057, 1549, 1549, 1549, 1549, 1340, 2057, 1336,
     1336, 1336, 1340, 1340, 1549,    0, 2057, 1336, 1340, 1341,
     1340,    0, 1341,    0,    0, 1549, 1988, 1549,    0, 1343,
     1341, 1988, 1343,    0,    0, 1341, 1341, 1336, 1336, 1336,

     1343, 1341,    0, 1341,    0, 1343, 1343, 1344,    0,    0,
     1344, 1343,    0, 1343,    0,    0, 1345,    0, 1344, 1345,
     1340, 2057, 2057, 1344, 1344, 1346,    0, 1345, 1346, 1344,
        0, 1344, 1345, 1345, 1341,    0, 1346,    0, 1345,    0,
     1345, 1346, 1346, 1347,    0,    0, 1347, 1346,    0, 1346,
        0,    0,    0, 1343, 1347, 1348,    0,    0, 1348, 1347,
     1347,    0,    0,    0, 1344, 1347, 1348, 1347,    0,    0,
     1349, 1348, 1348, 1349, 1345,    0,    0, 1348,    0, 1348,
     1346, 1349,    0,    0,    0, 1350, 1349, 1349, 1350,    0,
        0,    0, 1349,    0, 1349,    0, 1350, 1351,    0,    0,

     1351, 1350, 1350,    0,    0, 1347, 1348, 1350, 1351, 1350,
        0,    0, 1352, 1351, 1351, 1352,    0,    0,    0, 1351,
        0, 1351, 1353, 1352,    0, 1353,    0, 1349, 1352, 1352,
        0,    0, 2178, 1353, 1352, 2178, 1352, 1354, 1353, 1353,
     1354,    0,    0, 2178, 1353,    0, 1353, 1355, 1354, 1350,
     1355,    0,    0, 1354, 1354,    0, 1351, 2176, 1355, 1354,
     2176, 1354, 1356, 1355, 1355, 1356,    0,    0, 2176, 1355,
        0, 1355, 1357, 1356, 1352, 1357,    0,    0, 1356, 1356,
        0, 1353,    0, 1357, 1356, 1354, 1356,    0, 1357, 1357,
     1358,    0, 2178, 1358, 1357,    0, 1357,    0,    0,    0,

     1359, 1358,    0, 1359,    0,    0, 1358, 1358,    0, 1356,
     1355, 1359, 1358,    0, 1358, 1360, 1359, 1359, 1360, 1357,
        0, 2176, 1359,    0, 1359,    0, 1360, 1361,    0,    0,
     1361, 1360, 1360, 1902, 1902, 1902, 1902, 1360, 1361, 1360,
     1902, 1358, 1362, 1361, 1361, 1362,    0,    0,    0, 1361,
        0, 1361,    0, 1362,    0, 1359,    0, 1363, 1362, 1362,
     1363,    0,    0,    0, 1362,    0, 1362,    0, 1363,    0,
        0,    0, 1364, 1363, 1363, 1364,    0,    0, 1360, 1363,
        0, 1363,    0, 1364, 1365,    0,    0, 1365, 1364, 1364,
        0, 1361,    0,    0, 1364, 1365, 1364,    0,    0,    0,

     1365, 1365, 1366,    0, 1362, 1366, 1365,    0, 1365,    0,
        0, 1367,    0, 1366, 1367,    0,    0,    0, 1366, 1366,
        0, 1363, 1367, 1364, 1366,    0, 1366, 1367, 1367, 1368,
        0,    0, 1368, 1367,    0, 1367,    0,    0,    0, 1369,
     1368,    0, 1369,    0, 1365, 1368, 1368,    0,    0,    0,
     1369, 1368,    0, 1368,    0, 1369, 1369, 1366,    0, 1370,
     1367, 1369, 1370, 1369,    0,    0,    0,    0, 1371,    0,
     1370, 1371,    0,    0,    0, 1370, 1370,    0, 1368, 1371,
        0, 1370,    0, 1370, 1371, 1371, 1372,    0,    0, 1372,
     1371,    0, 1371, 1369,    0, 1373,    0, 1372, 1373,    0,

        0,    0, 1372, 1372,    0,    0, 1373,    0, 1372,    0,
     1372, 1373, 1373,    0,    0,    0, 1370, 1373,    0, 1373,
     1386, 1386, 1386, 1386,    0,    0,    0, 1386,    0,    0,
        0, 1903, 1903, 1903, 1903, 1371, 1390, 1390, 1903, 1390,
     1391, 1391, 1386, 1391,    0, 1373,    0, 1390,    0, 1372,
     1373, 1391, 1390, 1390, 1373,    0, 1391, 1391, 1390,    0,
     1390,    0, 1391,    0, 1391, 1392, 1392,    0, 1392,    0,
        0,    0,    0, 1390, 1401, 1401, 1392, 1401,    0,    0,
        0, 1392, 1392,    0,    0, 1401,    0,    0,    0, 1392,
     1401, 1401,    0, 1386,    0,    0, 1401,    0, 1401,    0,

        0,    0, 1391, 1397, 1397, 1397, 1397, 1397, 1397, 1397,
     1397, 1397, 1397, 1397, 1397, 1397, 1397, 1397, 1397, 1397,
     1397, 1397, 1397,    0,    0,    0, 1397, 1397, 1397, 1397,
     1397, 1397,    0,    0, 1398, 1398,    0, 1398, 1401, 2066,
     2066, 2066, 2066, 1399, 1399, 1398, 1399, 1397, 1397, 1397,
     1398, 1398,    0,    0, 1399, 1397, 1398,    0, 1398, 1399,
     1399, 2066,    0, 1400, 1400, 1399, 1400, 1399,    0, 2100,
     2100, 2100, 2100,    0, 1400, 1397, 1397, 1397,    0, 1400,
     1400,    0,    0, 1402, 1402, 1400, 1402, 1400,    0,    0,
     1398, 2100, 1403, 1403, 1402, 1403,    0, 1399,    0, 1402,

     1402, 1404, 1404, 1403, 1404, 1402,    0, 1402, 1403, 1403,
        0,    0, 1404,    0, 1403,    0, 1403, 1404, 1404, 1405,
     1405,    0, 1405, 1404,    0, 1404, 1400,    0, 1406, 1406,
     1405, 1406,    0,    0,    0, 1405, 1405,    0, 1402, 1406,
        0, 1405,    0, 1405, 1406, 1406, 1989, 1989, 1989, 1989,
     1406,    0, 1406, 1407, 1407,    0, 1407, 1403,    0, 1732,
     1732, 1732, 1732,    0, 1407, 1404, 1732,    0,    0, 1407,
     1407, 1408, 1408,    0, 1408, 1407, 1405, 1407,    0,    0,
     1409, 1409, 1408, 1409,    0,    0, 1406, 1408, 1408, 1410,
     1410, 1409, 1410, 1408,    0, 1408, 1409, 1409, 1411, 1411,

     1410, 1411, 1409,    0, 1409, 1410, 1410,    0, 1407, 1411,
        0, 1410, 1989, 1410, 1411, 1411,    0, 1989, 1412, 1412,
     1411, 1412, 1411,    0,    0,    0,    0, 1413, 1413, 1412,
     1413, 1409, 1732, 1408, 1412, 1412, 1414, 1414, 1413, 1414,
     1412,    0, 1412, 1413, 1413,    0, 1410, 1414,    0, 1413,
        0, 1413, 1414, 1414, 1415, 1415,    0, 1415, 1414,    0,
     1414,    0, 1411, 1416, 1416, 1415, 1416,    0,    0,    0,
     1415, 1415,    0,    0, 1416,    0, 1415, 1412, 1415, 1416,
     1416, 1417, 1417,    0, 1417, 1416,    0, 1416,    0, 1413,
     1418, 1418, 1417, 1418,    0, 1414,    0, 1417, 1417,    0,

        0, 1418, 1415, 1417,    0, 1417, 1418, 1418, 1419, 1419,
        0, 1419, 1418,    0, 1418,    0,    0,    0,    0, 1419,
     1852, 1852, 1852, 1852, 1419, 1419, 1416,    0, 1417,    0,
     1419, 1852, 1419, 1420, 1420,    0, 1420, 1418,    0,    0,
        0,    0, 1852,    0, 1420, 1421, 1421,    0, 1421, 1420,
     1420, 2118, 2118, 2118, 2118, 1420, 1421, 1420, 2118, 1419,
        0, 1421, 1421, 1422, 1422,    0, 1422, 1421,    0, 1421,
     1731, 1731, 1731, 1731, 1422, 1423, 1423, 1731, 1423, 1422,
     1422,    0,    0,    0,    0, 1422, 1423, 1422, 1420,    0,
        0, 1423, 1423, 1424, 1424,    0, 1424, 1423,    0, 1423,

        0,    0, 1425, 1425, 1424, 1425,    0,    0, 1421, 1424,
     1424,    0,    0, 1425,    0, 1424,    0, 1424, 1425, 1425,
        0,    0, 1426, 1426, 1425, 1426, 1425, 1422,    0,    0,
     1731,    0,    0, 1426,    0,    0,    0, 1423, 1426, 1426,
        0,    0,    0, 1731, 1426,    0, 1426, 1427, 1427,    0,
     1427, 1428, 1428, 1425, 1428,    0,    0, 1424, 1427,    0,
        0,    0, 1428, 1427, 1427,    0,    0, 1428, 1428, 1427,
        0, 1427,    0, 1428,    0, 1428,    0, 1429, 1429,    0,
     1429,    0, 1426,    0, 1792, 1792, 1792, 1792, 1429,    0,
        0, 1792,    0, 1429, 1429, 1430, 1430,    0, 1430, 1429,

     1428, 1429, 1427,    0,    0,    0, 1430, 1431, 1431,    0,
     1431, 1430, 1430, 2153, 2153, 2153, 2153, 1430, 1431, 1430,
     2153,    0,    0, 1431, 1431,    0, 1429,    0,    0, 1431,
        0, 1431,    0,    0, 1432, 1432,    0, 1432,    0,    0,
        0,    0,    0, 1433, 1433, 1432, 1433,    0,    0, 1430,
     1432, 1432, 1434, 1434, 1433, 1434, 1432, 1792, 1432, 1433,
     1433,    0,    0, 1434, 1431, 1433,    0, 1433, 1434, 1434,
     1537, 1537, 1537, 1537, 1434,    0, 1434, 1900, 1900, 1900,
     1900, 1537, 2002, 2002, 2002, 2002, 1537,    0, 1900,    0,
        0,    0, 1537, 2002, 1537,    0,    0,    0,    0, 1900,

        0, 1432, 1434,    0, 2002,    0, 1433, 1434,    0,    0,
        0, 1434, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500,
     1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500,
     1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500,
     1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500,
     1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500,
     1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500,
     1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500, 1500,
     1500, 1500, 1500, 1500, 1500, 1500, 1500, 1538, 1538, 1538,
     1538,    0,    0,    0, 1538, 1539, 1539, 1539, 1539,    0,

        0,    0, 1539, 2159, 2159, 2159, 2159, 1539,    0, 1538,
     2159,    0,    0,    0, 1539, 1539, 1539, 1539, 1540, 1540,
     1540, 1540,    0,    0,    0, 1540,    0,    0,    0,    0,
     1540, 1545, 1545, 1545, 1545,    0,    0, 1540, 1540, 1540,
     1540,    0, 1545, 1547, 1547, 1547, 1547, 1545,    0,    0,
        0,    0,    0, 1545, 1547, 1545,    0,    0,    0, 1547,
     1538, 1548, 1548, 1548, 1548, 1547,    0, 1547, 1539,    0,
        0,    0, 1548, 1551, 1551, 1551, 1551, 1548,    0,    0,
        0, 1547, 1545, 1548, 1551, 1548,    0,    0,    0, 1551,
        0, 1540,    0, 1601,    0, 1551, 1601, 1551, 1793, 1793,

     1793, 1793,    0,    0, 1601, 1793,    0,    0, 1548, 1601,
     1601,    0,    0,    0,    0, 1601,    0, 1601,    0,    0,
     1551, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
     1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
     1552,    0,    0,    0, 1552, 1552, 1552, 1552, 1552, 1552,
     1601, 2148, 1554, 1554, 1554, 1554,    0, 2148, 2148, 1555,
     1555, 1555, 1555, 1554, 2148, 1552, 1552, 1552, 1554,    0,
     1555, 1793, 2148,    0, 1554, 1555, 1554,    0,    0,    0,
        0, 1555,    0, 1555,    0, 1556, 1556, 1556, 1556,    0,
        0,    0,    0, 1552, 1552, 1552, 1556, 1557, 1557, 1557,

     1557, 1556,    0,    0,    0,    0,    0, 1556, 1557, 1556,
        0, 1554,    0, 1557,    0,    0, 1555, 2148, 2148, 1557,
        0, 1557, 1558, 1558, 1558, 1558,    0,    0,    0, 1559,
     1559, 1559, 1559, 1558,    0,    0, 1556,    0, 1558, 1604,
     1559,    0, 1604,    0, 1558, 1559, 1558,    0, 1557,    0,
     1604, 1559,    0, 1559,    0, 1604, 1604, 1560, 1560, 1560,
     1560, 1604,    0, 1604, 1561, 1561, 1561, 1561, 1560,    0,
        0,    0,    0, 1560,    0, 1561,    0, 1558, 1559, 1560,
     1561, 1560, 1562, 1562, 1562, 1562, 1561,    0, 1561, 1563,
     1563, 1563, 1563, 1562, 1604,    0,    0,    0, 1562,    0,

     1563,    0,    0,    0, 1562, 1563, 1562, 1564, 1564, 1564,
     1564, 1563,    0, 1563, 1561,    0, 1560,    0, 1564, 1565,
     1565, 1565, 1565, 1564,    0, 2137, 2137, 2137, 2137, 1564,
     1565, 1564, 2137,    0,    0, 1565, 1566, 1566, 1566, 1566,
     1563, 1565,    0, 1565,    0,    0, 1562, 1566,    0,    0,
        0,    0, 1566,    0, 1567, 1567, 1567, 1567, 1566,    0,
     1566,    0,    0,    0, 1564, 1567, 1568, 1568, 1568, 1568,
     1567,    0,    0,    0,    0,    0, 1567, 1568, 1567,    0,
     1565,    0, 1568,    0,    0, 2137,    0,    0, 1568,    0,
     1568,    0, 1569, 1569, 1569, 1569,    0,    0, 2137,    0,

     1566,    0,    0, 1569,    0,    0,    0, 1567, 1569, 1570,
     1570, 1570, 1570,    0, 1569,    0, 1569,    0,    0,    0,
     1570, 1571, 1571, 1571, 1571, 1570,    0,    0,    0,    0,
     1568, 1570, 1571, 1570,    0,    0,    0, 1571,    0,    0,
        0, 1569,    0, 1571,    0, 1571, 1572, 1572, 1572, 1572,
     1573, 1573, 1573, 1573,    0,    0,    0, 1572, 1570,    0,
        0, 1573, 1572,    0,    0,    0, 1573,    0, 1572,    0,
     1572,    0, 1573,    0, 1573,    0, 1574, 1574, 1574, 1574,
     1575, 1575, 1575, 1575,    0, 1571,    0, 1574,    0,    0,
        0, 1575, 1574,    0,    0,    0, 1575, 1572, 1574,    0,

     1574,    0, 1575,    0, 1575, 1576, 1576, 1576, 1576, 1573,
        0,    0, 1577, 1577, 1577, 1577, 1576,    0,    0,    0,
        0, 1576,    0, 1577,    0,    0, 1574, 1576, 1577, 1576,
        0,    0, 1575,    0, 1577,    0, 1577, 1578, 1578, 1578,
     1578, 1579, 1579, 1579, 1579,    0,    0,    0, 1578,    0,
        0,    0, 1579, 1578, 1576,    0,    0, 1579,    0, 1578,
        0, 1578,    0, 1579,    0, 1579, 1580, 1580, 1580, 1580,
        0,    0,    0,    0,    0,    0, 1577, 1580, 1733, 1733,
     1733, 1733, 1580, 1584, 1584, 1584, 1584,    0, 1580, 1733,
     1580, 1578,    0,    0, 1584,    0,    0,    0,    0, 1584,

     1733,    0, 1733, 1579,    0, 1584,    0, 1584,    0,    0,
        0,    0,    0, 1580, 1582, 1582, 1582, 1582, 1582, 1582,
     1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
     1582, 1582, 1582, 1582, 1584,    0,    0, 1582, 1582, 1582,
     1582, 1582, 1582,    0,    0, 1583, 1583, 1583, 1583,    0,
        0,    0, 1585, 1585, 1585, 1585, 1583,    0, 1582, 1582,
     1582, 1583,    0, 1585,    0,    0,    0, 1583, 1585, 1583,
        0,    0,    0,    0, 1585,    0, 1585,    0, 1582, 1586,
     1586, 1586, 1586,    0,    0,    0, 1582, 1582, 1582,    0,
     1586,    0,    0,    0,    0, 1586, 1587, 1587, 1587, 1587,

     1583, 1586, 1585, 1586,    0,    0,    0, 1587,    0,    0,
        0,    0, 1587, 1588, 1588, 1588, 1588,    0, 1587,    0,
     1587,    0,    0,    0, 1588,    0, 1586,    0,    0, 1588,
     1589, 1589, 1589, 1589,    0, 1588,    0, 1588,    0,    0,
        0, 1589, 1590, 1590, 1590, 1590, 1589,    0,    0,    0,
        0,    0, 1589, 1590, 1589, 1587, 1596,    0, 1590, 1596,
     1588,    0,    0,    0, 1590, 1597, 1590, 1596, 1597,    0,
        0,    0, 1596, 1596,    0,    0, 1597,    0, 1596,    0,
     1596, 1597, 1597,    0,    0, 1589,    0, 1597, 1590, 1597,
        0,    0, 1598,    0, 1596, 1598,    0,    0,    0,    0,

        0,    0, 1600, 1598,    0, 1600,    0,    0, 1598, 1598,
        0,    0, 1597, 1600, 1598,    0, 1598,    0, 1600, 1600,
        0,    0,    0,    0, 1600,    0, 1600,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1598,
     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
        0, 1600,    0, 1599, 1599, 1599, 1599, 1599, 1599,    0,
        0,    0, 1602,    0,    0, 1602,    0,    0,    0, 2045,
     2045, 2045, 2045, 1602, 1599, 1599, 1599, 1599, 1602, 1602,
     2045,    0,    0,    0, 1602,    0, 1602,    0,    0,    0,

     1603, 2045,    0, 1603, 1605,    0,    0, 1605,    0,    0,
        0, 1603, 1599, 1599, 1599, 1605, 1603, 1603,    0,    0,
     1605, 1605, 1603, 1602, 1603,    0, 1605,    0, 1605,    0,
     1606,    0,    0, 1606,    0, 2130, 2130, 2130, 2130,    0,
        0, 1606, 2130,    0,    0, 1607, 1606, 1606, 1607,    0,
        0, 1603, 1606, 1605, 1606, 1608, 1607, 2130, 1608,    0,
        0, 1607, 1607,    0,    0,    0, 1608, 1607,    0, 1607,
     1609, 1608, 1608, 1609,    0,    0,    0, 1608,    0, 1608,
     1610, 1609,    0, 1610,    0,    0, 1609, 1609,    0, 1606,
     1611, 1610, 1609, 1611, 1609, 1607, 1610, 1610,    0,    0,

     1612, 1611, 1610, 1612, 1610,    0, 1611, 1611, 2130,    0,
        0, 1612, 1611,    0, 1611,    0, 1612, 1612,    0, 1608,
        0, 1609, 1612, 1613, 1612,    0, 1613,    0,    0,    0,
        0,    0, 1614,    0, 1613, 1614,    0, 1610,    0, 1613,
     1613, 1615,    0, 1614, 1615, 1613,    0, 1613, 1614, 1614,
     1616, 1611, 1615, 1616, 1614,    0, 1614, 1615, 1615,    0,
        0, 1616,    0, 1615, 1612, 1615, 1616, 1616,    0,    0,
        0,    0, 1616,    0, 1616, 1617,    0,    0, 1617,    0,
        0, 1614,    0,    0,    0, 1618, 1617, 1613, 1618,    0,
     1615, 1617, 1617,    0,    0, 1619, 1618, 1617, 1619, 1617,

        0, 1618, 1618,    0,    0, 1620, 1619, 1618, 1620, 1618,
        0, 1619, 1619,    0, 1616,    0, 1620, 1619,    0, 1619,
        0, 1620, 1620,    0,    0, 1621, 1617, 1620, 1621, 1620,
        0,    0,    0,    0,    0,    0, 1621, 1622,    0,    0,
     1622, 1621, 1621,    0, 1618, 1619,    0, 1621, 1622, 1621,
        0,    0,    0, 1622, 1622, 1623,    0, 1620, 1623, 1622,
        0, 1622,    0,    0, 1624,    0, 1623, 1624,    0,    0,
        0, 1623, 1623, 1625, 1621, 1624, 1625, 1623,    0, 1623,
     1624, 1624,    0,    0, 1625,    0, 1624,    0, 1624, 1625,
     1625,    0,    0,    0,    0, 1625,    0, 1625,    0, 1629,

        0, 1622, 1629, 2058, 2058, 2058, 2058,    0,    0, 1623,
     1629,    0,    0,    0, 2058, 1629, 1629,    0,    0,    0,
     1625, 1629,    0, 1629,    0, 2058, 1624, 1626, 1626, 1626,
     1626, 1626, 1626, 1626, 1626, 1626, 1626, 1626, 1626, 1626,
     1626, 1626, 1626, 1626, 1626, 1626, 1626,    0,    0, 1629,
     1626, 1626, 1626, 1626, 1626, 1626,    0,    0, 1627,    0,
        0, 1627,    0,    0,    0, 1734, 1734, 1734, 1734, 1627,
        0, 1626, 1626, 1626, 1627, 1627, 1734,    0,    0,    0,
     1627, 1628, 1627,    0, 1628,    0,    0, 1734,    0, 1734,
        0, 1626, 1628, 1630,    0,    0, 1630, 1628, 1628, 1626,

     1626, 1626,    0, 1628, 1630, 1628,    0,    0,    0, 1630,
     1630, 1631,    0, 1627, 1631, 1630,    0, 1630,    0,    0,
     1632,    0, 1631, 1632,    0,    0, 1734, 1631, 1631,    0,
        0, 1632, 1628, 1631,    0, 1631, 1632, 1632, 1633,    0,
     1630, 1633, 1632,    0, 1632,    0,    0,    0,    0, 1633,
     2088, 2088, 2088, 2088, 1633, 1633,    0, 2088, 1634,    0,
     1633, 1634, 1633,    0,    0,    0,    0, 1632,    0, 1634,
     1631,    0, 2088,    0, 1634, 1634,    0,    0, 1636, 1636,
     1634, 1636, 1634,    0,    0,    0,    0,    0,    0, 1636,
        0,    0,    0, 1633, 1636, 1636, 1637, 1637,    0, 1637,

     1636,    0, 1636,    0, 1634,    0,    0, 1637, 1638, 1638,
     2088, 1638, 1637, 1637,    0,    0, 1636,    0, 1637, 1638,
     1637,    0,    0, 2088, 1638, 1638,    0,    0, 1640, 1640,
     1638, 1640, 1638,    0,    0,    0,    0,    0,    0, 1640,
        0,    0,    0, 1637, 1640, 1640,    0,    0,    0,    0,
     1640,    0, 1640,    0,    0, 1638, 1639, 1639, 1639, 1639,
     1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639,
     1639, 1639, 1639, 1639, 1639, 1639,    0,    0,    0, 1639,
     1639, 1639, 1639, 1639, 1639,    0,    0, 1640, 1641, 1641,
        0, 1641,    0,    0,    0, 1738, 1738, 1738, 1738, 1641,

     1639, 1639, 1639, 1639, 1641, 1641, 1738,    0,    0,    0,
     1641, 1738, 1641,    0,    0, 1642, 1642, 1738, 1642, 1738,
        0,    0,    0,    0, 1643, 1643, 1642, 1643, 1639, 1639,
     1639, 1642, 1642, 1644, 1644, 1643, 1644, 1642,    0, 1642,
     1643, 1643,    0,    0, 1644, 1641, 1643,    0, 1643, 1644,
     1644,    0,    0,    0, 1738, 1644,    0, 1644,    0,    0,
     1645, 1645,    0, 1645,    0,    0, 1642,    0,    0, 1646,
     1646, 1645, 1646,    0,    0, 1643, 1645, 1645,    0,    0,
     1646,    0, 1645,    0, 1645, 1646, 1646,    0, 1644, 1647,
     1647, 1646, 1647, 1646,    0,    0,    0,    0,    0,    0,

     1647, 1648, 1648,    0, 1648, 1647, 1647,    0,    0, 1645,
        0, 1647, 1648, 1647,    0,    0,    0, 1648, 1648, 1649,
     1649,    0, 1649, 1648,    0, 1648,    0,    0, 1646,    0,
     1649, 1650, 1650,    0, 1650, 1649, 1649,    0,    0, 1647,
        0, 1649, 1650, 1649,    0,    0,    0, 1650, 1650,    0,
        0, 1651, 1651, 1650, 1651, 1650,    0,    0,    0,    0,
     1652, 1652, 1651, 1652,    0, 1648,    0, 1651, 1651, 1768,
     1649, 1652, 1768, 1651,    0, 1651, 1652, 1652, 1653, 1653,
     1768, 1653, 1652,    0, 1652, 1768, 1768,    0, 1650, 1653,
        0, 1768,    0, 1768, 1653, 1653,    0,    0, 1654, 1654,

     1653, 1654, 1653,    0,    0,    0,    0,    0,    0, 1654,
     1655, 1655, 1651, 1655, 1654, 1654,    0,    0, 1768,    0,
     1654, 1655, 1654,    0, 1652,    0, 1655, 1655, 1656, 1656,
        0, 1656, 1655,    0, 1655,    0,    0,    0,    0, 1656,
     1657, 1657, 1653, 1657, 1656, 1656,    0, 1654,    0,    0,
     1656, 1657, 1656,    0,    0,    0, 1657, 1657,    0, 1655,
     1658, 1658, 1657, 1658, 1657,    0,    0,    0,    0,    0,
        0, 1658, 1659, 1659,    0, 1659, 1658, 1658,    0,    0,
        0,    0, 1658, 1659, 1658,    0,    0, 1770, 1659, 1659,
     1770, 1657, 1656,    0, 1659,    0, 1659,    0, 1770, 1660,

     1660,    0, 1660, 1770, 1770,    0,    0,    0,    0, 1770,
     1660, 1770,    0,    0,    0, 1660, 1660, 1661, 1661, 1658,
     1661, 1660, 1659, 1660,    0,    0, 1662, 1662, 1661, 1662,
        0,    0,    0, 1661, 1661,    0, 1770, 1662,    0, 1661,
        0, 1661, 1662, 1662,    0,    0, 1663, 1663, 1662, 1663,
     1662, 1660,    0,    0,    0,    0,    0, 1663, 1664, 1664,
        0, 1664, 1663, 1663,    0,    0, 1661,    0, 1663, 1664,
     1663,    0,    0,    0, 1664, 1664, 2093, 2093, 2093, 2093,
     1664,    0, 1664,    0,    0, 1665, 1665, 2093, 1665,    0,
     1662,    0, 2094, 2094, 2094, 2094, 1665,    0, 2093,    0,

     1663, 1665, 1665, 2094,    0, 1669, 1669, 1665, 1669, 1665,
        0,    0,    0,    0, 2094,    0, 1669,    0,    0,    0,
     1664, 1669, 1669,    0,    0,    0,    0, 1669,    0, 1669,
        0,    0, 1665, 1666, 1666, 1666, 1666, 1666, 1666, 1666,
     1666, 1666, 1666, 1666, 1666, 1666, 1666, 1666, 1666, 1666,
     1666, 1666, 1666,    0,    0, 1669, 1666, 1666, 1666, 1666,
     1666, 1666,    0,    0, 1667, 1667,    0, 1667,    0,    0,
        0,    0,    0,    0,    0, 1667,    0, 1666, 1666, 1666,
     1667, 1667,    0,    0,    0,    0, 1667,    0, 1667,    0,
        0,    0, 1668, 1668,    0, 1668,    0, 1666,    0,    0,

        0, 1670, 1670, 1668, 1670, 1666, 1666, 1666, 1668, 1668,
     1671, 1671, 1670, 1671, 1668,    0, 1668, 1670, 1670, 1667,
        0, 1671,    0, 1670,    0, 1670, 1671, 1671, 1672, 1672,
        0, 1672, 1671,    0, 1671,    0,    0,    0,    0, 1672,
        0,    0,    0, 1668, 1672, 1672, 1673, 1673, 1670, 1673,
     1672,    0, 1672,    0,    0,    0,    0, 1673,    0,    0,
        0,    0, 1673, 1673,    0,    0,    0,    0, 1673, 1671,
     1673, 1674, 1674,    0, 1674, 1672,    0,    0, 1730, 1730,
     1730, 1730, 1674,    0,    0,    0,    0, 1674, 1674, 1730,
        0,    0,    0, 1674, 1730, 1674, 1736, 1736, 1736, 1736,

     1730, 1673, 1730,    0,    0,    0,    0, 1736, 1737, 1737,
     1737, 1737, 1736,    0,    0,    0,    0, 1674, 1736, 1737,
     1736,    0, 1769,    0, 1737, 1769,    0, 1736,    0,    0,
     1737,    0, 1737, 1769, 1739, 1739, 1739, 1739, 1769, 1769,
     1730,    0,    0,    0, 1769, 1739, 1769,    0, 1741, 1741,
     1741, 1741, 1742, 1742, 1742, 1742, 1739, 1737, 1739, 1741,
        0,    0,    0, 1742, 1741,    0,    0,    0, 1742,    0,
     1741,    0, 1741,    0, 1742,    0, 1742, 1743, 1743, 1743,
     1743, 1769,    0,    0, 1744, 1744, 1744, 1744, 1743,    0,
        0,    0,    0, 1743,    0, 1744,    0, 1741,    0, 1743,

     1744, 1743, 1745, 1745, 1745, 1745, 1744,    0, 1744,    0,
        0,    0,    0, 1745,    0,    0,    0, 1742, 1745,    0,
     1746, 1746, 1746, 1746, 1745,    0, 1745, 1747, 1747, 1747,
     1747, 1746,    0, 1744,    0,    0, 1746,    0, 1747,    0,
        0, 1743, 1746, 1747, 1746, 1748, 1748, 1748, 1748, 1747,
        0, 1747,    0,    0,    0,    0, 1748, 1745,    0,    0,
        0, 1748, 1749, 1749, 1749, 1749,    0, 1748,    0, 1748,
        0, 1746,    0, 1749, 1747,    0,    0,    0, 1749, 1750,
     1750, 1750, 1750,    0, 1749,    0, 1749,    0,    0,    0,
     1750,    0,    0,    0,    0, 1750, 1751, 1751, 1751, 1751,

        0, 1750,    0, 1750,    0, 1748,    0, 1751,    0,    0,
        0,    0, 1751, 1749,    0,    0,    0,    0, 1751,    0,
     1751, 1752, 1752, 1752, 1752, 1753, 1753, 1753, 1753,    0,
     1750,    0, 1752,    0,    0,    0, 1753, 1752,    0,    0,
        0, 1753,    0, 1752,    0, 1752,    0, 1753,    0, 1753,
        0,    0,    0,    0,    0, 1756, 1756, 1756, 1756,    0,
     1751,    0, 1755, 1755, 1755, 1755, 1756,    0,    0,    0,
        0, 1756, 1752, 1755,    0,    0,    0, 1756, 1755, 1756,
        0,    0,    0,    0, 1755,    0, 1755, 1753, 1754, 1754,
     1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,

     1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,    0,    0,
        0, 1754, 1754, 1754, 1754, 1754, 1754,    0,    0, 1756,
        0,    0, 1755,    0,    0, 1758, 1758, 1758, 1758,    0,
        0,    0, 1754, 1754, 1754, 1754, 1758, 2095, 2095, 2095,
     2095, 1758, 1759, 1759, 1759, 1759,    0, 1758, 2095, 1758,
        0,    0,    0, 1759,    0,    0,    0,    0, 1759, 2095,
     1754, 1754, 1754,    0, 1759,    0, 1759, 1760, 1760, 1760,
     1760, 1761, 1761, 1761, 1761,    0, 1758,    0, 1760,    0,
        0,    0, 1761, 1760,    0,    0,    0, 1761,    0, 1760,
        0, 1760,    0, 1761, 1759, 1761, 1762, 1762, 1762, 1762,

        0,    0,    0,    0,    0,    0,    0, 1762, 1763, 1763,
     1763, 1763, 1762,    0,    0,    0,    0,    0, 1762, 1763,
     1762,    0, 1761,    0, 1763, 1760, 1764, 1764, 1764, 1764,
     1763,    0, 1763,    0,    0, 1767,    0, 1764, 1767,    0,
        0,    0, 1764,    0,    0,    0, 1767,    0, 1764,    0,
     1764, 1767, 1767, 1762,    0,    0,    0, 1767, 1771, 1767,
        0, 1771,    0,    0,    0, 1763, 1767, 1772,    0, 1771,
     1772,    0,    0,    0, 1771, 1771, 1773,    0, 1772, 1773,
     1771,    0, 1771, 1772, 1772, 1774,    0, 1773, 1774, 1772,
     1764, 1772, 1773, 1773, 1775,    0, 1774, 1775, 1773,    0,

     1773, 1774, 1774,    0,    0, 1775,    0, 1774,    0, 1774,
     1775, 1775,    0,    0,    0,    0, 1775, 1776, 1775,    0,
     1776,    0,    0, 1771,    0, 1773, 1777,    0, 1776, 1777,
        0, 1772,    0, 1776, 1776, 1779,    0, 1777, 1779, 1776,
     1774, 1776, 1777, 1777, 1778, 1775, 1779, 1778, 1777,    0,
     1777, 1779, 1779,    0,    0, 1778,    0, 1779,    0, 1779,
     1778, 1778,    0,    0, 1776,    0, 1778, 1780, 1778,    0,
     1780,    0,    0,    0,    0,    0, 1781,    0, 1780, 1781,
        0,    0,    0, 1780, 1780, 1786, 1777, 1781, 1786, 1780,
        0, 1780, 1781, 1781,    0, 1778, 1786,    0, 1781, 1779,

     1781, 1786, 1786,    0,    0,    0,    0, 1786, 1783, 1786,
        0, 1783, 1784,    0,    0, 1784,    0,    0, 1780, 1783,
        0,    0,    0, 1784, 1783, 1783,    0,    0, 1784, 1784,
     1783,    0, 1783,    0, 1784,    0, 1784, 1786, 1781, 1782,
     1782, 1782, 1782, 1782, 1782, 1782, 1782, 1782, 1782, 1782,
     1782, 1782, 1782, 1782, 1782, 1782, 1782, 1782, 1782,    0,
        0,    0, 1782, 1782, 1782, 1782, 1782, 1782, 1783,    0,
        0, 1785,    0,    0, 1785,    0, 1784,    0, 2146, 2146,
     2146, 2146, 1785, 1782, 1782, 1782, 1782, 1785, 1785, 2146,
        0,    0,    0, 1785,    0, 1785,    0,    0,    0, 1787,

     2146,    0, 1787, 1788,    0,    0, 1788,    0,    0,    0,
     1787, 1782, 1782, 1782, 1788, 1787, 1787,    0,    0, 1788,
     1788, 1787, 1785, 1787,    0, 1788, 1789, 1788,    0, 1789,
        0,    0,    0,    0,    0,    0, 1790, 1789,    0, 1790,
        0,    0, 1789, 1789,    0,    0,    0, 1790, 1789,    0,
     1789,    0, 1790, 1790, 1788,    0, 1791, 1787, 1790, 1791,
     1790,    0,    0, 1794, 1794, 1794, 1794, 1791, 2150, 2150,
     2150, 2150, 1791, 1791, 1794,    0,    0,    0, 1791, 2150,
     1791, 1796, 1796, 1789, 1796, 1794,    0, 1794,    0,    0,
     2150,    0, 1796, 1790,    0,    0,    0, 1796, 1796, 1797,

     1797,    0, 1797, 1796,    0, 1796,    0,    0, 1798, 1798,
     1797, 1798, 1796,    0,    0, 1797, 1797,    0,    0, 1798,
     1791, 1797,    0, 1797, 1798, 1798,    0,    0, 1799, 1799,
     1798, 1799, 1798,    0,    0,    0,    0,    0,    0, 1799,
     1800, 1800,    0, 1800, 1799, 1799,    0,    0, 1797,    0,
     1799, 1800, 1799,    0,    0,    0, 1800, 1800, 1801, 1801,
        0, 1801, 1800,    0, 1800,    0,    0, 1798,    0, 1801,
     1802, 1802,    0, 1802, 1801, 1801,    0, 1799,    0,    0,
     1801, 1802, 1801,    0,    0,    0, 1802, 1802,    0,    0,
     1803, 1803, 1802, 1803, 1802,    0,    0,    0,    0, 1804,

     1804, 1803, 1804,    0,    0, 1800, 1803, 1803,    0,    0,
     1804,    0, 1803,    0, 1803, 1804, 1804, 1805, 1805, 1802,
     1805, 1804, 1801, 1804,    0,    0,    0,    0, 1805,    0,
        0,    0,    0, 1805, 1805, 1806, 1806,    0, 1806, 1805,
        0, 1805,    0,    0,    0, 1803, 1806,    0,    0,    0,
     1804, 1806, 1806,    0,    0, 1807, 1807, 1806, 1807, 1806,
        0,    0,    0,    0, 1805,    0, 1807, 1808, 1808,    0,
     1808, 1807, 1807,    0,    0,    0,    0, 1807, 1808, 1807,
        0,    0,    0, 1808, 1808, 1809, 1809,    0, 1809, 1808,
        0, 1808,    0,    0,    0, 1806, 1809, 1810, 1810,    0,

     1810, 1809, 1809,    0,    0,    0, 1807, 1809, 1810, 1809,
        0,    0,    0, 1810, 1810,    0,    0,    0,    0, 1810,
        0, 1810, 1812, 1812,    0, 1812, 1813, 1813,    0, 1813,
        0, 1808,    0, 1812,    0,    0, 1809, 1813, 1812, 1812,
        0,    0, 1813, 1813, 1812,    0, 1812,    0, 1813,    0,
     1813,    0,    0,    0,    0,    0,    0,    0,    0, 1810,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
     1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811, 1811,
        0,    0, 1812, 1811, 1811, 1811, 1811, 1811, 1811,    0,
     1813,    0, 1814, 1814,    0, 1814,    0,    0,    0,    0,

        0,    0,    0, 1814, 1811, 1811, 1811, 1811, 1814, 1814,
        0,    0,    0,    0, 1814,    0, 1814,    0,    0,    0,
     1815, 1815,    0, 1815, 1816, 1816,    0, 1816,    0,    0,
        0, 1815, 1811, 1811, 1811, 1816, 1815, 1815,    0,    0,
     1816, 1816, 1815, 1814, 1815,    0, 1816,    0, 1816, 1817,
     1817,    0, 1817, 1818, 1818,    0, 1818,    0,    0,    0,
     1817,    0,    0,    0, 1818, 1817, 1817,    0,    0, 1818,
     1818, 1817, 1815, 1817,    0, 1818,    0, 1818,    0,    0,
     1819, 1819, 1816, 1819,    0,    0,    0,    0,    0,    0,
        0, 1819, 1820, 1820,    0, 1820, 1819, 1819,    0,    0,

     1817,    0, 1819, 1820, 1819,    0,    0,    0, 1820, 1820,
     1818,    0,    0,    0, 1820,    0, 1820, 1851, 1851, 1851,
     1851, 1853, 1853, 1853, 1853,    0,    0,    0, 1851,    0,
        0,    0, 1853, 1851,    0,    0,    0, 1819,    0, 1851,
        0, 1851,    0, 1853,    0, 1853, 1855, 1855, 1855, 1855,
     1859, 1859, 1859, 1859,    0,    0, 1820, 1855,    0,    0,
        0, 1859,    0,    0, 1851,    0, 1859,    0, 1855,    0,
     1855,    0, 1859,    0, 1859,    0, 1860, 1860, 1860, 1860,
     1861, 1861, 1861, 1861,    0,    0,    0, 1860,    0,    0,
        0, 1861, 1860,    0,    0,    0, 1859, 1855, 1860,    0,

     1860,    0, 1861,    0, 1861, 1863, 1863, 1863, 1863, 1864,
     1864, 1864, 1864,    0,    0,    0, 1863,    0,    0,    0,
     1864, 1863,    0,    0,    0, 1864,    0, 1863,    0, 1863,
        0, 1864,    0, 1864, 1865, 1865, 1865, 1865,    0,    0,
     1860,    0,    0,    0,    0, 1865, 1866, 1866, 1866, 1866,
     1865,    0, 1863,    0,    0,    0, 1865, 1866, 1865,    0,
     1864,    0, 1866, 1867, 1867, 1867, 1867,    0, 1866,    0,
     1866,    0,    0,    0, 1867, 1868, 1868, 1868, 1868, 1867,
     1865,    0,    0,    0,    0, 1867, 1868, 1867,    0,    0,
        0, 1868, 1869, 1869, 1869, 1869,    0, 1868,    0, 1868,

        0,    0,    0, 1869, 1870, 1870, 1870, 1870, 1869,    0,
     1866,    0, 1867,    0, 1869, 1870, 1869,    0,    0,    0,
     1870,    0, 1871, 1871, 1871, 1871, 1870,    0, 1870, 1872,
     1872, 1872, 1872, 1871,    0,    0,    0, 1868, 1871,    0,
     1872,    0,    0,    0, 1871, 1872, 1871, 1873, 1873, 1873,
     1873, 1872,    0, 1872,    0, 1870,    0,    0, 1873, 1874,
     1874, 1874, 1874, 1873,    0,    0,    0,    0,    0, 1873,
     1874, 1873,    0,    0,    0, 1874, 1875, 1875, 1875, 1875,
        0, 1874,    0, 1874, 1871,    0,    0, 1875,    0,    0,
     1872,    0, 1875,    0,    0,    0, 1873,    0, 1875,    0,

     1875, 1876, 1876, 1876, 1876,    0,    0,    0, 1877, 1877,
     1877, 1877, 1876,    0,    0,    0,    0, 1876, 1874, 1877,
        0,    0,    0, 1876, 1877, 1876,    0, 1875,    0,    0,
     1877,    0, 1877, 1878, 1878, 1878, 1878,    0,    0,    0,
     1879, 1879, 1879, 1879, 1878,    0,    0,    0,    0, 1878,
     1882, 1879,    0, 1882,    0, 1878, 1879, 1878,    0, 1877,
     1876, 1882, 1879,    0, 1879, 1883, 1882, 1882, 1883,    0,
        0,    0, 1882,    0, 1882,    0, 1883, 1884,    0,    0,
     1884, 1883, 1883, 1878,    0,    0,    0, 1883, 1884, 1883,
        0, 1879, 1885, 1884, 1884, 1885, 1882,    0,    0, 1884,

        0, 1884,    0, 1885, 1886,    0,    0, 1886, 1885, 1885,
        0,    0,    0,    0, 1885, 1886, 1885,    0,    0,    0,
     1886, 1886, 1887,    0, 1884, 1887, 1886,    0, 1886, 1883,
        0, 1888,    0, 1887, 1888,    0,    0,    0, 1887, 1887,
        0,    0, 1888, 1885, 1887,    0, 1887, 1888, 1888, 1889,
     1886,    0, 1889, 1888,    0, 1888,    0,    0,    0, 1890,
     1889,    0, 1890,    0,    0, 1889, 1889,    0,    0,    0,
     1890, 1889,    0, 1889, 1891, 1890, 1890, 1891,    0,    0,
     1888, 1890,    0, 1890, 1892, 1891, 1887, 1892,    0,    0,
     1891, 1891,    0,    0,    0, 1892, 1891,    0, 1891,    0,

     1892, 1892, 1893,    0,    0, 1893, 1892,    0, 1892,    0,
     1890, 1889,    0, 1893,    0,    0,    0, 1894, 1893, 1893,
     1894,    0,    0,    0, 1893,    0, 1893,    0, 1894,    0,
        0,    0, 1895, 1894, 1894, 1895, 1891,    0,    0, 1894,
        0, 1894,    0, 1895, 1896, 1892,    0, 1896, 1895, 1895,
        0, 1893,    0,    0, 1895, 1896, 1895,    0,    0,    0,
     1896, 1896, 1897,    0,    0, 1897, 1896,    0, 1896,    0,
        0, 1898,    0, 1897, 1898,    0, 1894,    0, 1897, 1897,
        0,    0, 1898, 1895, 1897,    0, 1897, 1898, 1898,    0,
        0,    0,    0, 1898, 1899, 1898,    0, 1899, 1901, 1901,

     1901, 1901,    0, 1896,    0, 1899,    0,    0,    0, 1901,
     1899, 1899,    0, 1897, 1905, 1905, 1899, 1905, 1899,    0,
     1901, 1898, 1901,    0,    0, 1905, 1906, 1906,    0, 1906,
     1905, 1905,    0,    0,    0,    0, 1905, 1906, 1905,    0,
        0,    0, 1906, 1906,    0, 1899, 1907, 1907, 1906, 1907,
     1906,    0,    0,    0,    0, 1908, 1908, 1907, 1908,    0,
     1905,    0, 1907, 1907, 1909, 1909, 1908, 1909, 1907,    0,
     1907, 1908, 1908,    0,    0, 1909,    0, 1908,    0, 1908,
     1909, 1909,    0,    0,    0,    0, 1909,    0, 1909,    0,
     1906, 1910, 1910, 1907, 1910,    0,    0,    0,    0,    0,

     1911, 1911, 1910, 1911,    0,    0, 1908, 1910, 1910,    0,
     1909, 1911,    0, 1910,    0, 1910, 1911, 1911, 1912, 1912,
        0, 1912, 1911,    0, 1911,    0,    0,    0,    0, 1912,
     1913, 1913,    0, 1913, 1912, 1912,    0,    0,    0,    0,
     1912, 1913, 1912,    0,    0,    0, 1913, 1913,    0, 1911,
     1914, 1914, 1913, 1914, 1913, 1910,    0,    0,    0,    0,
        0, 1914, 1915, 1915,    0, 1915, 1914, 1914,    0,    0,
        0,    0, 1914, 1915, 1914,    0,    0,    0, 1915, 1915,
     1912, 1913, 1916, 1916, 1915, 1916, 1915,    0,    0,    0,
        0, 1917, 1917, 1916, 1917,    0,    0,    0, 1916, 1916,

     1918, 1918, 1917, 1918, 1916,    0, 1916, 1917, 1917,    0,
        0, 1918, 1914, 1917,    0, 1917, 1918, 1918, 1919, 1919,
        0, 1919, 1918, 1915, 1918,    0,    0,    0,    0, 1919,
        0, 1916,    0,    0, 1919, 1919, 1920, 1920,    0, 1920,
     1919,    0, 1919,    0,    0, 1921, 1921, 1920, 1921,    0,
     1917, 1918, 1920, 1920, 1922, 1922, 1921, 1922, 1920,    0,
     1920, 1921, 1921,    0,    0, 1922,    0, 1921,    0, 1921,
     1922, 1922, 1944, 1944, 1944, 1944, 1922, 1919, 1922, 1945,
     1945, 1945, 1945, 1944,    0,    0,    0, 1920, 1944,    0,
     1945,    0,    0,    0, 1944, 1921, 1944, 1948, 1948, 1948,

     1948, 1945,    0, 1945,    0, 1922,    0,    0, 1948, 1949,
     1949, 1949, 1949, 1948,    0,    0,    0,    0,    0, 1948,
     1949, 1948,    0,    0,    0, 1949, 1950, 1950, 1950, 1950,
        0, 1949,    0, 1949, 1948,    0, 1944, 1950,    0,    0,
        0, 1945, 1950, 1951, 1951, 1951, 1951,    0, 1950,    0,
     1950,    0,    0,    0, 1951, 1953, 1953, 1953, 1953, 1951,
     1997, 1997, 1997, 1997,    0, 1951, 1953, 1951,    0,    0,
        0, 1997, 1949,    0,    0, 1950, 1997, 1953,    0, 1953,
        0,    0, 1997,    0, 1997,    0,    0,    0,    0, 1997,
        0,    0,    0,    0, 1951, 1952, 1952, 1952, 1952, 1952,

     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952,
     1955, 1955, 1955, 1955, 1956, 1956, 1956, 1956,    0,    0,
        0, 1955,    0,    0,    0, 1956, 1955,    0,    0,    0,
     1956,    0, 1955,    0, 1955,    0, 1956,    0, 1956, 1957,

     1957, 1957, 1957, 1958, 1958, 1958, 1958,    0,    0,    0,
     1957,    0,    0,    0, 1958, 1957,    0,    0,    0, 1958,
     1955, 1957,    0, 1957,    0, 1958,    0, 1958, 1960, 1960,
     1960, 1960, 1964,    0,    0, 1964, 1956,    0,    0, 1960,
        0,    0,    0, 1964, 1960,    0, 1957,    0, 1964, 1964,
     1960,    0, 1960,    0, 1964,    0, 1964,    0, 1958, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,    0,
        0,    0, 1959, 1959, 1959, 1959, 1959, 1959,    0,    0,
        0, 1963, 1960,    0, 1963, 1964,    0,    0, 1996, 1996,

     1996, 1996, 1963, 1959, 1959, 1959, 1959, 1963, 1963, 1996,
        0,    0,    0, 1963,    0, 1963,    0,    0, 1965,    0,
     1996, 1965, 1996,    0,    0,    0,    0, 1966, 1963, 1965,
     1966, 1959, 1959, 1959, 1965, 1965, 1967,    0, 1966, 1967,
     1965,    0, 1965, 1966, 1966, 1996,    0, 1967,    0, 1966,
        0, 1966, 1967, 1967,    0,    0,    0,    0, 1967, 1968,
     1967,    0, 1968, 1969,    0,    0, 1969, 1965,    0,    0,
     1968,    0,    0,    0, 1969, 1968, 1968,    0, 1966, 1969,
     1969, 1968,    0, 1968,    0, 1969, 1967, 1969,    0, 1970,
        0,    0, 1970,    0,    0,    0,    0,    0, 1971,    0,

     1970, 1971,    0,    0,    0, 1970, 1970,    0,    0, 1971,
     1969, 1970,    0, 1970, 1971, 1971, 1974, 1974,    0, 1974,
     1971, 1968, 1971,    0,    0, 1975, 1975, 1974, 1975,    0,
        0,    0, 1974, 1974, 1976, 1976, 1975, 1976, 1974,    0,
     1974, 1975, 1975,    0, 1970, 1976,    0, 1975,    0, 1975,
     1976, 1976,    0, 1974, 1977, 1977, 1976, 1977, 1976,    0,
        0,    0, 1971, 1978, 1978, 1977, 1978,    0,    0,    0,
     1977, 1977,    0,    0, 1978,    0, 1977,    0, 1977, 1978,
     1978,    0,    0, 1976,    0, 1978,    0, 1978, 1975,    0,
     1979, 1979,    0, 1979,    0,    0,    0,    0,    0, 1980,

     1980, 1979, 1980,    0,    0, 1977, 1979, 1979, 1981, 1981,
     1980, 1981, 1979, 1978, 1979, 1980, 1980, 1982, 1982, 1981,
     1982, 1980,    0, 1980, 1981, 1981,    0,    0, 1982,    0,
     1981,    0, 1981, 1982, 1982,    0,    0,    0,    0, 1982,
        0, 1982, 1995, 1995, 1995, 1995, 1980,    0,    0,    0,
        0,    0, 1979, 1995, 1998, 1998, 1998, 1998, 1995,    0,
        0,    0,    0, 1981, 1995, 1998, 1995,    0,    0,    0,
     1998,    0, 1999, 1999, 1999, 1999, 1998,    0, 1998,    0,
        0, 1982,    0, 1999, 2001, 2001, 2001, 2001, 1999, 2007,
     2007, 2007, 2007,    0, 1999, 2001, 1999,    0,    0,    0,

     2007,    0, 1995,    0,    0, 2007, 2001,    0, 2001,    0,
        0, 2007,    0, 2007,    0,    0,    0,    0, 1998, 1999,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
     2007,    0,    0, 2004, 2004, 2004, 2004, 2004, 2004,    0,
        0, 2008, 2008, 2008, 2008,    0,    0,    0, 2009, 2009,
     2009, 2009, 2008,    0, 2004, 2004, 2004, 2008,    0, 2009,
        0,    0,    0, 2008, 2009, 2008, 2011, 2011, 2011, 2011,
     2009,    0, 2009,    0,    0,    0,    0, 2011, 2016, 2016,
     2016, 2016, 2004, 2004, 2004,    0,    0,    0, 2011, 2016,

     2011,    0, 2017,    0, 2016, 2017,    0,    0,    0,    0,
     2016,    0, 2016, 2017, 2008,    0,    0,    0, 2017, 2017,
        0,    0, 2018,    0, 2017, 2018, 2017,    0, 2009,    0,
        0, 2017, 2019, 2018,    0, 2019,    0,    0, 2018, 2018,
        0,    0, 2020, 2019, 2018, 2020, 2018,    0, 2019, 2019,
        0,    0, 2021, 2020, 2019, 2021, 2019,    0, 2020, 2020,
        0,    0,    0, 2021, 2020,    0, 2020, 2022, 2021, 2021,
     2022,    0,    0,    0, 2021,    0, 2021,    0, 2022, 2019,
        0,    0,    0, 2022, 2022,    0, 2018, 2023, 2023, 2022,
     2023, 2022,    0, 2020,    0,    0, 2024, 2024, 2023, 2024,

        0,    0,    0, 2023, 2023,    0,    0, 2024,    0, 2023,
        0, 2023, 2024, 2024,    0, 2021, 2023,    0, 2024,    0,
     2024,    0, 2025, 2025,    0, 2025,    0,    0,    0,    0,
        0, 2026, 2026, 2025, 2026,    0,    0, 2022, 2025, 2025,
     2027, 2027, 2026, 2027, 2025,    0, 2025, 2026, 2026,    0,
        0, 2027,    0, 2026,    0, 2026, 2027, 2027,    0,    0,
     2024,    0, 2027,    0, 2027,    0,    0, 2028, 2028, 2025,
     2028,    0,    0,    0, 2038, 2038, 2038, 2038, 2028,    0,
        0,    0, 2026, 2028, 2028, 2038,    0,    0,    0, 2028,
     2038, 2028,    0,    0,    0,    0, 2038,    0, 2038, 2039,

     2039, 2039, 2039, 2027, 2040, 2040, 2040, 2040,    0,    0,
     2039, 2041, 2041, 2041, 2041, 2040,    0,    0,    0,    0,
     2040, 2039, 2041, 2039,    0,    0, 2040, 2041, 2040, 2044,
     2044, 2044, 2044, 2041,    0, 2041, 2038, 2028, 2040,    0,
     2044,    0,    0, 2050, 2050, 2050, 2050,    0,    0, 2052,
        0, 2044,    0, 2044, 2050, 2052, 2052,    0,    0,    0,
     2052, 2052, 2052, 2039,    0, 2050,    0, 2050, 2067,    0,
     2052, 2067,    0,    0, 2041, 2062, 2062, 2062, 2062, 2067,
        0,    0,    0,    0, 2067, 2067, 2062,    0,    0,    0,
     2067,    0, 2067,    0,    0,    0,    0, 2062,    0, 2062,

        0,    0, 2067,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 2052, 2052, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053, 2053,
     2053, 2053, 2054,    0,    0,    0,    0,    0, 2054, 2054,

        0,    0,    0, 2054, 2054, 2054, 2059, 2059, 2059, 2059,
        0,    0,    0, 2054,    0,    0,    0, 2059, 2060, 2060,
     2060, 2060, 2059,    0,    0,    0,    0,    0, 2059, 2060,
     2059,    0, 2069,    0, 2060, 2069,    0,    0,    0,    0,
     2060,    0, 2060, 2069, 2061, 2061, 2061, 2061, 2069, 2069,
        0,    0,    0,    0, 2069, 2061, 2069,    0, 2054, 2054,
     2061, 2068,    0,    0, 2068,    0, 2061,    0, 2061,    0,
     2059,    0, 2068,    0,    0,    0, 2070, 2068, 2068, 2070,
        0,    0, 2060, 2068,    0, 2068, 2071, 2070,    0, 2071,
        0,    0, 2070, 2070,    0, 2061, 2069, 2071, 2070,    0,

     2070,    0, 2071, 2071, 2072, 2072,    0, 2072, 2071,    0,
     2071,    0,    0,    0,    0, 2072,    0,    0,    0,    0,
     2072, 2072,    0,    0, 2068,    0, 2072,    0, 2072,    0,
     2073, 2073,    0, 2073,    0,    0,    0, 2071, 2072,    0,
     2070, 2073, 2074, 2074,    0, 2074, 2073, 2073,    0,    0,
        0,    0, 2073, 2074, 2073,    0,    0,    0, 2074, 2074,
     2075, 2075,    0, 2075, 2074,    0, 2074,    0,    0,    0,
        0, 2075, 2076, 2076,    0, 2076, 2075, 2075,    0,    0,
        0,    0, 2075, 2076, 2075,    0,    0,    0, 2076, 2076,
        0,    0,    0, 2073, 2076,    0, 2076, 2081, 2081, 2081,

     2081,    0,    0,    0,    0,    0, 2074,    0, 2081, 2082,
     2082, 2082, 2082,    0,    0,    0,    0,    0,    0, 2081,
     2082, 2081,    0, 2076, 2075, 2082, 2083, 2083, 2083, 2083,
        0, 2082,    0, 2082,    0,    0,    0, 2083,    0, 2082,
        0,    0, 2083, 2097, 2097, 2097, 2097,    0, 2083,    0,
     2083,    0, 2101,    0, 2097, 2101,    0, 2081,    0, 2097,
        0,    0,    0, 2101,    0, 2097,    0, 2097, 2101, 2101,
        0,    0,    0,    0, 2101,    0, 2101,    0,    0,    0,
        0,    0, 2101,    0,    0,    0,    0,    0,    0, 2097,
     2083, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092,

     2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092,
     2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092,
     2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092,
     2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092,
     2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092,
     2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092,
     2092, 2092, 2092, 2092, 2092, 2092, 2098, 2098, 2098, 2098,
     2102,    0,    0, 2102,    0,    0,    0, 2098,    0,    0,
     2103, 2102, 2098, 2103,    0,    0, 2102, 2102, 2098,    0,
     2098, 2103, 2102,    0, 2102, 2104, 2103, 2103, 2104,    0,

        0,    0, 2103,    0, 2103,    0, 2104, 2105, 2105,    0,
     2105, 2104, 2104,    0,    0,    0, 2098, 2104, 2105, 2104,
        0,    0,    0, 2105, 2105,    0, 2103, 2106, 2106, 2105,
     2106, 2105,    0,    0, 2102,    0,    0, 2105, 2106, 2107,
     2107,    0, 2107, 2106, 2106, 2104,    0,    0,    0, 2106,
     2107, 2106,    0,    0,    0, 2107, 2107, 2108, 2108,    0,
     2108, 2107,    0, 2107, 2111, 2111, 2111, 2111, 2108,    0,
        0,    0,    0, 2108, 2108, 2111,    0,    0,    0, 2108,
        0, 2108,    0,    0,    0, 2107, 2111,    0, 2111,    0,
        0, 2106, 2113, 2113, 2113, 2113,    0, 2121, 2121, 2121,

     2121, 2123,    0, 2113, 2123,    0,    0, 2108, 2121,    0,
        0,    0, 2123, 2121, 2113,    0, 2113, 2123, 2123, 2121,
        0, 2121,    0, 2123,    0, 2123,    0, 2149, 2149, 2149,
     2149, 2156, 2156, 2156, 2156,    0,    0,    0, 2149,    0,
        0,    0, 2156,    0,    0,    0, 2121,    0,    0, 2149,
     2123, 2149,    0, 2156, 2113, 2115, 2115, 2115, 2115, 2115,
     2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115,
     2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115,
     2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115,
     2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115,

     2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115,
     2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115,
     2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115, 2115,
     2119, 2119,    0, 2119, 2119, 2119, 2119, 2119, 2119, 2119,
     2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119,
     2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119,
     2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119,
     2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119,
     2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119,
     2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119,

     2119, 2119, 2119, 2119, 2119, 2120, 2120, 2120, 2120, 2120,
     2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120,
     2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120,
     2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120,
     2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120,
     2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120,
     2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120,
     2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120, 2120,
     2124, 2124,    0, 2124,    0,    0,    0,    0,    0,    0,
        0, 2124,    0,    0,    0,    0, 2124, 2124,    0,    0,

        0,    0, 2124,    0, 2124,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 2124,
     2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128,
     2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128,
     2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128,
     2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128,
     2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128,
     2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128,
     2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128,

     2128, 2128, 2128, 2128, 2128, 2131, 2131, 2131, 2131, 2131,
     2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131,
     2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131,
     2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131,
     2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131,
     2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131,
     2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131,
     2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131,
     2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
     2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,

     2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
     2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
     2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
     2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
     2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132, 2132,
     2132, 2132, 2132, 2132, 2132, 2140, 2140, 2140, 2140, 2140,
     2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140,
     2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140,
     2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140,
     2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140,

     2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140,
     2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140,
     2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140,
     2141, 2141, 2141, 2141, 2142,    0,    0, 2142,    0,    0,
        0, 2141,    0,    0, 2162, 2142, 2141, 2162,    0,    0,
     2142, 2142, 2141,    0, 2141, 2162, 2142,    0, 2142,    0,
     2162, 2162, 2143, 2143,    0, 2143, 2162,    0, 2162,    0,
        0,    0,    0, 2143,    0,    0,    0, 2141, 2143, 2143,
        0, 2142,    0,    0, 2143,    0, 2143,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0, 2162,    0, 2143,
     2154, 2154,    0, 2154, 2154, 2154, 2154, 2154, 2154, 2154,
     2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154,
     2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154,
     2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154,
     2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154,
     2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154,
     2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154, 2154,
     2154, 2154, 2154, 2154, 2154, 2160, 2160,    0, 2160, 2160,
     2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160,

     2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160,
     2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160,
     2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160,
     2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160,
     2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160,
     2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160,
     2161, 2161, 2161, 2161, 2163, 2163,    0, 2163,    0,    0,
        0, 2161,    0,    0,    0, 2163, 2161,    0,    0,    0,
     2163, 2163, 2161,    0, 2161,    0, 2163,    0, 2163, 2170,
     2170, 2170, 2170, 2171,    0,    0, 2171,    0,    0,    0,

     2170,    0,    0,    0, 2171, 2170,    0,    0,    0, 2171,
     2171, 2170,    0, 2170,    0, 2171,    0, 2171, 2172, 2172,
        0, 2172,    0, 2161,    0,    0,    0, 2163,    0, 2172,
        0,    0,    0,    0, 2172, 2172,    0,    0,    0,    0,
     2172,    0, 2172,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 2170,    0,    0,    0, 2171,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 2172, 2182, 2182, 2182, 2182, 2182, 2182, 2182,
     2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182,

     2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2183, 2183,
     2183, 2183, 2183, 2183, 2183, 2183, 2183, 2183, 2183, 2183,
     2183, 2183, 2183, 2183, 2183, 2183, 2183, 2183, 2183, 2183,
     2183, 2183, 2183, 2184, 2184, 2184, 2184, 2184, 2184, 2184,
     2184, 2184, 2184, 2184, 2184, 2184, 2184, 2184, 2184, 2184,
     2184, 2184, 2184, 2184, 2184, 2184, 2184, 2184, 2185, 2185,
     2185, 2185, 2185, 2185, 2185, 2185, 2185, 2185, 2185, 2185,
     2185, 2185, 2185, 2185, 2185, 2185, 2185, 2185, 2185, 2185,
     2185, 2185, 2185, 2186, 2186, 2186, 2186, 2186, 2186, 2186,
     2186, 2186, 2186, 2186, 2186, 2186, 2186, 2186, 2186, 2186,

     2186, 2186, 2186, 2186, 2186, 2186, 2186, 2186, 2187, 2187,
     2187, 2187, 2187, 2187, 2187, 2187, 2187, 2187, 2187, 2187,
     2187, 2187, 2187, 2187, 2187, 2187, 2187, 2187, 2187, 2187,
     2187, 2187, 2187, 2188, 2188, 2188, 2188, 2188, 2188, 2188,
     2188, 2188, 2188, 2188, 2188, 2188, 2188, 2188, 2188, 2188,
     2188, 2188, 2188, 2188, 2188, 2188, 2188, 2188, 2189, 2189,
     2189, 2189, 2189, 2189, 2189, 2189, 2189, 2189, 2189, 2189,
     2189, 2189, 2189, 2189, 2189, 2189, 2189, 2189, 2189, 2189,
     2189, 2189, 2189, 2190, 2190, 2190, 2190, 2190, 2190, 2190,
     2190, 2190, 2190, 2190, 2190, 2190, 2190, 2190, 2190, 2190,

     2190, 2190, 2190, 2190, 2190, 2190, 2190, 2190, 2191, 2191,
     2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191,
     2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191,
     2191, 2191, 2191, 2192, 2192,    0,    0, 2192,    0, 2192,
     2192, 2192, 2192, 2192, 2192, 2192, 2192, 2192, 2192, 2192,
     2192, 2192,    0, 2192, 2192, 2192, 2192, 2192, 2193, 2193,
        0, 2193, 2193, 2193, 2193, 2193, 2193, 2193, 2193, 2193,
     2193, 2193, 2193, 2193, 2193, 2193, 2193, 2193, 2193, 2193,
     2193, 2193, 2193, 2194, 2194,    0, 2194, 2194,    0, 2194,
     2194, 2194, 2194, 2194, 2194, 2194, 2194, 2194, 2194, 2194,

     2194, 2194, 2194, 2194, 2194, 2194, 2194, 2194, 2195, 2195,
     2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195,
     2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195,
     2195, 2195, 2195, 2196, 2196,    0, 2196, 2196, 2196, 2196,
     2196, 2196, 2196,    0, 2196, 2196,    0, 2196, 2196, 2196,
     2196, 2196, 2196, 2196, 2196, 2196, 2196, 2196, 2197, 2197,
        0,    0, 2197, 2197, 2197, 2197, 2197, 2197, 2197, 2197,
     2197, 2197, 2197, 2197, 2197, 2197, 2197, 2197, 2197, 2197,
     2197, 2197, 2197, 2198, 2198,    0, 2198, 2198, 2198, 2198,
     2198, 2198, 2198,    0, 2198, 2198, 2198, 2198, 2198, 2198,

     2198, 2198, 2198, 2198, 2198, 2198, 2198, 2198, 2199, 2199,
     2199, 2199,    0, 2199,    0,    0,    0,    0,    0,    0,
        0,    0, 2199,    0, 2199, 2199,    0,    0, 2199,    0,
        0, 2199, 2200, 2200,    0, 2200, 2200, 2200, 2200, 2200,
     2200, 2200, 2200, 2200, 2200, 2200, 2200, 2200, 2200, 2200,
     2200, 2200, 2200, 2200, 2200, 2200, 2200, 2201, 2201, 2201,
     2201,    0,    0,    0, 2201,    0,    0,    0,    0,    0,
     2201, 2201, 2201, 2201, 2201,    0,    0, 2201, 2202, 2202,
     2202, 2202,    0, 2202,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 2202, 2202,    0,    0, 2202, 2203,

        0,    0, 2203,    0,    0,    0, 2203,    0,    0, 2203,
     2203,    0, 2203, 2203, 2203, 2203, 2203,    0,    0, 2203,
     2204, 2204, 2204, 2204,    0, 2204,    0,    0,    0,    0,
        0,    0,    0,    0, 2204,    0, 2204, 2204,    0,    0,
     2204,    0,    0, 2204, 2205, 2205, 2205, 2205,    0,    0,
        0, 2205,    0,    0,    0,    0,    0, 2205, 2205, 2205,
     2205, 2205,    0,    0, 2205, 2206, 2206, 2206, 2206,    0,
     2206,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 2206, 2206,    0,    0, 2206, 2207, 2207,    0, 2207,
        0,    0,    0, 2207,    0,    0, 2207, 2207,    0, 2207,

     2207, 2207, 2207, 2207,    0,    0, 2207, 2209,    0,    0,
     2209, 2209,    0,    0, 2209, 2211, 2211,    0, 2211, 2211,
        0,    0, 2211, 2213,    0, 2213,    0,    0, 2213, 2213,
        0,    0, 2213, 2215,    0,    0, 2215, 2215,    0,    0,
     2215, 2217,    0,    0, 2217, 2217,    0,    0, 2217, 2218,
     2218,    0, 2218, 2218, 2218, 2218, 2218, 2218, 2218, 2218,
     2218, 2218, 2218, 2218, 2218, 2218, 2218, 2218, 2218, 2218,
     2218, 2218, 2218, 2218, 2220,    0,    0, 2220, 2220,    0,
        0, 2220, 2222,    0,    0, 2222,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 2222, 2222,    0, 2222, 2222,

        0,    0, 2222, 2224,    0,    0, 2224, 2224,    0,    0,
     2224, 2226, 2226,    0, 2226,    0, 2226, 2226,    0, 2226,
     2226, 2226, 2226, 2226, 2226, 2226, 2226, 2226, 2226, 2226,
     2226, 2226, 2226, 2226, 2226, 2226, 2227,    0,    0, 2227,
     2227,    0,    0, 2227, 2229, 2229, 2229, 2229,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 2229, 2229,    0,
     2229, 2229,    0, 2229, 2229, 2230, 2230,    0, 2230, 2230,
        0,    0, 2230, 2230, 2230, 2230, 2230, 2230, 2230, 2230,
     2230, 2230, 2230, 2230,    0, 2230, 2230, 2230, 2230, 2230,
     2231, 2231,    0, 2231, 2231, 2231, 2231, 2231, 2231, 2231,

     2231, 2231, 2231, 2231, 2231, 2231, 2231, 2231, 2231, 2231,
     2231, 2231, 2231, 2231, 2231, 2233,    0,    0, 2233, 2233,
        0,    0, 2233, 2234, 2234,    0,    0, 2234,    0, 2234,
     2234, 2234, 2234, 2234, 2234, 2234, 2234, 2234, 2234, 2234,
     2234, 2234,    0, 2234, 2234, 2234, 2234, 2234, 2235, 2235,
        0, 2235, 2235,    0, 2235, 2235, 2235, 2235, 2235, 2235,
     2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235,
     2235, 2235, 2235, 2236, 2236, 2236, 2236, 2236, 2236, 2236,
     2236, 2236, 2236, 2236, 2236, 2236, 2236, 2236, 2236, 2236,
     2236, 2236, 2236, 2236, 2236, 2236, 2236, 2236, 2237, 2237,

        0, 2237, 2237, 2237, 2237, 2237, 2237, 2237,    0, 2237,
     2237,    0, 2237, 2237, 2237, 2237, 2237, 2237, 2237, 2237,
     2237, 2237, 2237, 2238, 2238,    0,    0, 2238, 2238, 2238,
     2238, 2238, 2238, 2238, 2238, 2238, 2238, 2238, 2238, 2238,
     2238, 2238, 2238, 2238, 2238, 2238, 2238, 2238, 2239, 2239,
        0, 2239, 2239, 2239, 2239, 2239, 2239, 2239,    0, 2239,
     2239, 2239, 2239, 2239, 2239, 2239, 2239, 2239, 2239, 2239,
     2239, 2239, 2239, 2241, 2241, 2241, 2241,    0,    0,    0,
     2241,    0,    0,    0,    0,    0, 2241, 2241, 2241, 2241,
     2241,    0,    0, 2241, 2242, 2242, 2242, 2242,    0, 2242,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     2242, 2242,    0,    0, 2242, 2243, 2243,    0, 2243, 2243,
     2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243,
     2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243, 2243,
     2244, 2244, 2244, 2244,    0, 2244,    0,    0, 2244, 2244,
        0,    0,    0,    0, 2244,    0, 2244, 2244,    0,    0,
     2244,    0,    0, 2244, 2246, 2246,    0, 2246, 2246,    0,
     2246, 2246, 2246, 2246, 2246, 2246, 2246,    0, 2246, 2246,
     2246, 2246, 2246, 2246, 2246, 2246,    0, 2246, 2246, 2247,
     2247, 2247, 2247,    0, 2247,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0, 2247, 2247,    0,    0, 2247,
     2248,    0,    0, 2248,    0,    0,    0, 2248,    0,    0,
        0,    0,    0, 2248,    0, 2248, 2248, 2248,    0,    0,
     2248, 2249,    0,    0, 2249,    0,    0,    0,    0,    0,
     2249,    0,    0,    0,    0,    0,    0, 2249, 2249,    0,
        0, 2249, 2250,    0,    0, 2250,    0,    0,    0, 2250,
        0,    0, 2250, 2250,    0, 2250, 2250, 2250, 2250, 2250,
        0,    0, 2250, 2251,    0,    0, 2251,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 2251, 2251, 2251, 2251,
     2251,    0,    0, 2251, 2252, 2252,    0, 2252, 2252, 2252,

     2252, 2252, 2252, 2252, 2252, 2252, 2252, 2252, 2252, 2252,
        0, 2252, 2252, 2252, 2252, 2252, 2252, 2252, 2252, 2254,
     2254, 2254, 2254,    0,    0,    0, 2254,    0,    0,    0,
        0,    0, 2254, 2254, 2254, 2254, 2254,    0,    0, 2254,
     2255, 2255, 2255, 2255,    0, 2255,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 2255, 2255,    0,    0,
     2255, 2256, 2256,    0, 2256, 2256,    0, 2256, 2256,    0,
        0, 2256, 2256, 2256,    0, 2256, 2256, 2256, 2256, 2256,
     2256, 2256, 2256,    0,    0, 2256, 2257, 2257, 2257, 2257,
        0, 2257,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0, 2257, 2257,    0,    0, 2257, 2258,    0,    0,
     2258,    0,    0,    0, 2258,    0,    0,    0,    0,    0,
     2258,    0,    0, 2258, 2258,    0,    0, 2258, 2259, 2259,
        0, 2259,    0,    0,    0, 2259,    0,    0, 2259, 2259,
        0, 2259, 2259, 2259, 2259, 2259,    0,    0, 2259, 2260,
        0,    0, 2260, 2260,    0,    0, 2260, 2261, 2261,    0,
     2261, 2261,    0,    0, 2261, 2262,    0, 2262,    0,    0,
     2262, 2262,    0,    0, 2262, 2263,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 2263, 2263,    0,    0,
     2263, 2264,    0,    0, 2264, 2264,    0,    0, 2264, 2265,

        0,    0, 2265, 2265,    0,    0, 2265, 2266, 2266,    0,
     2266, 2266, 2266, 2266, 2266, 2266, 2266, 2266, 2266, 2266,
     2266, 2266, 2266, 2266, 2266, 2266, 2266, 2266, 2266, 2266,
     2266, 2266, 2267,    0,    0, 2267, 2267,    0,    0, 2267,
     2268,    0,    0, 2268,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 2268, 2268,    0, 2268, 2268,    0,    0,
     2268, 2269,    0,    0, 2269, 2269,    0,    0, 2269, 2270,
        0,    0, 2270, 2270,    0,    0, 2270, 2271, 2271,    0,
     2271,    0, 2271, 2271, 2271, 2271, 2271, 2271, 2271, 2271,
     2271, 2271, 2271, 2271, 2271, 2271,    0, 2271, 2271, 2271,

     2271, 2271, 2272, 2272,    0, 2272, 2272, 2272, 2272, 2272,
     2272, 2272, 2272, 2272, 2272, 2272, 2272, 2272, 2272, 2272,
     2272, 2272, 2272, 2272, 2272, 2272, 2272, 2273, 2273, 2273,
     2273,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     2273, 2273,    0, 2273, 2273,    0, 2273, 2273, 2274, 2274,
        0, 2274, 2274,    0,    0, 2274, 2274, 2274, 2274, 2274,
     2274, 2274, 2274, 2274, 2274, 2274, 2274,    0, 2274, 2274,
     2274, 2274, 2274, 2275,    0,    0, 2275, 2275,    0,    0,
     2275, 2276, 2276, 2276, 2276, 2276, 2276, 2276, 2276, 2276,
     2276, 2276, 2276, 2276,    0, 2276, 2276, 2276, 2276, 2276,

     2276, 2276, 2276, 2276, 2276, 2276, 2277, 2277, 2277, 2277,
     2277, 2277, 2277, 2277, 2277, 2277, 2277, 2277, 2277, 2277,
     2277, 2277, 2277, 2277, 2277, 2277, 2277, 2277, 2277, 2277,
     2277, 2278, 2278, 2278, 2278, 2278, 2278, 2278, 2278, 2278,
     2278, 2278, 2278, 2278,    0, 2278, 2278, 2278, 2278, 2278,
     2278, 2278, 2278, 2278, 2278, 2278, 2279, 2279, 2279, 2279,
     2279, 2279, 2279, 2279, 2279, 2279, 2279, 2279, 2279, 2279,
     2279, 2279, 2279, 2279, 2279, 2279, 2279, 2279, 2279, 2279,
     2279, 2280, 2280, 2280, 2280, 2280, 2280, 2280, 2280, 2280,
     2280, 2280, 2280, 2280, 2280, 2280, 2280, 2280, 2280, 2280,

     2280, 2280, 2280, 2280, 2280, 2280, 2281, 2281, 2281, 2281,
     2281, 2281, 2281, 2281, 2281, 2281, 2281, 2281, 2281, 2281,
     2281, 2281, 2281, 2281, 2281, 2281, 2281, 2281, 2281, 2281,
     2281, 2282, 2282,    0,    0, 2282,    0, 2282, 2282, 2282,
     2282, 2282, 2282, 2282, 2282, 2282, 2282, 2282, 2282, 2282,
        0, 2282, 2282, 2282, 2282, 2282, 2283, 2283, 2283, 2283,
     2283, 2283, 2283, 2283, 2283, 2283, 2283, 2283, 2283, 2283,
     2283, 2283, 2283, 2283, 2283, 2283, 2283, 2283, 2283, 2283,
     2283, 2284, 2284, 2284, 2284, 2284, 2284, 2284, 2284, 2284,
     2284, 2284, 2284, 2284, 2284, 2284, 2284, 2284, 2284, 2284,

     2284, 2284, 2284, 2284, 2284, 2284, 2285, 2285, 2285, 2285,
     2285, 2285, 2285, 2285, 2285, 2285, 2285, 2285, 2285, 2285,
     2285, 2285, 2285, 2285, 2285, 2285, 2285, 2285, 2285, 2285,
     2285, 2286, 2286, 2286, 2286, 2286, 2286, 2286, 2286, 2286,
     2286, 2286, 2286, 2286, 2286, 2286, 2286, 2286, 2286, 2286,
     2286, 2286, 2286, 2286, 2286, 2286, 2287, 2287,    0, 2287,
     2287,    0, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287,
     2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287,
     2287, 2288, 2288, 2288, 2288, 2288, 2288, 2288, 2288, 2288,
     2288, 2288, 2288, 2288, 2288, 2288, 2288, 2288, 2288, 2288,

     2288, 2288, 2288, 2288, 2288, 2288, 2289, 2289, 2289, 2289,
     2289, 2289, 2289, 2289, 2289, 2289, 2289, 2289, 2289, 2289,
     2289, 2289, 2289, 2289, 2289, 2289, 2289, 2289, 2289, 2289,
     2289, 2290, 2290, 2290, 2290, 2290, 2290, 2290, 2290, 2290,
     2290, 2290, 2290, 2290, 2290, 2290, 2290, 2290, 2290, 2290,
     2290, 2290, 2290, 2290, 2290, 2290, 2291, 2291, 2291, 2291,
     2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291,
     2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291,
     2291, 2292, 2292, 2292, 2292, 2292, 2292, 2292, 2292, 2292,
     2292, 2292, 2292, 2292, 2292, 2292, 2292, 2292, 2292, 2292,

     2292, 2292, 2292, 2292, 2292, 2292, 2293, 2293,    0,    0,
     2293, 2293, 2293, 2293, 2293, 2293, 2293, 2293, 2293, 2293,
     2293, 2293, 2293, 2293, 2293, 2293, 2293, 2293, 2293, 2293,
     2293, 2294, 2294, 2294, 2294, 2294, 2294, 2294, 2294, 2294,
     2294, 2294, 2294, 2294, 2294, 2294, 2294, 2294, 2294, 2294,
     2294, 2294, 2294, 2294, 2294, 2294, 2295, 2295, 2295, 2295,
     2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295,
     2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295,
     2295, 2296, 2296, 2296, 2296, 2296, 2296, 2296, 2296, 2296,
     2296, 2296, 2296, 2296, 2296, 2296, 2296, 2296, 2296, 2296,

     2296, 2296, 2296, 2296, 2296, 2296, 2297, 2297,    0, 2297,
     2297, 2297, 2297, 2297, 2297, 2297,    0, 2297, 2297, 2297,
     2297, 2297, 2297, 2297, 2297, 2297, 2297, 2297, 2297, 2297,
     2297, 2298, 2298, 2298, 2298, 2298, 2298, 2298, 2298, 2298,
     2298, 2298, 2298, 2298, 2298, 2298, 2298, 2298, 2298, 2298,
     2298, 2298, 2298, 2298, 2298, 2298, 2299, 2299, 2299, 2299,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 2299,
     2299, 2299, 2299, 2299,    0,    0, 2299, 2300, 2300, 2300,
     2300,    0,    0,    0, 2300,    0,    0,    0,    0,    0,
     2300, 2300, 2300, 2300, 2300,    0,    0, 2300, 2301, 2301,

     2301, 2301,    0, 2301,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 2301, 2301,    0,    0, 2301, 2302,
        0,    0, 2302,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 2302,    0, 2302, 2302, 2302,    0,    0, 2302,
     2303, 2303, 2303, 2303,    0, 2303,    0,    0, 2303, 2303,
        0,    0,    0,    0, 2303,    0, 2303, 2303,    0,    0,
     2303,    0,    0, 2303, 2304, 2304, 2304, 2304,    0, 2304,
        0,    0, 2304,    0,    0,    0,    0, 2304, 2304,    0,
     2304, 2304,    0,    0, 2304,    0,    0, 2304, 2305, 2305,
     2305, 2305,    0, 2305,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0, 2305, 2305,    0,    0, 2305, 2307,
     2307, 2307, 2307,    0, 2307,    0,    0,    0,    0,    0,
        0,    0,    0, 2307,    0, 2307, 2307,    0,    0, 2307,
        0,    0, 2307, 2308, 2308,    0, 2308, 2308,    0, 2308,
     2308, 2308, 2308, 2308,    0,    0,    0, 2308, 2308, 2308,
     2308, 2308, 2308, 2308, 2308,    0, 2308, 2308, 2309, 2309,
     2309, 2309,    0, 2309,    0,    0,    0,    0,    0,    0,
        0,    0, 2309,    0, 2309, 2309,    0,    0, 2309,    0,
        0, 2309, 2310, 2310,    0, 2310, 2310,    0, 2310, 2310,
     2310, 2310, 2310, 2310, 2310,    0, 2310, 2310, 2310, 2310,

     2310, 2310, 2310, 2310,    0, 2310, 2310, 2311, 2311,    0,
     2311, 2311,    0, 2311, 2311,    0,    0, 2311, 2311, 2311,
        0, 2311, 2311, 2311, 2311, 2311, 2311, 2311, 2311,    0,
        0, 2311, 2312,    0,    0, 2312,    0,    0,    0, 2312,
        0,    0,    0,    0,    0, 2312,    0, 2312, 2312, 2312,
        0,    0, 2312, 2313,    0,    0, 2313,    0,    0,    0,
        0,    0, 2313,    0,    0,    0,    0,    0,    0, 2313,
     2313,    0,    0, 2313, 2314,    0,    0, 2314,    0,    0,
        0,    0, 2314,    0,    0,    0,    0, 2314,    0,    0,
     2314, 2314,    0,    0, 2314, 2315, 2315,    0, 2315, 2315,

     2315, 2315, 2315, 2315, 2315, 2315, 2315, 2315, 2315, 2315,
     2315,    0, 2315, 2315, 2315, 2315, 2315, 2315, 2315, 2315,
     2316,    0,    0, 2316,    0,    0,    0, 2316,    0,    0,
     2316, 2316,    0, 2316, 2316, 2316, 2316, 2316,    0,    0,
     2316, 2317,    0,    0, 2317,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 2317, 2317, 2317, 2317, 2317,    0,
        0, 2317, 2318, 2318, 2318, 2318,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 2318, 2318,    0, 2318, 2318,
        0,    0, 2318, 2319, 2319, 2319, 2319,    0, 2319,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 2319,

     2319,    0,    0, 2319, 2320,    0,    0, 2320,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 2320,    0,    0,
     2320, 2320,    0,    0, 2320, 2321, 2321, 2321, 2321,    0,
     2321,    0,    0,    0,    0,    0,    0,    0,    0, 2321,
        0, 2321, 2321,    0,    0, 2321,    0,    0, 2321, 2322,
     2322, 2322, 2322,    0, 2322,    0,    0,    0,    0,    0,
        0,    0,    0, 2322,    0, 2322, 2322,    0,    0, 2322,
        0,    0, 2322, 2323, 2323,    0, 2323, 2323,    0, 2323,
     2323,    0,    0, 2323, 2323, 2323,    0, 2323, 2323, 2323,
     2323, 2323, 2323, 2323, 2323,    0,    0, 2323, 2324,    0,

        0, 2324,    0,    0,    0, 2324,    0,    0,    0,    0,
        0, 2324,    0,    0, 2324, 2324,    0,    0, 2324, 2325,
     2325,    0, 2325,    0,    0,    0, 2325,    0,    0, 2325,
     2325,    0, 2325, 2325, 2325, 2325, 2325,    0,    0, 2325,
     2326,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 2326, 2326,    0,    0, 2326, 2328,    0, 2328,    0,
        0, 2328, 2328,    0,    0, 2328, 2329,    0,    0, 2329,
     2329,    0,    0, 2329, 2330,    0,    0, 2330, 2330,    0,
        0, 2330, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331,
     2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331,

     2331, 2331, 2331, 2331, 2331, 2331, 2331, 2332, 2332, 2332,
     2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332,
     2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332, 2332,
     2332, 2332, 2333, 2333,    0, 2333, 2333, 2333, 2333, 2333,
     2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333,
     2333, 2333, 2333, 2333, 2333, 2333, 2333, 2334, 2334, 2334,
     2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334,
     2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334,
     2334, 2334, 2335, 2335, 2335, 2335, 2335, 2335, 2335, 2335,
     2335, 2335, 2335, 2335, 2335, 2335, 2335, 2335, 2335, 2335,

     2335, 2335, 2335, 2335, 2335, 2335, 2335, 2336,    0,    0,
     2336, 2336,    0,    0, 2336, 2337,    0,    0, 2337, 2337,
        0,    0, 2337, 2338, 2338,    0, 2338,    0, 2338, 2338,
     2338, 2338, 2338, 2338, 2338, 2338, 2338, 2338, 2338, 2338,
     2338, 2338,    0, 2338, 2338, 2338, 2338, 2338, 2339, 2339,
     2339, 2339, 2339, 2339, 2339, 2339, 2339, 2339, 2339, 2339,
     2339, 2339, 2339, 2339, 2339, 2339, 2339, 2339, 2339, 2339,
     2339, 2339, 2339, 2340, 2340, 2340, 2340, 2340, 2340, 2340,
     2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340,
     2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2341, 2341,

        0, 2341, 2341,    0,    0, 2341, 2341, 2341, 2341, 2341,
     2341, 2341, 2341, 2341, 2341, 2341, 2341,    0, 2341, 2341,
     2341, 2341, 2341, 2342, 2342, 2342, 2342, 2342, 2342, 2342,
     2342, 2342, 2342, 2342, 2342, 2342, 2342, 2342, 2342, 2342,
     2342, 2342, 2342, 2342, 2342, 2342, 2342, 2342, 2343, 2343,
     2343, 2343, 2343, 2343, 2343, 2343, 2343, 2343, 2343, 2343,
     2343, 2343, 2343, 2343, 2343, 2343, 2343, 2343, 2343, 2343,
     2343, 2343, 2343, 2344,    0,    0, 2344, 2344,    0,    0,
     2344, 2345, 2345, 2345, 2345, 2345, 2345, 2345, 2345, 2345,
     2345,    0, 2345, 2345,    0, 2345, 2345, 2345, 2345, 2345,

     2345, 2345, 2345, 2345, 2345, 2345, 2346, 2346, 2346, 2346,
     2346, 2346, 2346, 2346, 2346, 2346, 2346, 2346, 2346, 2346,
     2346, 2346, 2346, 2346, 2346, 2346, 2346, 2346, 2346, 2346,
     2346, 2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347,
     2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347,
     2347, 2347, 2347, 2347, 2347, 2347, 2348, 2348, 2348, 2348,
     2348, 2348, 2348, 2348, 2348, 2348,    0, 2348, 2348,    0,
     2348, 2348, 2348, 2348, 2348, 2348, 2348, 2348, 2348, 2348,
     2348, 2349, 2349, 2349, 2349, 2349, 2349, 2349, 2349, 2349,
     2349, 2349, 2349, 2349, 2349, 2349, 2349, 2349, 2349, 2349,

     2349, 2349, 2349, 2349, 2349, 2349, 2350, 2350, 2350, 2350,
     2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350,
     2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350,
     2350, 2351, 2351, 2351, 2351, 2351, 2351, 2351, 2351, 2351,
     2351, 2351, 2351, 2351, 2351, 2351, 2351, 2351, 2351, 2351,
     2351, 2351, 2351, 2351, 2351, 2351, 2352, 2352,    0,    0,
     2352,    0, 2352, 2352, 2352, 2352, 2352, 2352, 2352, 2352,
     2352, 2352, 2352, 2352, 2352,    0, 2352, 2352, 2352, 2352,
     2352, 2353, 2353, 2353, 2353, 2353, 2353, 2353, 2353, 2353,
     2353, 2353, 2353, 2353, 2353, 2353, 2353, 2353, 2353, 2353,

     2353, 2353, 2353, 2353, 2353, 2353, 2354, 2354, 2354, 2354,
     2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354,
     2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354, 2354,
     2354, 2355, 2355, 2355, 2355, 2355, 2355, 2355, 2355, 2355,
     2355, 2355, 2355, 2355, 2355, 2355, 2355, 2355, 2355, 2355,
     2355, 2355, 2355, 2355, 2355, 2355, 2356, 2356, 2356, 2356,
     2356, 2356, 2356, 2356, 2356, 2356, 2356, 2356, 2356, 2356,
     2356, 2356, 2356, 2356, 2356, 2356, 2356, 2356, 2356, 2356,
     2356, 2357, 2357, 2357, 2357, 2357, 2357, 2357, 2357, 2357,
     2357, 2357, 2357, 2357, 2357, 2357, 2357, 2357, 2357, 2357,

     2357, 2357, 2357, 2357, 2357, 2357, 2358, 2358,    0, 2358,
     2358,    0, 2358, 2358, 2358, 2358, 2358, 2358, 2358, 2358,
     2358, 2358, 2358, 2358, 2358, 2358, 2358, 2358, 2358, 2358,
     2358, 2359, 2359, 2359, 2359, 2359, 2359, 2359, 2359, 2359,
     2359, 2359, 2359, 2359, 2359, 2359, 2359, 2359, 2359, 2359,
     2359, 2359, 2359, 2359, 2359, 2359, 2360, 2360, 2360, 2360,
     2360, 2360, 2360, 2360, 2360, 2360, 2360, 2360, 2360, 2360,
     2360, 2360, 2360, 2360, 2360, 2360, 2360, 2360, 2360, 2360,
     2360, 2361, 2361, 2361, 2361, 2361, 2361, 2361, 2361, 2361,
     2361, 2361, 2361, 2361, 2361, 2361, 2361, 2361, 2361, 2361,

     2361, 2361, 2361, 2361, 2361, 2361, 2362, 2362, 2362, 2362,
     2362, 2362, 2362, 2362, 2362, 2362, 2362, 2362, 2362, 2362,
     2362, 2362, 2362, 2362, 2362, 2362, 2362, 2362, 2362, 2362,
     2362, 2363, 2363, 2363, 2363, 2363, 2363, 2363, 2363, 2363,
     2363, 2363, 2363, 2363, 2363, 2363, 2363, 2363, 2363, 2363,
     2363, 2363, 2363, 2363, 2363, 2363, 2364, 2364, 2364, 2364,
     2364, 2364, 2364, 2364, 2364, 2364, 2364, 2364, 2364, 2364,
     2364, 2364, 2364, 2364, 2364, 2364, 2364, 2364, 2364, 2364,
     2364, 2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365,
     2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365,

     2365, 2365, 2365, 2365, 2365, 2365, 2366, 2366, 2366, 2366,
     2366, 2366, 2366, 2366, 2366, 2366, 2366, 2366, 2366, 2366,
     2366, 2366, 2366, 2366, 2366, 2366, 2366, 2366, 2366, 2366,
     2366, 2367, 2367,    0,    0, 2367, 2367, 2367, 2367, 2367,
     2367, 2367, 2367, 2367, 2367, 2367, 2367, 2367, 2367, 2367,
     2367, 2367, 2367, 2367, 2367, 2367, 2368, 2368, 2368, 2368,
     2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368,
     2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368,
     2368, 2369, 2369, 2369, 2369, 2369, 2369, 2369, 2369, 2369,
     2369, 2369, 2369, 2369, 2369, 2369, 2369, 2369, 2369, 2369,

     2369, 2369, 2369, 2369, 2369, 2369, 2370, 2370, 2370, 2370,
     2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370,
     2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370,
     2370, 2371, 2371, 2371, 2371, 2371, 2371, 2371, 2371, 2371,
     2371, 2371, 2371, 2371, 2371, 2371, 2371, 2371, 2371, 2371,
     2371, 2371, 2371, 2371, 2371, 2371, 2372, 2372, 2372, 2372,
     2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372,
     2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372,
     2372, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373,
     2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373,

     2373, 2373, 2373, 2373, 2373, 2373, 2374, 2374, 2374, 2374,
     2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374,
     2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374,
     2374, 2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375,
     2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375, 2375,
     2375, 2375, 2375, 2375, 2375, 2375, 2376, 2376, 2376, 2376,
     2376, 2376, 2376, 2376, 2376, 2376, 2376, 2376, 2376, 2376,
     2376, 2376, 2376, 2376, 2376, 2376, 2376, 2376, 2376, 2376,
     2376, 2377, 2377, 2377, 2377,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 2377, 2377, 2377, 2377, 2377,    0,

        0, 2377, 2378, 2378, 2378, 2378,    0,    0,    0, 2378,
        0,    0,    0,    0,    0, 2378, 2378, 2378, 2378, 2378,
        0,    0, 2378, 2379,    0,    0, 2379,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 2379,    0, 2379, 2379,
     2379,    0,    0, 2379, 2381, 2381, 2381, 2381,    0, 2381,
        0,    0, 2381,    0,    0,    0,    0, 2381, 2381,    0,
     2381, 2381,    0,    0, 2381,    0,    0, 2381, 2382, 2382,
     2382, 2382,    0, 2382,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 2382, 2382,    0,    0, 2382, 2383,
     2383, 2383, 2383,    0, 2383,    0,    0, 2383,    0,    0,

        0,    0, 2383, 2383,    0, 2383, 2383,    0,    0, 2383,
        0,    0, 2383, 2384, 2384, 2384, 2384,    0, 2384,    0,
        0,    0,    0,    0,    0,    0,    0, 2384,    0, 2384,
     2384,    0,    0, 2384,    0,    0, 2384, 2385, 2385, 2385,
     2385,    0, 2385,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 2385, 2385,    0,    0, 2385, 2386, 2386,
        0, 2386, 2386,    0, 2386, 2386, 2386, 2386, 2386, 2386,
     2386,    0, 2386, 2386, 2386, 2386, 2386, 2386, 2386, 2386,
        0, 2386, 2386, 2387,    0,    0, 2387,    0,    0,    0,
        0, 2387,    0,    0,    0,    0, 2387,    0,    0, 2387,

     2387,    0,    0, 2387, 2388,    0,    0, 2388,    0,    0,
        0, 2388,    0,    0, 2388, 2388,    0, 2388, 2388, 2388,
     2388, 2388,    0,    0, 2388, 2389,    0,    0, 2389,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 2389, 2389,
     2389, 2389, 2389,    0,    0, 2389, 2390, 2390,    0, 2390,
     2390, 2390, 2390, 2390, 2390, 2390, 2390, 2390, 2390, 2390,
     2390, 2390,    0, 2390, 2390, 2390, 2390, 2390, 2390, 2390,
     2390, 2391, 2391, 2391, 2391,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 2391, 2391,    0, 2391, 2391,    0,
        0, 2391, 2392,    0,    0, 2392,    0,    0,    0,    0,

        0,    0,    0,    0,    0, 2392,    0,    0, 2392, 2392,
        0,    0, 2392, 2393, 2393, 2393, 2393,    0, 2393,    0,
        0,    0,    0,    0,    0,    0,    0, 2393,    0, 2393,
     2393,    0,    0, 2393,    0,    0, 2393, 2394, 2394, 2394,
     2394,    0, 2394,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 2394, 2394,    0,    0, 2394, 2395, 2395,
        0, 2395,    0,    0,    0, 2395,    0,    0, 2395, 2395,
        0, 2395, 2395, 2395, 2395, 2395,    0,    0, 2395, 2397,
     2397,    0, 2397, 2397,    0,    0, 2397, 2398,    0, 2398,
        0,    0, 2398, 2398,    0,    0, 2398, 2399,    0,    0,

     2399, 2399,    0,    0, 2399, 2400,    0,    0, 2400, 2400,
        0,    0, 2400, 2401, 2401,    0, 2401, 2401, 2401, 2401,
     2401, 2401, 2401, 2401, 2401, 2401, 2401, 2401, 2401, 2401,
     2401, 2401, 2401, 2401, 2401, 2401, 2401, 2401, 2402, 2402,
     2402, 2402, 2402, 2402, 2402, 2402, 2402, 2402, 2402, 2402,
     2402, 2402, 2402, 2402, 2402, 2402, 2402, 2402, 2402, 2402,
     2402, 2402, 2402, 2403, 2403, 2403, 2403, 2403, 2403, 2403,
     2403, 2403, 2403, 2403, 2403, 2403, 2403, 2403, 2403, 2403,
     2403, 2403, 2403, 2403, 2403, 2403, 2403, 2403, 2404, 2404,
     2404, 2404, 2404, 2404, 2404, 2404, 2404, 2404, 2404, 2404,

     2404, 2404, 2404, 2404, 2404, 2404, 2404, 2404, 2404, 2404,
     2404, 2404, 2404, 2405, 2405, 2405, 2405, 2405, 2405, 2405,
     2405, 2405, 2405, 2405, 2405, 2405, 2405, 2405, 2405, 2405,
     2405, 2405, 2405, 2405, 2405, 2405, 2405, 2405, 2406, 2406,
     2406, 2406, 2406, 2406, 2406, 2406, 2406, 2406, 2406, 2406,
     2406, 2406, 2406, 2406, 2406, 2406, 2406, 2406, 2406, 2406,
     2406, 2406, 2406, 2407, 2407, 2407, 2407, 2407, 2407, 2407,
     2407, 2407, 2407, 2407, 2407, 2407, 2407, 2407, 2407, 2407,
     2407, 2407, 2407, 2407, 2407, 2407, 2407, 2407, 2408, 2408,
     2408, 2408, 2408, 2408, 2408, 2408, 2408, 2408, 2408, 2408,

     2408, 2408, 2408, 2408, 2408, 2408, 2408, 2408, 2408, 2408,
     2408, 2408, 2408, 2409,    0,    0, 2409, 2409,    0,    0,
     2409, 2410,    0,    0, 2410, 2410,    0,    0, 2410, 2411,
     2411,    0, 2411,    0, 2411, 2411, 2411, 2411, 2411, 2411,
     2411, 2411, 2411, 2411, 2411, 2411, 2411, 2411,    0, 2411,
     2411, 2411, 2411, 2411, 2412, 2412,    0, 2412, 2412,    0,
        0, 2412, 2412, 2412, 2412, 2412, 2412, 2412, 2412, 2412,
     2412, 2412, 2412,    0, 2412, 2412, 2412, 2412, 2412, 2413,
     2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413,
     2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413,

     2413, 2413, 2413, 2413, 2414, 2414, 2414, 2414, 2414, 2414,
     2414, 2414, 2414, 2414, 2414, 2414, 2414, 2414, 2414, 2414,
     2414, 2414, 2414, 2414, 2414, 2414, 2414, 2414, 2414, 2415,
     2415, 2415, 2415, 2415, 2415, 2415, 2415, 2415, 2415, 2415,
     2415, 2415, 2415, 2415, 2415, 2415, 2415, 2415, 2415, 2415,
     2415, 2415, 2415, 2415, 2416, 2416, 2416, 2416, 2416, 2416,
     2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416,
     2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2417,
     2417, 2417, 2417, 2417, 2417, 2417, 2417, 2417, 2417, 2417,
     2417, 2417, 2417, 2417, 2417, 2417, 2417, 2417, 2417, 2417,

     2417, 2417, 2417, 2417, 2418,    0,    0, 2418, 2418,    0,
        0, 2418, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419,
     2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419,
     2419, 2419, 2419, 2419, 2419, 2419, 2419, 2420, 2420, 2420,
     2420, 2420, 2420, 2420, 2420, 2420, 2420, 2420, 2420, 2420,
     2420, 2420, 2420, 2420, 2420, 2420, 2420, 2420, 2420, 2420,
     2420, 2420, 2421, 2421, 2421, 2421, 2421, 2421, 2421, 2421,
     2421, 2421, 2421, 2421, 2421, 2421, 2421, 2421, 2421, 2421,
     2421, 2421, 2421, 2421, 2421, 2421, 2421, 2422, 2422, 2422,
     2422, 2422, 2422, 2422, 2422, 2422, 2422, 2422, 2422, 2422,

     2422, 2422, 2422, 2422, 2422, 2422, 2422, 2422, 2422, 2422,
     2422, 2422, 2423, 2423,    0,    0, 2423,    0, 2423, 2423,
     2423, 2423, 2423, 2423, 2423, 2423, 2423, 2423, 2423, 2423,
     2423,    0, 2423, 2423, 2423, 2423, 2423, 2424, 2424, 2424,
     2424, 2424, 2424, 2424, 2424, 2424, 2424, 2424, 2424, 2424,
     2424, 2424, 2424, 2424, 2424, 2424, 2424, 2424, 2424, 2424,
     2424, 2424, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425,
     2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425,
     2425, 2425, 2425, 2425, 2425, 2425, 2425, 2426, 2426,    0,
     2426, 2426,    0, 2426, 2426, 2426, 2426, 2426, 2426, 2426,

     2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426,
     2426, 2426, 2427, 2427, 2427, 2427, 2427, 2427, 2427, 2427,
     2427, 2427, 2427, 2427, 2427, 2427, 2427, 2427, 2427, 2427,
     2427, 2427, 2427, 2427, 2427, 2427, 2427, 2428, 2428, 2428,
     2428, 2428, 2428, 2428, 2428, 2428, 2428, 2428, 2428, 2428,
     2428, 2428, 2428, 2428, 2428, 2428, 2428, 2428, 2428, 2428,
     2428, 2428, 2429, 2429, 2429, 2429, 2429, 2429, 2429, 2429,
     2429, 2429, 2429, 2429, 2429, 2429, 2429, 2429, 2429, 2429,
     2429, 2429, 2429, 2429, 2429, 2429, 2429, 2430, 2430, 2430,
     2430, 2430, 2430, 2430, 2430, 2430, 2430, 2430, 2430, 2430,

     2430, 2430, 2430, 2430, 2430, 2430, 2430, 2430, 2430, 2430,
     2430, 2430, 2431, 2431, 2431, 2431, 2431, 2431, 2431, 2431,
     2431, 2431, 2431, 2431, 2431, 2431, 2431, 2431, 2431, 2431,
     2431, 2431, 2431, 2431, 2431, 2431, 2431, 2432, 2432,    0,
        0, 2432, 2432, 2432, 2432, 2432, 2432, 2432, 2432, 2432,
     2432, 2432, 2432, 2432, 2432, 2432, 2432, 2432, 2432, 2432,
     2432, 2432, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,
     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,
     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2434, 2434, 2434,
     2434, 2434, 2434, 2434, 2434, 2434, 2434, 2434, 2434, 2434,

     2434, 2434, 2434, 2434, 2434, 2434, 2434, 2434, 2434, 2434,
     2434, 2434, 2435, 2435, 2435, 2435, 2435, 2435, 2435, 2435,
     2435, 2435, 2435, 2435, 2435, 2435, 2435, 2435, 2435, 2435,
     2435, 2435, 2435, 2435, 2435, 2435, 2435, 2436, 2436, 2436,
     2436, 2436, 2436, 2436, 2436, 2436, 2436, 2436, 2436, 2436,
     2436, 2436, 2436, 2436, 2436, 2436, 2436, 2436, 2436, 2436,
     2436, 2436, 2437, 2437, 2437, 2437,    0,    0,    0, 2437,
        0,    0, 2437,    0,    0, 2437, 2437, 2437, 2437, 2437,
        0,    0, 2437, 2438, 2438, 2438, 2438,    0, 2438,    0,
        0,    0,    0,    0,    0,    0,    0, 2438,    0, 2438,

     2438,    0,    0, 2438,    0,    0, 2438, 2439, 2439, 2439,
     2439,    0, 2439,    0,    0, 2439,    0,    0,    0,    0,
     2439, 2439,    0, 2439, 2439,    0,    0, 2439,    0,    0,
     2439, 2440, 2440, 2440, 2440,    0, 2440,    0,    0, 2440,
        0,    0,    0,    0, 2440, 2440,    0, 2440, 2440,    0,
        0, 2440,    0,    0, 2440, 2441, 2441, 2441, 2441,    0,
     2441,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 2441, 2441,    0,    0, 2441,    0,    0, 2441, 2442,
        0,    0, 2442,    0,    0,    0, 2442,    0,    0, 2442,
     2442,    0, 2442, 2442, 2442, 2442, 2442,    0,    0, 2442,

     2443, 2443, 2443, 2443,    0, 2443,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 2443, 2443,    0,    0,
     2443,    0,    0, 2443, 2444, 2444,    0, 2444,    0,    0,
        0, 2444,    0,    0, 2444, 2444,    0, 2444, 2444, 2444,
     2444, 2444,    0,    0, 2444, 2445, 2445,    0, 2445, 2445,
        0,    0, 2445, 2446,    0,    0, 2446, 2446,    0,    0,
     2446, 2447,    0,    0, 2447, 2447,    0,    0, 2447, 2448,
     2448,    0, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448,
     2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448,
     2448, 2448, 2448, 2448, 2449, 2449, 2449, 2449, 2449, 2449,

     2449, 2449, 2449, 2449, 2449, 2449, 2449, 2449, 2449, 2449,
     2449, 2449, 2449, 2449, 2449, 2449, 2449, 2449, 2449, 2450,
     2450, 2450, 2450, 2450, 2450, 2450, 2450, 2450, 2450, 2450,
     2450, 2450, 2450, 2450, 2450, 2450, 2450, 2450, 2450, 2450,
     2450, 2450, 2450, 2450, 2451, 2451, 2451, 2451, 2451, 2451,
     2451, 2451, 2451, 2451, 2451, 2451, 2451, 2451, 2451, 2451,
     2451, 2451, 2451, 2451, 2451, 2451, 2451, 2451, 2451, 2452,
     2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452,
     2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452,
     2452, 2452, 2452, 2452, 2453,    0,    0, 2453, 2453,    0,

        0, 2453, 2454,    0,    0, 2454, 2454,    0,    0, 2454,
     2455, 2455,    0, 2455, 2455,    0,    0, 2455, 2455, 2455,
     2455, 2455, 2455, 2455, 2455, 2455, 2455, 2455, 2455,    0,
     2455, 2455, 2455, 2455, 2455, 2456, 2456, 2456, 2456, 2456,
     2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456,
     2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456,
     2457, 2457, 2457, 2457, 2457, 2457, 2457, 2457, 2457, 2457,
     2457, 2457, 2457, 2457, 2457, 2457, 2457, 2457, 2457, 2457,
     2457, 2457, 2457, 2457, 2457, 2458,    0,    0, 2458, 2458,
        0,    0, 2458, 2459, 2459, 2459, 2459, 2459, 2459, 2459,

     2459, 2459, 2459, 2459, 2459, 2459, 2459, 2459, 2459, 2459,
     2459, 2459, 2459, 2459, 2459, 2459, 2459, 2459, 2460, 2460,
     2460, 2460, 2460, 2460, 2460, 2460, 2460, 2460, 2460, 2460,
     2460, 2460, 2460, 2460, 2460, 2460, 2460, 2460, 2460, 2460,
     2460, 2460, 2460, 2461, 2461, 2461, 2461, 2461, 2461, 2461,
     2461, 2461, 2461,    0, 2461, 2461,    0, 2461, 2461, 2461,
     2461, 2461, 2461, 2461, 2461, 2461, 2461, 2461, 2462, 2462,
     2462, 2462,    0, 2462,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 2462, 2462,    0,    0, 2462,    0,
        0, 2462, 2463, 2463, 2463, 2463,    0,    0,    0, 2463,

        0,    0,    0,    0,    0, 2463, 2463, 2463, 2463, 2463,
        0,    0, 2463, 2464, 2464, 2464, 2464,    0, 2464,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 2464,
     2464,    0,    0, 2464, 2465,    0,    0, 2465,    0,    0,
        0, 2465,    0,    0, 2465, 2465,    0, 2465, 2465, 2465,
     2465, 2465,    0,    0, 2465, 2466, 2466, 2466, 2466,    0,
     2466,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 2466, 2466,    0,    0, 2466,    0,    0, 2466, 2467,
     2467, 2467, 2467,    0,    0,    0, 2467,    0,    0,    0,
        0,    0, 2467, 2467, 2467, 2467, 2467,    0,    0, 2467,

     2468, 2468, 2468, 2468,    0, 2468,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 2468, 2468,    0,    0,
     2468, 2469, 2469,    0, 2469,    0,    0,    0, 2469,    0,
        0, 2469, 2469,    0, 2469, 2469, 2469, 2469, 2469,    0,
        0, 2469, 2470,    0,    0, 2470, 2470,    0,    0, 2470,
     2471,    0,    0, 2471, 2471,    0,    0, 2471, 2472, 2472,
        0, 2472, 2472,    0, 2472, 2472,    0,    0, 2472, 2472,
     2472,    0, 2472, 2472, 2472, 2472, 2472, 2472, 2472, 2472,
        0,    0, 2472, 2473,    0,    0, 2473,    0,    0,    0,
     2473,    0,    0,    0,    0,    0, 2473,    0,    0, 2473,

     2473,    0,    0, 2473, 2474,    0,    0, 2474,    0,    0,
        0, 2474,    0,    0,    0,    0,    0, 2474,    0,    0,
     2474, 2474,    0,    0, 2474, 2475, 2475, 2475, 2475, 2475,
     2475, 2475, 2475, 2475, 2475, 2475, 2475, 2475, 2475,    0,
     2475, 2475,    0,    0, 2475, 2475, 2475, 2475, 2475, 2475,
     2476, 2476,    0, 2476, 2476, 2476, 2476, 2476, 2476, 2476,
     2476, 2476, 2476, 2476, 2476, 2476, 2476, 2476, 2476, 2476,
     2476, 2476, 2476, 2476, 2476, 2477, 2477,    0, 2477, 2477,
     2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477,
     2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477, 2477,

     2478, 2478,    0, 2478, 2478,    0, 2478, 2478, 2478, 2478,
     2478, 2478, 2478,    0, 2478, 2478, 2478, 2478, 2478, 2478,
     2478, 2478,    0, 2478, 2478, 2479, 2479,    0, 2479, 2479,
     2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479,
     2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479,
     2480, 2480,    0, 2480, 2480,    0, 2480, 2480, 2480, 2480,
     2480,    0,    0,    0, 2480, 2480, 2480, 2480, 2480, 2480,
     2480, 2480,    0, 2480, 2480, 2481, 2481,    0, 2481, 2481,
     2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481,
     2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481,

     2482, 2482,    0, 2482, 2482,    0, 2482, 2482, 2482, 2482,
     2482,    0,    0,    0, 2482, 2482, 2482, 2482, 2482, 2482,
     2482, 2482,    0, 2482, 2482, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,
     2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2181,

     2181
    } ;

static yy_state_type yy_state_buf[YY_BUF_SIZE + 2], *yy_state_ptr;
static char *yy_full_match;
static int yy_lp;
static int yy_looking_for_trail_begin = 0;
static int yy_full_lp;
static int *yy_full_state;
#define YY_TRAILING_MASK 0x2000
#define YY_TRAILING_HEAD_MASK 0x4000
#define REJECT \
{ \
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */ \
yy_cp = yy_full_match; /* restore poss. backed-over text */ \
yy_lp = yy_full_lp; /* restore orig. accepting pos. */ \
yy_state_ptr = yy_full_state; /* restore orig. state */ \
yy_current_state = *yy_state_ptr; /* restore curr. state */ \
++yy_lp; \
goto find_rule; \
}
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;
#line 1 "code.l"
#define INITIAL 0
/******************************************************************************
 *
 * 
 *
 * Copyright (C) 1997-2004 by Dimitri van Heesch.
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation under the terms of the GNU General Public License is hereby 
 * granted. No representations are made about the suitability of this software 
 * for any purpose. It is provided "as is" without express or implied warranty.
 * See the GNU General Public License for more details.
 *
 * Documents produced by Doxygen are derivative works derived from the
 * input used in their production; they are not affected by this license.
 *
 */
#line 19 "code.l"

/*
 *	includes
 */
#include <stdio.h>
#include <assert.h>
#include <ctype.h>
#include <qregexp.h>
#include <qdir.h>

#include "qtbc.h"
#include "scanner.h"
#include "entry.h"
#include "doxygen.h"
#include "message.h"
#include "outputlist.h"
#include "util.h"
#include "membername.h"
#include "searchindex.h"

#define YY_NEVER_INTERACTIVE 1
  
// Toggle for some debugging info
//#define DBG_CTX(x) fprintf x
#define DBG_CTX(x) do { } while(0)
  
#define CLASSBLOCK (int *)4
#define SCOPEBLOCK (int *)8
#define INNERBLOCK (int *)12

/* -----------------------------------------------------------------
 *	statics
 */
  
static BaseCodeDocInterface * g_code;

static ClassSDict    g_codeClassSDict(17);
static QCString      g_curClassName;
static QStrList      g_curClassBases;

// TODO: is this still needed? if so, make it work
static bool          g_inClass;

static QCString      g_parmType;
static QCString      g_parmName;

static const char *  g_inputString;     //!< the code fragment as text
static int	     g_inputPosition;   //!< read offset during parsing 
static int           g_inputLines;      //!< number of line in the code fragment
static int	     g_yyLineNr;        //!< current line number
static bool          g_needsTermination;

static bool          g_exampleBlock;
static QCString      g_exampleName;
static QCString      g_exampleFile;

static bool          g_insideTemplate = FALSE;
static QCString      g_type;
static QCString      g_name;
static QCString      g_args;
static QCString      g_classScope;
static QCString      g_realScope;
static QStack<int>   g_scopeStack;      //!< 1 if bracket starts a scope, 
                                        //   2 for internal blocks 
static int           g_anchorCount;
static FileDef *     g_sourceFileDef;
static Definition *  g_currentDefinition;
static MemberDef *   g_currentMemberDef;
static bool          g_includeCodeFragment;
static const char *  g_currentFontClass;
static bool          g_searchingForBody;
static bool          g_insideBody;
static int           g_bodyCurlyCount;
static QCString      g_saveName;
static QCString      g_saveType;

static int	     g_bracketCount = 0;
static int	     g_curlyCount   = 0;
static int	     g_sharpCount   = 0;

static int	     g_lastSpecialCContext;
static int           g_lastStringContext;
static int           g_lastVerbStringContext;
static int           g_memCallContext;
static int	     g_lastCContext;

static bool          g_insideObjC;
static bool          g_insideProtocolList;

// context for an Objective-C method call
struct ObjCCallCtx
{
  int id;
  QCString methodName;
  QCString objectTypeOrName;
  ClassDef *objectType;
  MemberDef *objectVar;
  MemberDef *method;
  QCString format;
  int lexState;
  int braceCount;
};

// globals for objective-C method calls 
static ObjCCallCtx *g_currentCtx=0;
static int g_currentCtxId=0;
static int g_currentNameId=0;
static int g_currentObjId=0;
static QStack<ObjCCallCtx> g_contextStack;
static QIntDict<ObjCCallCtx> g_contextDict;
static QIntDict<QCString> g_nameDict;
static QIntDict<QCString> g_objectDict;
static int g_braceCount=0;
  
static void saveObjCContext();
static void restoreObjCContext();

//-------------------------------------------------------------------

/*! Represents a stack of variable to class mappings as found in the
 *  code. Each scope is enclosed in pushScope() and popScope() calls.
 *  Variables are added by calling addVariables() and one can search
 *  for variable using findVariable().
 */
class VariableContext
{
  public:
    static const ClassDef *dummyContext;
    
    class Scope : public SDict<ClassDef>
    {
      public:
	Scope() : SDict<ClassDef>(17) {}
    };
    
    VariableContext() 
    {
      m_scopes.setAutoDelete(TRUE);
    }
    virtual ~VariableContext()
    {
    }
    
    void pushScope()
    {
      m_scopes.append(new Scope);
      DBG_CTX((stderr,"** Push var context %d\n",m_scopes.count()));
    }

    void popScope()
    {
      if (m_scopes.count()>0)
      {
        DBG_CTX((stderr,"** Pop var context %d\n",m_scopes.count()));
	m_scopes.remove(m_scopes.count()-1);
      }
      else
      {
        DBG_CTX((stderr,"** ILLEGAL: Pop var context\n"));
      }
    }

    void clear()
    {
      m_scopes.clear();
      m_globalScope.clear();
    }

    void clearExceptGlobal()
    {
      DBG_CTX((stderr,"** Clear var context\n"));
      m_scopes.clear();
    }

    void addVariable(const QCString &type,const QCString &name);
    ClassDef *findVariable(const QCString &name);
    
  private:
    Scope        m_globalScope;
    QList<Scope> m_scopes;
};

void VariableContext::addVariable(const QCString &type,const QCString &name)
{
  //printf("VariableContext::addVariable(%s,%s)\n",type.data(),name.data());
  QCString ltype = type.simplifyWhiteSpace();
  QCString lname = name.simplifyWhiteSpace();
  if (ltype.left(7)=="struct ") 
  {
    ltype = ltype.right(ltype.length()-7);
  }
  else if (ltype.left(6)=="union ")
  {
    ltype = ltype.right(ltype.length()-6);
  }
  if (ltype.isEmpty() || lname.isEmpty()) return;
  DBG_CTX((stderr,"** addVariable trying: type=%s name=%s g_currentDefinition=%s\n",
	ltype.data(),lname.data(),g_currentDefinition?g_currentDefinition->name().data():"<none>"));
  Scope *scope = m_scopes.count()==0 ? &m_globalScope : m_scopes.getLast();
  ClassDef *varType;
  int i=0;
  if (
      (varType=g_codeClassSDict[ltype]) ||  // look for class definitions inside the code block
      (varType=getResolvedClass(g_currentDefinition,g_sourceFileDef,ltype)) // look for global class definitions
     ) 
  {
    DBG_CTX((stderr,"** addVariable type=%s name=%s\n",ltype.data(),lname.data()));
    scope->append(lname,varType); // add it to a list
  }
  else if ((i=ltype.find('<'))!=-1)
  {
    // probably a template class
    QCString typeName(ltype.left(i));
    ClassDef* newDef = 0;
    QCString templateArgs(ltype.right(ltype.length() - i));
    if (  
         ( // look for class definitions inside the code block
	   (varType=g_codeClassSDict[typeName]) ||
           // otherwise look for global class definitions
           (varType=getResolvedClass(g_currentDefinition,g_sourceFileDef,typeName))
	 ) && // and it must be a template
         varType->templateArguments())
    {
      newDef = varType->getVariableInstance( templateArgs );
    }
    if (newDef)
    {
      DBG_CTX((stderr,"** addVariable type=%s templ=%s name=%s\n",typeName.data(),templateArgs.data(),lname.data()));
      scope->append(lname, newDef);
    }
    else
    {
      // Doesn't seem to be a template. Try just the base name.
      addVariable(typeName,name);
    }
  }
  else // add a dummy entry so the name is hidden to avoid false links
  {
    DBG_CTX((stderr,"** addVariable: dummy context\n"));
    scope->append(lname,dummyContext);
  }
}

ClassDef *VariableContext::findVariable(const QCString &name)
{
  if (name.isEmpty()) return 0;
  ClassDef *result = 0;
  QListIterator<Scope> sli(m_scopes);
  Scope *scope;
  // search from inner to outer scope
  for (sli.toLast();(scope=sli.current());--sli)
  {
    result = scope->find(name);
    if (result) 
    {
      DBG_CTX((stderr,"** findVariable(%s)=%p\n",name.data(),result));
      return result;
    }
  }
  // nothing found -> also try the global scope
  result=m_globalScope.find(name);
  DBG_CTX((stderr,"** findVariable(%s)=%p\n",name.data(),result));
  return result;
}

const ClassDef *VariableContext::dummyContext = (ClassDef*)0x8;

static VariableContext g_theVarContext;

//-------------------------------------------------------------------

class CallContext
{
  public:
    CallContext() 
    {
      m_classList.append(0);
    }
    virtual ~CallContext() {}
    void setClass(ClassDef *cd)
    {
      DBG_CTX((stderr,"** Set call context %s (%p)\n",cd==0 ? "<null>" : cd->name().data(),cd));
      m_classList.removeLast();
      m_classList.append(cd);
    }
    void pushScope()
    {
      m_classList.append(0);
      DBG_CTX((stderr,"** Push call context %d\n",m_classList.count()));
    }
    void popScope()
    {
      if (m_classList.count()>1)
      {
        DBG_CTX((stderr,"** Pop call context %d\n",m_classList.count()));
	m_classList.removeLast();
      }
      else
      {
        DBG_CTX((stderr,"** ILLEGAL: Pop call context\n"));
      }
    }
    void clear()
    {
      DBG_CTX((stderr,"** Clear call context\n"));
      m_classList.clear();
      m_classList.append(0);
    }
    ClassDef *getClass() const
    {
      return m_classList.getLast();
    }

  private:
    QList<ClassDef> m_classList;    
};

static CallContext g_theCallContext;

//-------------------------------------------------------------------

/*! add class/namespace name s to the scope */
static void pushScope(const char *s)
{
  if (g_classScope.isEmpty())
  {
    g_classScope = s;
  }
  else
  {
    g_classScope += "::";
    g_classScope += s;
  }
  //printf("pushScope() result: `%s'\n",g_classScope.data());
}

/*! remove the top class/namespace name from the scope */
static void popScope()
{
  if (!g_classScope.isEmpty())
  {
    int i=g_classScope.findRev("::");
    if (i==-1) // last name, strip all
    {
      g_classScope.resize(0);
    } 
    else // strip name
    {
      g_classScope = g_classScope.left(i);
    }
  }
  else
  {
    //err("Error: Too many end of scopes found!\n");
  }
  //printf("popScope() result: `%s'\n",g_classScope.data());
}

static void setCurrentDoc(const QCString &name,const QCString &base,const QCString &anchor="")
{
  static bool searchEngineEnabled=Config_getBool("SEARCHENGINE");
  if (searchEngineEnabled)
  {
    Doxygen::searchIndex->setCurrentDoc(name,base,anchor);
  }
}

static void addToSearchIndex(const char *text)
{
  static bool searchEngineEnabled=Config_getBool("SEARCHENGINE");
  if (searchEngineEnabled)
  {
    Doxygen::searchIndex->addWord(text);
  }
}

static void setClassScope(const QCString &name)
{
  //printf("setClassScope(%s)\n",name.data());
  QCString n=name;
  n=n.simplifyWhiteSpace();
  int ts=n.find('<'); // start of template
  int te=n.findRev('>'); // end of template
  //printf("ts=%d te=%d\n",ts,te);
  if (ts!=-1 && te!=-1 && te>ts)
  {
    // remove template from scope
    n=n.left(ts)+n.right(n.length()-te-1);
  }
  g_classScope = n;
  //printf("--->New class scope `%s'\n",g_classScope.data());
}

/*! start a new line of code, inserting a line number if g_sourceFileDef
 * is TRUE. If a definition starts at the current line, then the line
 * number is linked to the documentation of that definition.
 */
static void startCodeLine()
{
  //if (g_currentFontClass) { g_code->endFontClass(); }
  if (g_sourceFileDef)
  {
    //QCString lineNumber,lineAnchor;
    //lineNumber.sprintf("%05d",g_yyLineNr);
    //lineAnchor.sprintf("l%05d",g_yyLineNr);
   
    Definition *d   = g_sourceFileDef->getSourceDefinition(g_yyLineNr);
    //printf("startCodeLine %d d=%p\n",g_yyLineNr,d);
    //g_code->startLineNumber();
    if (!g_includeCodeFragment && d && d->isLinkableInProject())
    {
      g_currentDefinition = d;
      g_currentMemberDef = g_sourceFileDef->getSourceMember(g_yyLineNr);
      g_insideBody = FALSE;
      g_searchingForBody = TRUE;
      g_realScope = d->name().copy();
      //printf("Real scope: `%s'\n",g_realScope.data());
      g_bodyCurlyCount = 0;
      QCString lineAnchor;
      lineAnchor.sprintf("l%05d",g_yyLineNr);
      if (g_currentMemberDef)
      {
        g_code->writeLineNumber(g_currentMemberDef->getReference(),
	                        g_currentMemberDef->getOutputFileBase(),
	                        g_currentMemberDef->anchor(),g_yyLineNr);
        setCurrentDoc(
                                g_currentMemberDef->qualifiedName(),
	                        g_sourceFileDef->getSourceFileBase(),
	                        lineAnchor);
      }
      else
      {
        g_code->writeLineNumber(d->getReference(),
	                        d->getOutputFileBase(),
	                        0,g_yyLineNr);
        setCurrentDoc(
                                d->qualifiedName(),
	                        g_sourceFileDef->getSourceFileBase(),
	                        lineAnchor);
      }
    }
    else
    {
      //g_code->codify(lineNumber);
      g_code->writeLineNumber(0,0,0,g_yyLineNr);
    }
    //g_code->endLineNumber();
  }
  g_code->startCodeLine(); 
  if (g_currentFontClass)
  {
    g_code->startFontClass(g_currentFontClass);
  }
}


static void endFontClass();
static void endCodeLine()
{
  if (g_currentFontClass) { g_code->endFontClass(); }
  g_code->endCodeLine();
}

/*! write a code fragment `text' that may span multiple lines, inserting
 * line numbers for each line.
 */
static void codifyLines(char *text)
{
  //printf("codifyLines(%d,\"%s\")\n",g_yyLineNr,text);
  char *p=text,*sp=p;
  char c;
  bool done=FALSE;
  while (!done)
  {
    sp=p;
    while ((c=*p++) && c!='\n');
    if (c=='\n')
    {
      g_yyLineNr++;
      *(p-1)='\0';
      g_code->codify(sp);
      endCodeLine();
      if (g_yyLineNr<g_inputLines) 
      {
	startCodeLine();
      }
    }
    else
    {
      g_code->codify(sp);
      done=TRUE;
    }
  }
}

/*! writes a link to a fragment \a text that may span multiple lines, inserting
 * line numbers for each line. If \a text contains newlines, the link will be 
 * split into multiple links with the same destination, one for each line.
 */
static void writeMultiLineCodeLink(BaseCodeDocInterface &ol,
                  const char *ref,const char *file,
                  const char *anchor,const char *text)
{
  bool done=FALSE;
  char *p=(char *)text;
  while (!done)
  {
    char *sp=p;
    char c;
    while ((c=*p++) && c!='\n');
    if (c=='\n')
    {
      g_yyLineNr++;
      *(p-1)='\0';
      //printf("writeCodeLink(%s,%s,%s,%s)\n",ref,file,anchor,sp);
      ol.writeCodeLink(ref,file,anchor,sp);
      endCodeLine();
      if (g_yyLineNr<g_inputLines) 
      {
	startCodeLine();
      }
    }
    else
    {
      //printf("writeCodeLink(%s,%s,%s,%s)\n",ref,file,anchor,sp);
      ol.writeCodeLink(ref,file,anchor,sp);
      done=TRUE;
    }
  }
}

static void addType()
{
  if (g_name=="const") { g_name.resize(0); return; }
  if (!g_type.isEmpty()) g_type += ' ' ;
  g_type += g_name ;
  g_name.resize(0) ;
  if (!g_type.isEmpty()) g_type += ' ' ;
  g_type += g_args ;
  g_args.resize(0) ;
}

static void addParmType()
{
  if (g_parmName=="const") { g_parmName.resize(0); return; }
  if (!g_parmType.isEmpty()) g_parmType += ' ' ;
  g_parmType += g_parmName ;
  g_parmName.resize(0) ;
}

void setParameterList(MemberDef *md)
{
  g_classScope = md->getClassDef() ? md->getClassDef()->name().data() : "";
  ArgumentList *al = md->argumentList();
  if (al==0) return; 
  Argument *a = al->first();
  while (a)
  {
    g_parmName = a->name.copy();
    g_parmType = a->type.copy();
    int i = g_parmType.find('*');
    if (i!=-1) g_parmType = g_parmType.left(i);
    i = g_parmType.find('&');
    if (i!=-1) g_parmType = g_parmType.left(i);
    if (g_parmType.left(6)=="const ") g_parmType = g_parmType.right(g_parmType.length()-6);
    g_parmType=g_parmType.stripWhiteSpace();
    g_theVarContext.addVariable(g_parmType,g_parmName);
    a = al->next();
  }
}

static ClassDef *stripClassName(const char *s)
{
  int pos=0;
  QCString type = s;
  QCString className;
  QCString templSpec;
  while (extractClassNameFromType(type,pos,className,templSpec))
  {
    QCString clName=className+templSpec;
    ClassDef *cd=0;
    if (!g_classScope.isEmpty())
    {
      cd=getResolvedClass(g_currentDefinition,g_sourceFileDef,g_classScope+"::"+clName);
    }
    if (cd==0)
    {
      cd=getResolvedClass(g_currentDefinition,g_sourceFileDef,clName);
    }
    //printf("stripClass trying `%s' = %p\n",clName.data(),cd);
    if (cd)
    {
      return cd;
    }
  }

  return 0;
}

static MemberDef *setCallContextForVar(const QCString &name)
{
  if (name.isEmpty()) return 0;
  //fprintf(stderr,"setCallContextForVar(%s) g_classScope=%s\n",name.data(),g_classScope.data());

  int scopeEnd = name.findRev("::");
  if (scopeEnd!=-1) // name with explicit scope
  {
    QCString scope   = name.left(scopeEnd);
    QCString locName = name.right(name.length()-scopeEnd-2);
    //printf("explicit scope: name=%s scope=%s\n",locName.data(),scope.data());
    ClassDef *mcd = getClass(scope); // TODO: check namespace as well
    if (mcd && !locName.isEmpty())
    {
      MemberDef *md=mcd->getMemberByName(locName);
      if (md)
      {
        //printf("name=%s scope=%s\n",locName.data(),scope.data());
        g_theCallContext.setClass(stripClassName(md->typeString()));
        return md;
      }
    }
  }
  
  MemberName *mn;
  ClassDef *mcd = g_theVarContext.findVariable(name);
  if (mcd) // local variable
  {
    //fprintf(stderr,"local variable\n");
    if (mcd!=VariableContext::dummyContext)
    {
      //fprintf(stderr,"local var `%s' mcd=%s\n",name.data(),mcd->name().data());
      g_theCallContext.setClass(mcd);
    }
  }
  else
  {
    // look for a class member 
    mcd = getClass(g_classScope);
    if (mcd)
    {
      //fprintf(stderr,"Inside class %s\n",mcd->name().data());
      MemberDef *md=mcd->getMemberByName(name);
      if (md) 
      {
        //fprintf(stderr,"Found member %s\n",md->name().data());
	if (g_scopeStack.top()!=CLASSBLOCK)
	{
          //fprintf(stderr,"class member `%s' mcd=%s\n",name.data(),mcd->name().data());
	  g_theCallContext.setClass(stripClassName(md->typeString()));
	}
	return md;
      }
    }
  }

  // look for a global member
  if ((mn=Doxygen::functionNameSDict[name]))
  {
    //printf("global var `%s'\n",name.data());
    if (mn->count()==1) // global defined only once
    {
      MemberDef *md=mn->getFirst();
      if (!md->isStatic() || md->getBodyDef()==g_sourceFileDef)
      {
        g_theCallContext.setClass(stripClassName(md->typeString()));
        return md;
      }
      return 0;
    }
    else if (mn->count()>1) // global defined more than once
    {
      MemberDef *md=mn->first();
      while (md)
      {
	//printf("mn=%p md=%p md->getBodyDef()=%p g_sourceFileDef=%p\n",
	//    mn,md,
	//    md->getBodyDef(),g_sourceFileDef);
	
	// in case there are multiple members we could link to, we 
	// only link to members if defined in the same file or 
	// defined as external.
        if (!md->isStatic() || md->getBodyDef()==g_sourceFileDef)
        {
          g_theCallContext.setClass(stripClassName(md->typeString()));
	  //printf("returning member %s in source file %s\n",md->name().data(),g_sourceFileDef->name().data());
          return md;
        }
	md=mn->next();
      }
      return 0;
    }
  }
  return 0;
}

static void addDocCrossReference(MemberDef *src,MemberDef *dst)
{
  //printf("addDocCrossReference src=%s,dst=%s\n",src->name().data(),dst->name().data());
  if (Config_getBool("REFERENCED_BY_RELATION") && 
      (src->isFunction() || src->isSlot()) 
     )
  {
    dst->addSourceReferencedBy(src);
  }
  if ((Config_getBool("REFERENCES_RELATION") || Config_getBool("CALL_GRAPH")) && 
      (src->isFunction() || src->isSlot())
     )
  {
    src->addSourceReferences(dst);
  }

}

static void generateClassOrGlobalLink(BaseCodeDocInterface &ol,char *clName,
                                      bool typeOnly=FALSE)
{
  int i=0;
  if (*clName=='~') // correct for matching negated values i.s.o. destructors.
  {
    g_code->codify("~");
    clName++;
  }
  QCString className=clName;
  if (className.isEmpty()) return;
  if (g_insideProtocolList)
  {
    className+="-p";
  }
  ClassDef *cd=0;
  MemberDef *md=0;

  //printf("generateClassOrGlobalLink(className=%s)\n",className.data());
  if (!g_theVarContext.findVariable(className)) // not a local variable
  {
    Definition *d = g_currentDefinition;
    //printf("d=%p g_sourceFileDef=%p\n",d,g_currentDefinition);
    cd = getResolvedClass(d,g_sourceFileDef,className,&md);
    if (cd==0 && md==0 && (i=className.find('<'))!=-1)
    {
      cd=getResolvedClass(d,g_sourceFileDef,className.left(i),&md);
    }
    //printf("is not found as a variable %s\n",cd?cd->name().data():"<null>");
  }
  else
  {
    //printf("is a local variable!\n");
  }
  if (cd && cd->isLinkable()) // is it a linkable class
  {
    //printf("is linkable class %s\n",clName);
    if (g_exampleBlock)
    {
      QCString anchor;
      anchor.sprintf("_a%d",g_anchorCount);
      //printf("addExampleClass(%s,%s,%s)\n",anchor.data(),g_exampleName.data(),
      //                                   g_exampleFile.data());
      if (cd->addExample(anchor,g_exampleName,g_exampleFile))
      {
	ol.writeCodeAnchor(anchor);
	g_anchorCount++;
      }
    }
    writeMultiLineCodeLink(ol,cd->getReference(),cd->getOutputFileBase(),0,clName);
    addToSearchIndex(className);
    if (md)
    {
      Definition *d = md->getOuterScope()==Doxygen::globalScope ?
                      md->getBodyDef() : md->getOuterScope();
      if (md->getGroupDef()) d = md->getGroupDef();
      if (d && d->isLinkable() && md->isLinkable() && g_currentMemberDef)
      {
        addDocCrossReference(g_currentMemberDef,md);
      }
    }
  }
  else // not a class, maybe a global member
  {
    //printf("class %s not linkable! cd=%p md=%p typeOnly=%d\n",clName,cd,md,typeOnly);
    if (md!=0 || (cd==0 && !typeOnly)) // not a class, see if it is a global enum/variable/typedef.
    {
      if (md==0) // not found as a typedef
      {
	md = setCallContextForVar(clName);
	if (md && g_currentDefinition)
	{
	  //fprintf(stderr,"%s accessible from %s? %d md->getOuterScope=%s\n",
	  //    md->name().data(),g_currentDefinition->name().data(),
	  //    isAccessibleFrom(g_currentDefinition,g_sourceFileDef,md),
	  //    md->getOuterScope()->name().data());
	}
	     
        if (md && g_currentDefinition && 
	    isAccessibleFrom(g_currentDefinition,g_sourceFileDef,md)==-1)
	{
	  md=0; // variable not accessible
	}
      }
      if (md)
      {
        //printf("is a global md=%p g_currentDefinition=%s\n",md,g_currentDefinition?g_currentDefinition->name().data():"<none>");
        //Definition *d = md->getOuterScope()==Doxygen::globalScope ?
	//                md->getBodyDef() : md->getOuterScope();
	//printf("definition %s\n",d?d->name().data():"<none>");
        //if (md->getGroupDef()) d = md->getGroupDef();
	if (md->isLinkable())
	{
	  writeMultiLineCodeLink(ol,md->getReference(),md->getOutputFileBase(),md->anchor(),clName);
          addToSearchIndex(clName);
	  if (g_currentMemberDef)
	  {
	    addDocCrossReference(g_currentMemberDef,md);
	  }
	  return;
	}
      }
    }
    
    // nothing found, just write out the word
    codifyLines(clName);
    addToSearchIndex(clName);
  }
}

static bool getLink(const char *className,
                    const char *memberName,
		    BaseCodeDocInterface &ol,
		    const char *text=0)
{
  MemberDef    *md;
  ClassDef     *cd;
  FileDef      *fd;
  NamespaceDef *nd;
  GroupDef     *gd;
  QCString m=removeRedundantWhiteSpace(memberName);
  QCString c=className;
  //printf("Trying `%s'::`%s'\n",c.data(),m.data());
  if (getDefs(c,m,"()",md,cd,fd,nd,gd,FALSE,g_sourceFileDef) && 
      md->isLinkable())
  {
    //printf("Found!\n");
    if (g_exampleBlock)
    {
      QCString anchor;
      anchor.sprintf("a%d",g_anchorCount);
      //printf("addExampleFile(%s,%s,%s)\n",anchor.data(),g_exampleName.data(),
      //                                  g_exampleFile.data());
      if (md->addExample(anchor,g_exampleName,g_exampleFile))
      {
	ol.writeCodeAnchor(anchor);
	g_anchorCount++;
      }
    }
    //Definition *d=0;
    //if (cd) d=cd; else if (nd) d=nd; else if (fd) d=fd; else d=gd;

    Definition *d = md->getOuterScope()==Doxygen::globalScope ?
	            md->getBodyDef() : md->getOuterScope();
    if (md->getGroupDef()) d = md->getGroupDef();
    if (d && d->isLinkable())
    {
      g_theCallContext.setClass(stripClassName(md->typeString()));
      //printf("g_currentDefinition=%p g_currentMemberDef=%p g_insideBody=%d\n",
      //        g_currentDefinition,g_currentMemberDef,g_insideBody);

      if (g_currentDefinition && g_currentMemberDef &&
	  md!=g_currentMemberDef && g_insideBody)
      {
	addDocCrossReference(g_currentMemberDef,md);
      }
      //printf("d->getReference()=`%s' d->getOutputBase()=`%s' name=`%s' member name=`%s'\n",d->getReference().data(),d->getOutputFileBase().data(),d->name().data(),md->name().data());
     
      writeMultiLineCodeLink(ol,md->getReference(),
	                        md->getOutputFileBase(),
	                        md->anchor(),
				text ? text : memberName);
      addToSearchIndex(text ? text : memberName);
      return TRUE;
    } 
  }
  return FALSE;
}

static bool generateClassMemberLink(BaseCodeDocInterface &ol,ClassDef *mcd,const char *memName)
{
  if (mcd)
  {
    MemberDef *xmd = mcd->getMemberByName(memName);
    //printf("generateClassMemberLink(class=%s,member=%s)=%p\n",mcd->name().data(),memName,xmd);
    if (xmd)
    {
      // extract class definition of the return type in order to resolve
      // a->b()->c() like call chains
      
      //printf("type=`%s' args=`%s' class=%s\n",
      //  xmd->typeString(),xmd->argsString(),
      //  xmd->getClassDef()->name().data());

      if (g_exampleBlock)
      {
	QCString anchor;
	anchor.sprintf("a%d",g_anchorCount);
	//printf("addExampleFile(%s,%s,%s)\n",anchor.data(),g_exampleName.data(),
	//                                  g_exampleFile.data());
	if (xmd->addExample(anchor,g_exampleName,g_exampleFile))
	{
	  ol.writeCodeAnchor(anchor);
	  g_anchorCount++;
	}
      }

      g_theCallContext.setClass(stripClassName(xmd->typeString()));

      Definition *xd = xmd->getOuterScope()==Doxygen::globalScope ?
	               xmd->getBodyDef() : xmd->getOuterScope();
      if (xmd->getGroupDef()) xd = xmd->getGroupDef();
      if (xd)
      {

	//printf("g_currentDefiniton=%p g_currentMemberDef=%p xmd=%p g_insideBody=%d\n",g_currentDefinition,g_currentMemberDef,xmd,g_insideBody);

	if (xmd->templateMaster()) xmd = xmd->templateMaster();

	// add usage reference
	if (g_currentDefinition && g_currentMemberDef &&
	    xmd!=g_currentMemberDef && g_insideBody)
	{
	  addDocCrossReference(g_currentMemberDef,xmd);
	}

	// write the actual link
	writeMultiLineCodeLink(ol,xmd->getReference(),
	    xmd->getOutputFileBase(),xmd->anchor(),memName);
        addToSearchIndex(memName);
	return TRUE;
      }

    }
  }
  
  return FALSE;
}

static void generateMemberLink(BaseCodeDocInterface &ol,const QCString &varName,
            char *memName)
{
  //printf("generateMemberLink(object=%s,mem=%s) classScope=%s\n",
  //    varName.data(),memName,g_classScope.data());

  if (varName.isEmpty()) return;

  // look for the variable in the current context
  ClassDef *vcd = g_theVarContext.findVariable(varName);
  if (vcd) 
  {
    if (vcd!=VariableContext::dummyContext)
    {
      //printf("Class found!\n");
      if (getLink(vcd->name(),memName,ol)) 
      {
	//printf("Found result!\n");
	return;
      }
      BaseClassListIterator bcli(*vcd->baseClasses());
      for ( ; bcli.current() ; ++bcli)
      {
	if (getLink(bcli.current()->classDef->name(),memName,ol)) 
	{
	  //printf("Found result!\n");
	  return;
	}
      }
    }
  }
  else // variable not in current context, maybe it is in a parent context
  {
    vcd = getResolvedClass(g_currentDefinition,g_sourceFileDef,g_classScope);
    if (vcd && vcd->isLinkable())
    {
      //printf("Found class %s for variable `%s'\n",g_classScope.data(),varName.data());
      MemberName *vmn=Doxygen::memberNameSDict[varName];
      if (vmn==0)
      {
	int vi;
	QCString vn=varName;
	QCString scope;
	if ((vi=vn.findRev("::"))!=-1) // explicit scope A::b(), probably static member
	{
	  ClassDef *jcd = getClass(vn.left(vi));
	  vn=vn.right(vn.length()-vi-2);
	  vmn=Doxygen::memberNameSDict[vn];
	  //printf("Trying name `%s' scope=%s\n",vn.data(),scope.data());
	  if (vmn)
	  {
	    MemberNameIterator vmni(*vmn);
	    MemberDef *vmd;
	    for (;(vmd=vmni.current());++vmni)
	    {
	      if (/*(vmd->isVariable() || vmd->isFunction()) && */
		  vmd->getClassDef()==jcd)
	      {
		//printf("Found variable type=%s\n",vmd->typeString());
		ClassDef *mcd=stripClassName(vmd->typeString());
		if (mcd && mcd->isLinkable())
		{
		  if (generateClassMemberLink(ol,mcd,memName)) return;
		}
	      }
	    }
	  }
	}
      }
      if (vmn)
      {
	//printf("There is a variable with name `%s'\n",varName);
	MemberNameIterator vmni(*vmn);
	MemberDef *vmd;
	for (;(vmd=vmni.current());++vmni)
	{
	  if (/*(vmd->isVariable() || vmd->isFunction()) && */
	      vmd->getClassDef()==vcd)
	  {
	    //printf("Found variable type=%s\n",vmd->typeString());
	    ClassDef *mcd=stripClassName(vmd->typeString());
	    if (mcd && mcd->isLinkable())
	    {
	      if (generateClassMemberLink(ol,mcd,memName)) return;
	    }
	  }
	}
      }
    }
  }
  codifyLines(memName);
  addToSearchIndex(memName);
  return;
}

static void generateFunctionLink(BaseCodeDocInterface &ol,char *funcName)
{
  //CodeClassDef *ccd=0;
  ClassDef *ccd=0;
  QCString locScope=g_classScope.copy();
  QCString locFunc=removeRedundantWhiteSpace(funcName);
  int i=locFunc.findRev("::");
  if (i>0)
  {
    locScope=locFunc.left(i);
    locFunc=locFunc.right(locFunc.length()-i-2).stripWhiteSpace();
    int ts=locScope.find('<'); // start of template
    int te=locScope.findRev('>'); // end of template
    //printf("ts=%d te=%d\n",ts,te);
    if (ts!=-1 && te!=-1 && te>ts)
    {
      // remove template from scope
      locScope=locScope.left(ts)+locScope.right(locScope.length()-te-1);
    }
  }
  //printf("generateFunctionLink(%s) classScope=`%s'\n",locFunc.data(),locScope.data());
  if (!locScope.isEmpty() && (ccd=g_codeClassSDict[locScope]))
  {
    //printf("using classScope %s\n",g_classScope.data());
    BaseClassListIterator bcli(*ccd->baseClasses());
    for ( ; bcli.current() ; ++bcli)
    {
      if (getLink(bcli.current()->classDef->name(),locFunc,ol,funcName)) 
      {
	return;
      }
    }
  }
  if (!getLink(locScope,locFunc,ol,funcName))
  {
    generateClassOrGlobalLink(ol,funcName);
  }
  return;
}

/*! counts the number of lines in the input */
static int countLines()
{
  const char *p=g_inputString;
  char c;
  int count=1;
  while ((c=*p)) 
  { 
    p++ ; 
    if (c=='\n') count++;  
  }
  if (p>g_inputString && *(p-1)!='\n') 
  { // last line does not end with a \n, so we add an extra
    // line and explicitly terminate the line after parsing.
    count++, 
    g_needsTermination=TRUE; 
  } 
  return count;
}

static void endFontClass()
{
  if (g_currentFontClass)
  {
    g_code->endFontClass();
    g_currentFontClass=0;
  }
}

static void startFontClass(const char *s)
{
  endFontClass();
  g_code->startFontClass(s);
  g_currentFontClass=s;
}

//----------------------------------------------------------------------------

// recursively writes a linkified Objective-C method call
static void writeObjCMethodCall(ObjCCallCtx *ctx)
{
  if (ctx==0) return;
  const char *p = ctx->format.data();
  //printf("writeObjCMethodCall(%s) obj=%s method=%s\n",
  //    ctx->format.data(),ctx->objectTypeOrName.data(),ctx->methodName.data());
  char c;
  if (!ctx->objectTypeOrName.isEmpty() && ctx->objectTypeOrName.at(0)!='$')
  {
    //printf("Looking for object=%s method=%s\n",ctx->objectTypeOrName.data(),
    //	ctx->methodName.data());
    ClassDef *cd = g_theVarContext.findVariable(ctx->objectTypeOrName);
    if (cd==0) // not a local variable
    {
      if (ctx->objectTypeOrName=="self")
      {
	if (g_currentDefinition && 
	    g_currentDefinition->definitionType()==Definition::TypeClass)
	{
	  ctx->objectType = (ClassDef *)g_currentDefinition;
	}
      }
      else
      {
        ctx->objectType = getResolvedClass(
  	  g_currentDefinition,
	  g_sourceFileDef,
	  ctx->objectTypeOrName,
	  &ctx->method);
      }
      //printf("  object is class? %p\n",ctx->objectType);
      if (ctx->objectType) // found class
      {
	ctx->method = ctx->objectType->getMemberByName(ctx->methodName);
        //printf("    yes->method=%s\n",ctx->method?ctx->method->name().data():"<none>");
      }
      else if (ctx->method==0) // search for class variable with the same name
      {
        //printf("    no\n");
	//printf("g_currentDefinition=%p\n",g_currentDefinition);
	if (g_currentDefinition && 
	    g_currentDefinition->definitionType()==Definition::TypeClass)
	{
	  ctx->objectVar = ((ClassDef *)g_currentDefinition)->getMemberByName(ctx->objectTypeOrName);
	  //printf("      ctx->objectVar=%p\n",ctx->objectVar);
	  if (ctx->objectVar)
	  {
	    ctx->objectType = stripClassName(ctx->objectVar->typeString());
	    //printf("        ctx->objectType=%p\n",ctx->objectType);
	    if (ctx->objectType)
	    {
	      ctx->method = ctx->objectType->getMemberByName(ctx->methodName);
	      //printf("          ctx->method=%p\n",ctx->method);
	    }
	  }
	}
      }
    }
    else // local variable
    {
      //printf("  object is local variable\n");
      if (cd!=VariableContext::dummyContext)
      {
        ctx->method = cd->getMemberByName(ctx->methodName);
        //printf("   class=%p method=%p\n",cd,ctx->method);
      }
    }
  }

  //printf("[");
  while ((c=*p++)) // for each character in ctx->format
  {
    if (c=='$')
    {
      char nc=*p++;
      if (nc=='$') // escaped $
      {
	g_code->codify("$");
      }
      else // name fragment or reference to a nested call 
      {
	if (nc=='n') // name fragment
	{
          nc=*p++;
	  QCString refIdStr;
	  while (nc!=0 && isdigit(nc)) { refIdStr+=nc; nc=*p++; }
	  p--;
	  int refId=refIdStr.toInt();
	  QCString *pName = g_nameDict.find(refId);
	  if (pName)
	  {
	    if (ctx->method && ctx->method->isLinkable())
	    {
              writeMultiLineCodeLink(*g_code,
		                     ctx->method->getReference(),
	                             ctx->method->getOutputFileBase(),
	                             ctx->method->anchor(),
				     pName->data());
	      if (g_currentMemberDef)
	      {
	        addDocCrossReference(g_currentMemberDef,ctx->method);
	      }
	    }
	    else
	    {
   	      codifyLines(pName->data());
	    }
	  }
	  else
	  {
	    //printf("Invalid name: id=%d\n",refId);
	  }
	}
	else if (nc=='o') // reference to potential object name
	{
          nc=*p++;
	  QCString refIdStr;
	  while (nc!=0 && isdigit(nc)) { refIdStr+=nc; nc=*p++; }
	  p--;
	  int refId=refIdStr.toInt();
	  QCString *pObject = g_objectDict.find(refId);
	  if (pObject)
	  {
	    if (*pObject=="self")
	    {
	      if (g_currentDefinition && 
		  g_currentDefinition->definitionType()==Definition::TypeClass)
	      {
	        ctx->objectType = (ClassDef *)g_currentDefinition;
	        if (ctx->objectType->categoryOf()) 
	        {
	          ctx->objectType = ctx->objectType->categoryOf();
	        }
	        if (ctx->objectType)
	        {
	          ctx->method = ctx->objectType->getMemberByName(ctx->methodName);
	        }
	      }
 	      startFontClass("keyword");
              codifyLines(pObject->data());
	      endFontClass();
	    }
	    else if (*pObject=="super")
	    {
	      if (g_currentDefinition &&
		  g_currentDefinition->definitionType()==Definition::TypeClass)
	      {
		ClassDef *cd = (ClassDef *)g_currentDefinition;
		if (cd->categoryOf()) 
		{
		  cd = cd->categoryOf();
		}
		BaseClassList *bcd = cd->baseClasses();
		if (bcd) // get direct base class (there should be only one)
		{
		  BaseClassListIterator bli(*bcd);
		  BaseClassDef *bclass;
		  for (bli.toFirst();(bclass=bli.current());++bli)
		  {
		    if (bclass->classDef->compoundType()!=ClassDef::Protocol)
		    {
		      ctx->objectType = bclass->classDef;
		      if (ctx->objectType)
		      {
			ctx->method = ctx->objectType->getMemberByName(ctx->methodName);
		      }
		    }
		  }
		}
	      }
 	      startFontClass("keyword");
              codifyLines(pObject->data());
	      endFontClass();
	    }
	    else if (ctx->objectVar && ctx->objectVar->isLinkable()) // object is class variable
	    {
	      writeMultiLineCodeLink(*g_code,
		    ctx->objectVar->getReference(),
		    ctx->objectVar->getOutputFileBase(),
		    ctx->objectVar->anchor(),
		    pObject->data());
	      if (g_currentMemberDef)
	      {
	        addDocCrossReference(g_currentMemberDef,ctx->objectVar);
	      }
	    }
	    else if (ctx->objectType && 
		     ctx->objectType!=VariableContext::dummyContext && 
		     ctx->objectType->isLinkable()
		    ) // object is class name
	    {
	      ClassDef *cd = ctx->objectType;
	      writeMultiLineCodeLink(*g_code,
		    cd->getReference(),
		    cd->getOutputFileBase(),
		    0,
		    pObject->data());
	    }
	    else // object still needs to be resolved
	    {
	      ClassDef *cd = getResolvedClass(g_currentDefinition, 
		  g_sourceFileDef, *pObject);
	      if (cd && cd->isLinkable())
	      {
		if (ctx->objectType==0) ctx->objectType=cd;
	   	writeMultiLineCodeLink(*g_code,
		    cd->getReference(),
		    cd->getOutputFileBase(),
		    0,
		    pObject->data());
	      }
	      else
	      {
		codifyLines(pObject->data());
	      }
	    }
	  }
	  else
	  {
	    //printf("Invalid object: id=%d\n",refId);
	  }
	}
	else if (nc=='c') // reference to nested call
	{
          nc=*p++;
	  QCString refIdStr;
	  while (nc!=0 && isdigit(nc)) { refIdStr+=nc; nc=*p++; }
	  p--;
	  int refId=refIdStr.toInt();
	  ObjCCallCtx *ictx = g_contextDict.find(refId);
	  if (ictx) // recurse into nested call
	  {
	    writeObjCMethodCall(ictx);
	    if (ictx->method) // link to nested call successfully
	    {
	      // get the ClassDef representing the method's return type
	      if (QCString(ictx->method->typeString())=="id")
	      {
		// see if the method name is unique, if so we link to it
		MemberName *mn=Doxygen::memberNameSDict.find(ctx->methodName);
		//printf("mn->count=%d ictx->method=%s ctx->methodName=%s\n",
		//    mn==0?-1:(int)mn->count(),
		//    ictx->method->name().data(),
		//    ctx->methodName.data());
		if (mn && mn->count()==1) // member name unique
		{
		  ctx->method = mn->getFirst();
		}
	      } 
	      else
	      {
		ctx->objectType = stripClassName(ictx->method->typeString());
		if (ctx->objectType)
		{
		  ctx->method = ctx->objectType->getMemberByName(ctx->methodName);
		}
	      }
	      //printf("  ***** method=%s -> object=%p\n",ictx->method->name().data(),ctx->objectType);
	    }
	  }
	  else
	  {
	    //printf("Invalid context: id=%d\n",refId);
	  }
	}
	else // illegal marker
	{
	  ASSERT(!"invalid escape sequence");
	}
      }
    }
    else // normal non-marker character
    {
      char s[2];
      s[0]=c;s[1]=0;
      codifyLines(s);
    }
  }  
  //printf("%s %s]\n",ctx->objectTypeOrName.data(),ctx->methodName.data());
  //printf("}=(type='%s',name='%s')",
  //    ctx->objectTypeOrName.data(),
  //    ctx->methodName.data());
}

// Replaces an Objective-C method name fragment s by a marker of the form
// $n12, the number (12) can later be used as a key for obtaining the name 
// fragment, from g_nameDict
static QCString escapeName(const char *s)
{
  QCString result;
  result.sprintf("$n%d",g_currentNameId);
  g_nameDict.insert(g_currentNameId,new QCString(s));
  g_currentNameId++;
  return result;
}

static QCString escapeObject(const char *s)
{
  QCString result;
  result.sprintf("$o%d",g_currentObjId);
  g_objectDict.insert(g_currentObjId,new QCString(s));
  g_currentObjId++;
  return result;
}

/* -----------------------------------------------------------------
 */
#undef	YY_INPUT
#define	YY_INPUT(buf,result,max_size) result=yyread(buf,max_size);

static int yyread(char *buf,int max_size)
{
    int c=0;
    while( c < max_size && g_inputString[g_inputPosition] )
    {
	*buf = g_inputString[g_inputPosition++] ;
	c++; buf++;
    }
    return c;
}

#define SkipString 1

#define SkipVerbString 2

#define SkipCPP 3

#define SkipComment 4

#define SkipCxxComment 5

#define RemoveSpecialCComment 6

#define StripSpecialCComment 7

#define Body 8

#define FuncCall 9

#define MemberCall 10

#define MemberCall2 11

#define SkipInits 12

#define ClassName 13

#define PackageName 14

#define ClassVar 15

#define Bases 16

#define SkipSharp 17

#define ReadInclude 18

#define TemplDecl 19

#define CallEnd 20

#define ObjCMethod 21

#define ObjCParams 22

#define ObjCParamType 23

#define ObjCCall 24

#define ObjCMName 25

#define ObjCSkipStr 26

#define OldStyleArgs 27


/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap YY_PROTO(( void ));
#else
extern int yywrap YY_PROTO(( void ));
#endif
#endif

#ifndef YY_NO_UNPUT
static void yyunput YY_PROTO(( int c, char *buf_ptr ));
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen YY_PROTO(( yyconst char * ));
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput YY_PROTO(( void ));
#else
static int input YY_PROTO(( void ));
#endif
#endif

#if YY_STACK_USED
static int yy_start_stack_ptr = 0;
static int yy_start_stack_depth = 0;
static int *yy_start_stack = 0;
#ifndef YY_NO_PUSH_STATE
static void yy_push_state YY_PROTO(( int new_state ));
#endif
#ifndef YY_NO_POP_STATE
static void yy_pop_state YY_PROTO(( void ));
#endif
#ifndef YY_NO_TOP_STATE
static int yy_top_state YY_PROTO(( void ));
#endif

#else
#define YY_NO_PUSH_STATE 1
#define YY_NO_POP_STATE 1
#define YY_NO_TOP_STATE 1
#endif

#ifdef YY_MALLOC_DECL
YY_MALLOC_DECL
#else
#if __STDC__
#ifndef __cplusplus
#include <stdlib.h>
#endif
#else
/* Just try to get by without declaring the routines.  This will fail
 * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
 * or sizeof(void*) != sizeof(int).
 */
#endif
#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */

#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( yy_current_buffer->yy_is_interactive ) \
		{ \
		int c = '*', n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
		  && ferror( yyin ) ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL int yylex YY_PROTO(( void ))
#endif

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	if ( yyleng > 0 ) \
		yy_current_buffer->yy_at_bol = \
				(yytext[yyleng - 1] == '\n'); \
	YY_USER_ACTION

YY_DECL
	{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;

#line 1501 "code.l"



	if ( yy_init )
		{
		yy_init = 0;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yy_start )
			yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! yy_current_buffer )
			yy_current_buffer =
				yy_create_buffer( yyin, YY_BUF_SIZE );

		yy_load_buffer_state();
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
		yy_current_state += YY_AT_BOL();
		yy_state_ptr = yy_state_buf;
		*yy_state_ptr++ = yy_current_state;
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 2182 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			*yy_state_ptr++ = yy_current_state;
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 22026 );

yy_find_action:
		yy_current_state = *--yy_state_ptr;
		yy_lp = yy_accept[yy_current_state];
find_rule: /* we branch to this label when backing up */
		for ( ; ; ) /* until we find what rule we matched */
			{
			if ( yy_lp && yy_lp < yy_accept[yy_current_state + 1] )
				{
				yy_act = yy_acclist[yy_lp];
				if ( yy_act & YY_TRAILING_HEAD_MASK ||
				     yy_looking_for_trail_begin )
					{
					if ( yy_act == yy_looking_for_trail_begin )
						{
						yy_looking_for_trail_begin = 0;
						yy_act &= ~YY_TRAILING_HEAD_MASK;
						break;
						}
					}
				else if ( yy_act & YY_TRAILING_MASK )
					{
					yy_looking_for_trail_begin = yy_act & ~YY_TRAILING_MASK;
					yy_looking_for_trail_begin |= YY_TRAILING_HEAD_MASK;
					yy_full_match = yy_cp;
					yy_full_state = yy_state_ptr;
					yy_full_lp = yy_lp;
					}
				else
					{
					yy_full_match = yy_cp;
					yy_full_state = yy_state_ptr;
					yy_full_lp = yy_lp;
					break;
					}
				++yy_lp;
				goto find_rule;
				}
			--yy_cp;
			yy_current_state = *--yy_state_ptr;
			yy_lp = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;


do_action:	/* This label is used only to access EOF actions. */


		switch ( yy_act )
	{ /* beginning of action switch */
case 1:
YY_RULE_SETUP
#line 1503 "code.l"

	YY_BREAK
case 2:
YY_RULE_SETUP
#line 1504 "code.l"
{
  					  startFontClass("preprocessor");
					  g_code->codify(yytext);
  					  BEGIN( ReadInclude ); 
					}
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 1509 "code.l"
{ 
                                          g_insideObjC=TRUE;
  					  startFontClass("keyword");
  					  codifyLines(yytext);
					  endFontClass();
  					  if (!g_insideTemplate) 
					    BEGIN( ClassName ); 
					}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 1517 "code.l"
{ 
  					  startFontClass("keyword");
  					  codifyLines(yytext);
					  endFontClass();
  					  if (!g_insideTemplate) 
					    BEGIN( ClassName ); 
					}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 1524 "code.l"
{ 
  					  startFontClass("keyword");
  					  codifyLines(yytext);
					  endFontClass();
					  BEGIN( PackageName ); 
					}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 1530 "code.l"
{
  					  if (!g_insideObjC) REJECT;
  					  codifyLines(yytext);
					  BEGIN(Body);
  					}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 1535 "code.l"
{
					  if (!g_insideObjC || g_insideBody)
					  { 
  					    g_code->codify(yytext);
					  }
					  else // Start of Objective-C method
					  {
					    //printf("Method!\n");
  					    g_code->codify(yytext);
					    BEGIN(ObjCMethod);
					  }
  					}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 1547 "code.l"
{
  					  g_code->codify(yytext);
					  BEGIN(ObjCParams);
  					}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 1551 "code.l"
{
  					  g_code->codify(yytext);
  					  BEGIN(ObjCParamType);
					}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 1555 "code.l"
{
  					  g_code->codify(yytext);
					  if (*yytext=='{')
					  {
					    g_curlyCount++;
					    g_inClass=TRUE;
  					    if (g_searchingForBody)
					    {
					      g_searchingForBody=FALSE;
					      g_insideBody=TRUE;
					    }
					    if (g_insideBody) g_bodyCurlyCount++;
					    if (!g_curClassName.isEmpty()) // valid class name
					    {
					      pushScope(g_curClassName);
  					      g_scopeStack.push(SCOPEBLOCK);
					    }
					  }
                                          g_type.resize(0);
                                          g_name.resize(0);
					  BEGIN(Body);
  					}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 1577 "code.l"
{
  					  g_code->codify(yytext);
  					}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 1580 "code.l"
{
  					  startFontClass("keywordtype");
					  g_code->codify(yytext);
					  endFontClass();
  					  g_parmType=yytext;
  					}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 1586 "code.l"
{
  					  g_code->codify(yytext);
  					  g_parmType=yytext;
  					}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 1590 "code.l"
{
  					  g_code->codify(yytext);
  					  BEGIN(ObjCParams);
  					}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 1594 "code.l"
{
  					  g_code->codify(yytext);
  					  g_parmName=yytext;
					  g_theVarContext.addVariable(g_parmType,g_parmName);
					  g_parmType.resize(0);g_parmName.resize(0);
  					}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 1600 "code.l"
{
  					  g_code->codify(yytext);
  					}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 1603 "code.l"
{
  					  codifyLines(yytext);
  					}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 1606 "code.l"
{
					  //FileInfo *f;
					  bool ambig;
					  bool found=FALSE;
                                          FileDef *fd=0;
					  //printf("looking for include %s\n",yytext);
					  if ((fd=findFileDef(Doxygen::inputNameDict,yytext,ambig)) &&
					      fd->isLinkable())
					  {
					    if (ambig) // multiple input files match the name
					    {
					      //printf("===== yes %s is ambigious\n",yytext);
					      QCString name = convertToQCString(QDir::cleanDirPath(yytext));
					      if (!name.isEmpty() && g_sourceFileDef)
					      {
					        FileName *fn = Doxygen::inputNameDict->find(name);
						if (fn)
						{
						  FileNameIterator fni(*fn);
						  // for each include name
						  for (fni.toFirst();!found && (fd=fni.current());++fni)
						  {
						    // see if this source file actually includes the file
						    found = g_sourceFileDef->isIncluded(fd->absFilePath());
						    //printf("      include file %s found=%d\n",fd->absFilePath().data(),found);
						  }
						}
					      }
					    }
					    else // not ambiguous
					    {
					      found = TRUE;
					    }
					  }
					  if (found)
					  {
					    //printf("      include file %s found=%d\n",fd->absFilePath().data(),found);
					    g_code->writeCodeLink(fd->getReference(),fd->getOutputFileBase(),0,yytext);
					  }
					  else
					  {
					    g_code->codify(yytext);
					  }
					  char c=yyinput();
					  QCString text;
					  text+=c;
					  g_code->codify(text);
					  endFontClass();
					  BEGIN( Body );
  					}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 1656 "code.l"
{ 
  					  startFontClass("preprocessor");
  					  g_code->codify(yytext);
  					  BEGIN( SkipCPP ) ; 
					}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 1661 "code.l"
{ 
  					  g_code->codify(yytext);
					}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 1664 "code.l"
{ 
  					  codifyLines(yytext);
					}
	YY_BREAK
case 22:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp = yy_bp + 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1667 "code.l"
{ 
  					  codifyLines(yytext);
					  endFontClass();
					  BEGIN( Body ) ;
					}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 1672 "code.l"
{ 
  					  g_code->codify(yytext);
					}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 1675 "code.l"
{ 
                                          g_theVarContext.pushScope();

  					  g_scopeStack.push(INNERBLOCK);

  					  if (g_searchingForBody)
					  {
					    g_searchingForBody=FALSE;
					    g_insideBody=TRUE;
					  }
  					  g_code->codify(yytext);
  					  g_curlyCount++;
					  if (g_insideBody) 
					  {
					    g_bodyCurlyCount++;
					  }
  					  g_type.resize(0); 
					  g_name.resize(0);
					}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 1694 "code.l"
{ 
                                          g_theVarContext.popScope();

					  int *scope = g_scopeStack.pop();
  					  if (scope==SCOPEBLOCK || scope==CLASSBLOCK) 
					  {
					    popScope();
					  }

  					  g_code->codify(yytext);

  					  g_inClass=FALSE; 

					  if (--g_bodyCurlyCount<=0)
					  {
					    g_insideBody=FALSE;
					    g_currentMemberDef=0;
					    if (g_currentDefinition) 
					      g_currentDefinition=g_currentDefinition->getOuterScope();
					  }
					  BEGIN(Body);
					}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 1716 "code.l"
{ 
  					  //printf("End of objc scope fd=%s\n",g_sourceFileDef->name().data());
                                          if (g_sourceFileDef)
					  {
					    FileDef *fd=g_sourceFileDef;
                                            g_insideObjC = fd->name().lower().right(2)==".m" || 
                                                           fd->name().lower().right(3)==".mm"; 
					    //printf("insideObjC=%d\n",g_insideObjC);
					  }
					  else
					  {
					    g_insideObjC = FALSE;
					  }
					  if (g_insideBody)
					  {
                                            g_theVarContext.popScope();

					    int *scope = g_scopeStack.pop();
  					    if (scope==SCOPEBLOCK || scope==CLASSBLOCK) 
					    {
					      popScope();
					    }
					    g_insideBody=FALSE;
					  }

					  startFontClass("keyword");
  					  g_code->codify(yytext);
					  endFontClass();

  					  g_inClass=FALSE; 

					  g_currentMemberDef=0;
					  if (g_currentDefinition) 
					    g_currentDefinition=g_currentDefinition->getOuterScope();
					  BEGIN(Body);
					}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 1752 "code.l"
{ 
  					  g_code->codify(yytext);
					  g_searchingForBody=FALSE; 
  					  BEGIN( Body ); 
					}
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 1757 "code.l"
{
					  addType();
					  g_code->codify(yytext);
					  BEGIN( Body ); // variable of type struct *
					}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 1762 "code.l"
{
                                          g_curClassName=yytext;
					  addType();
					  generateClassOrGlobalLink(*g_code,yytext);
					  BEGIN( ClassVar );
					}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 1768 "code.l"
{
                                          g_curClassName=yytext;
					  g_curClassName=substitute(g_curClassName,".","::");
					  //printf("found package: %s\n",g_curClassName.data());
					  addType();
					  codifyLines(yytext);
  					}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 1775 "code.l"
{
					  unput(*yytext);
					  BEGIN( Body );
  					}
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 1779 "code.l"
{ // Java
  					  startFontClass("keyword");
  					  codifyLines(yytext);
					  endFontClass();
					  g_curClassBases.clear();
  					  BEGIN( Bases ); 
					}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 1786 "code.l"
{
  					  g_type = g_curClassName.copy();
					  g_name = yytext;
					  g_theVarContext.addVariable(g_type,g_name);
					  generateClassOrGlobalLink(*g_code,yytext);
  					}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 1792 "code.l"
{
  					  codifyLines(yytext);
					  g_curClassBases.clear();
  					  BEGIN( Bases ); 
					}
	YY_BREAK
case 35:
#line 1798 "code.l"
case 36:
YY_RULE_SETUP
#line 1798 "code.l"
{
                                          g_theVarContext.pushScope();
  					  g_code->codify(yytext);
					  g_curlyCount++;
					  g_inClass=TRUE;
  					  if (g_searchingForBody)
					  {
					    g_searchingForBody=FALSE;
					    g_insideBody=TRUE;
					  }
					  if (g_insideBody) g_bodyCurlyCount++;
					  if (!g_curClassName.isEmpty()) // valid class name
					  {
  					    g_scopeStack.push(CLASSBLOCK);
					    pushScope(g_curClassName);
					    //printf("***** g_curClassName=%s\n",g_curClassName.data());
					    if (getResolvedClass(g_currentDefinition,g_sourceFileDef,g_curClassName)==0)
					    {
					      ClassDef *ncd=new ClassDef("<code>",1,
				 		  g_curClassName,ClassDef::Class,0,0,FALSE);
					      g_codeClassSDict.append(g_curClassName,ncd);
					      // insert base classes.
					      char *s=g_curClassBases.first();
					      while (s)
					      {
						ClassDef *bcd;
						bcd=g_codeClassSDict[s];
						if (bcd==0) bcd=getResolvedClass(g_currentDefinition,g_sourceFileDef,s);
						if (bcd && bcd!=ncd)
						{
						  ncd->insertBaseClass(bcd,s,Public,Normal);
						}
						s=g_curClassBases.next();
					      }
					    }
					    //printf("g_codeClassList.count()=%d\n",g_codeClassList.count());
					  }
					  else // not a class name -> assume inner block
					  {
  					    g_scopeStack.push(INNERBLOCK);
					  }
					  g_curClassName.resize(0);
					  g_curClassBases.clear();
					  BEGIN( Body );
 					}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 1843 "code.l"
{ 
  					  startFontClass("keyword");
  					  g_code->codify(yytext);
					  endFontClass();
					}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 1848 "code.l"
{ 
					  //printf("%s:addBase(%s)\n",g_ccd.name.data(),yytext);
  					  g_curClassBases.inSort(yytext); 
					  generateClassOrGlobalLink(*g_code,yytext);
					}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 1853 "code.l"
{ 
  					  g_code->codify(yytext);
					  if (!g_insideObjC)
					  {
  					    g_sharpCount=1;
					    BEGIN ( SkipSharp );
					  }
					  else
					  {
					    g_insideProtocolList=TRUE;
					  }
					}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 1865 "code.l"
{
  					  g_code->codify(yytext);
					  g_insideProtocolList=FALSE;
  					}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 1869 "code.l"
{
  					  g_code->codify(yytext);
  					  ++g_sharpCount; 
					}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 1873 "code.l"
{ 
  					  g_code->codify(yytext);
  					  if (--g_sharpCount<=0)
					  BEGIN ( Bases );
					}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 1878 "code.l"
{
                                          g_code->codify(yytext);
                                          g_sharpCount=1;
                                          BEGIN ( SkipSharp );
                                        }
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 1883 "code.l"
{
                                          g_code->codify(yytext);
                                          ++g_sharpCount;
                                        }
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 1887 "code.l"
{
                                          g_code->codify(yytext);
                                          if (--g_sharpCount<=0)
                                            BEGIN ( Bases );
                                        }
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 1894 "code.l"
{ 
  					  g_code->codify(yytext);
					}
	YY_BREAK
case 47:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1899 "code.l"
{
  					  addType();
					  generateFunctionLink(*g_code,yytext);
  					  g_bracketCount=0;
					  g_args.resize(0);
  					  g_name+=yytext; 
  					  BEGIN( FuncCall );
					}
	YY_BREAK
case 48:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1907 "code.l"
{
  					  addType();
					  generateFunctionLink(*g_code,yytext);
  					  g_bracketCount=0;
					  g_args.resize(0);
  					  g_name+=yytext; 
  					  BEGIN( FuncCall );
					}
	YY_BREAK
case 49:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1915 "code.l"
{
  					  startFontClass("keyword");
  					  codifyLines(yytext);
					  endFontClass();
					  g_insideTemplate=TRUE;
					  g_sharpCount=0;
					}
	YY_BREAK
case 50:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1922 "code.l"
{
  					  startFontClass("keyword");
  					  codifyLines(yytext);
					  endFontClass();
  					}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 1927 "code.l"
{
  					  startFontClass("keyword");
  					  codifyLines(yytext);
					  endFontClass();
  					}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 1932 "code.l"
{
  					  startFontClass("keyword");
  					  codifyLines(yytext);
					  endFontClass();
  				          g_name.resize(0);g_type.resize(0);
  					}
	YY_BREAK
case 53:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1938 "code.l"
{
  					  startFontClass("keywordflow");
  					  codifyLines(yytext);
					  endFontClass();
  					}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 1943 "code.l"
{
  					  startFontClass("keywordflow");
  					  codifyLines(yytext);
					  endFontClass();
  					}
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 1948 "code.l"
{
  					  startFontClass("keywordflow");
  					  codifyLines(yytext);
					  endFontClass();
  				          g_name.resize(0);g_type.resize(0);
  					}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 1954 "code.l"
{
  					  g_code->codify(yytext);
  				          g_name.resize(0);g_type.resize(0);
					  if (*yytext==')')
					  {
					    g_theCallContext.popScope();
					  }
  					}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 1962 "code.l"
{
  					  startFontClass("keywordtype");
					  g_code->codify(yytext);
					  endFontClass();
					  addType();
  					  g_name+=yytext; 
  					}
	YY_BREAK
case 58:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1969 "code.l"
{ // template<...>
  					  startFontClass("keyword");
					  g_code->codify(yytext);
					  endFontClass();
					  g_sharpCount=0;
					  BEGIN(TemplDecl);
                                        }
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 1976 "code.l"
{
  					  startFontClass("keyword");
  					  codifyLines(yytext);
					  endFontClass();
  					}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 1981 "code.l"
{
                                          g_code->codify(yytext);
                                          g_sharpCount++;
  					}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 1985 "code.l"
{
                                          g_code->codify(yytext);
                                          g_sharpCount--;
					  if (g_sharpCount<=0)
					  {
					    BEGIN(Body);
					  }
  					}
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 1993 "code.l"
{ // A<T> *pt;
					  generateClassOrGlobalLink(*g_code,yytext);
					  addType();
  					  g_name+=yytext; 
					}
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 1998 "code.l"
{ // p->func()
					  generateClassOrGlobalLink(*g_code,yytext);
					  addType();
  					  g_name+=yytext; 
					}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 2003 "code.l"
{  // (*p)->func() but not "if (p) ..."
					  g_code->codify(yytext);
					  int s=0;while (s<yyleng && !isId(yytext[s])) s++;
                                          int e=yyleng-1;while (e>=0 && !isId(yytext[e])) e--;
					  QCString varname = ((QCString)yytext).mid(s,e-s+1); 
					  addType();
  					  g_name=varname; 
					}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 2011 "code.l"
{ // a() or c::a() or t<A,B>::a()
  					  addType();
					  generateFunctionLink(*g_code,yytext);
					  //g_theVarContext.addVariable(g_type,yytext);
  					  g_bracketCount=0;
					  g_args.resize(0);
  					  g_name+=yytext; 
  					  BEGIN( FuncCall );
					}
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 2020 "code.l"
{
					  startFontClass("stringliteral");
  					  g_code->codify(yytext);
  					  g_lastStringContext=YY_START;
  					  BEGIN( SkipString );
  					}
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 2026 "code.l"
{ 
  					  g_code->codify(yytext);
					}
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 2029 "code.l"
{
  					  g_code->codify(yytext);
  					}
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 2032 "code.l"
{
  					  g_code->codify(yytext);
					  endFontClass();
  					  BEGIN( g_lastStringContext );
  					}
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 2037 "code.l"
{
  					  g_code->codify(yytext);
					}
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 2040 "code.l"
{
  					  g_code->codify(yytext);
					}
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 2043 "code.l"
{ // escaped quote
  					  g_code->codify(yytext);
					}
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 2046 "code.l"
{ // end of string
  					  g_code->codify(yytext);
					  endFontClass();
					  BEGIN( g_lastVerbStringContext );
					}
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 2051 "code.l"
{
  					  g_code->codify(yytext);
  					}
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 2054 "code.l"
{
  					  g_code->codify(yytext);
  					}
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 2057 "code.l"
{
  					  g_code->codify(yytext);
  					  g_name.resize(0);g_type.resize(0);
  					}
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 2061 "code.l"
{
  					  if (g_insideTemplate)
					  {
					    g_sharpCount++;
					  }
  					  g_code->codify(yytext);
  					}
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 2068 "code.l"
{
  					  if (g_insideTemplate)
					  {
					    if (--g_sharpCount<=0)
					    {
					      g_insideTemplate=FALSE;
					    }
					  }
  					  g_code->codify(yytext);
  					}
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 2078 "code.l"
{
  					  startFontClass("charliteral"); 
  					  g_code->codify(yytext);
					  endFontClass();
  					}
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 2083 "code.l"
{ g_code->codify(yytext); }
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 2084 "code.l"
{ 
  					  g_code->codify(yytext);
					  g_memCallContext = YY_START;
  					  BEGIN( MemberCall ); 
					}
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 2089 "code.l"
{
					  if (g_theCallContext.getClass())
					  {
					    if (!generateClassMemberLink(*g_code,g_theCallContext.getClass(),yytext))
					    {
					      g_code->codify(yytext);
					      addToSearchIndex(yytext);
					    }
  					    g_name.resize(0);
					  }
					  else
					  {
  					    g_code->codify(yytext);
					    addToSearchIndex(yytext);
  					    g_name.resize(0);
					  }
					  g_type.resize(0);
					  g_bracketCount=0;
					  if (g_memCallContext==Body)
					  {
					    BEGIN(FuncCall);
					  }
					  else
					  {
					    BEGIN(g_memCallContext);
					  }
  					}
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 2116 "code.l"
{
					  if (g_theCallContext.getClass())
					  {
					    if (!generateClassMemberLink(*g_code,g_theCallContext.getClass(),yytext))
					    {
					      g_code->codify(yytext);
					      addToSearchIndex(yytext);
					    }
  					    g_name.resize(0);
					  }
					  else
					  {
  					    g_code->codify(yytext);
					    addToSearchIndex(yytext);
  					    g_name.resize(0);
					  }
					  g_type.resize(0);
  					  BEGIN(g_memCallContext);
  					}
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 2135 "code.l"
{ 
  					  g_code->codify(yytext);
    					  g_type.resize(0);
					  g_name.resize(0);
					  BEGIN(g_memCallContext); 
					}
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 2141 "code.l"
{
					  if (g_insideObjC && *yytext=='[')
					  {
					    //printf("Found start of ObjC call!\n");
					    // start of a method call
					    g_contextDict.setAutoDelete(TRUE);
					    g_nameDict.setAutoDelete(TRUE);
					    g_objectDict.setAutoDelete(TRUE);
					    g_contextDict.clear();
					    g_nameDict.clear();
					    g_objectDict.clear();
					    g_currentCtxId  = 0;
					    g_currentNameId  = 0;
					    g_currentObjId  = 0;
					    g_currentCtx = 0;
					    g_braceCount = 0;
					    unput('[');
					    BEGIN(ObjCCall);
					  }
					  else
					  {
					    g_code->codify(yytext);
					    g_saveName = g_name.copy();
					    g_saveType = g_type.copy();
					    if (!g_type.isEmpty()) 
					    {
					      if (g_scopeStack.top()!=CLASSBLOCK)
					      {
					        g_theVarContext.addVariable(g_type,g_name);
					      }
					      g_name.resize(0);
					    }
					    if (*yytext==';') 
					    {
					      g_type.resize(0);
					      g_name.resize(0);
					    }
					    else if (*yytext=='[')
					    {
					      g_theCallContext.pushScope();
					    }
					    g_args.resize(0);
					  }
  					}
	YY_BREAK
/*
<ObjCMemberCall>{ID}			{
  					  if (strcmp(yytext,"self")==0 || strcmp(yytext,"super")==0)
					  {
					    // TODO: get proper base class for "super"
					    g_theCallContext.setClass(getClass(g_curClassName));
					    startFontClass("keyword");
					    g_code->codify(yytext); 
					    endFontClass();
					  }
					  else
					  {
					    generateClassOrGlobalLink(*g_code,yytext);
					  }
					  g_name.resize(0);
					  BEGIN(ObjCMemberCall2);
  					}
<ObjCMemberCall>"["			{
					    g_code->codify(yytext);
					    g_theCallContext.pushScope();
  					}
<ObjCMemberCall2>{ID}":"?		{
  					  g_name+=yytext;
					  if (g_theCallContext.getClass())
					  {
					    //printf("Calling method %s\n",g_name.data());
					    if (!generateClassMemberLink(*g_code,g_theCallContext.getClass(),g_name))
					    {
  					      g_code->codify(yytext);
					      addToSearchIndex(g_name);
					    }
					  }
					  else
					  {
  					    g_code->codify(yytext);
					    addToSearchIndex(g_name);
					  }
  					  g_name.resize(0);
					  BEGIN(ObjCMemberCall3);
  					}
<ObjCMemberCall2,ObjCMemberCall3>"]"	{
					  g_theCallContext.popScope();
  					  g_code->codify(yytext);
					  BEGIN(Body);
  					}
  */
case 86:
YY_RULE_SETUP
#line 2231 "code.l"
{ 
                                   saveObjCContext();
			           g_currentCtx->format+=*yytext;
			           BEGIN(ObjCCall);
		                   //printf("open\n");
                                 }
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 2237 "code.l"
{ 
			            g_currentCtx->format+=*yytext;
                                    restoreObjCContext();
			            BEGIN(ObjCMName);
		             	    if (g_currentCtx==0)
				    {
				      // end of call
				      writeObjCMethodCall(g_contextDict.find(0));
				      BEGIN(Body);
				    }
			            //printf("close\n");
                                  }
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 2249 "code.l"
{
                                    g_currentCtx->format+=escapeObject(yytext);
			            if (g_braceCount==0)
			            {
			              g_currentCtx->objectTypeOrName=yytext;
                                      //printf("new type=%s\n",g_currentCtx->objectTypeOrName.data());
			              BEGIN(ObjCMName);
			            }
  		                  }
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 2258 "code.l"
{ 
                                    if (g_braceCount==0 && 
					g_currentCtx->methodName.isEmpty())
                                    {
			              g_currentCtx->methodName=yytext; 
                                      g_currentCtx->format+=escapeName(yytext);
			            }
				    else
				    {
                                      g_currentCtx->format+=yytext;
				    }
                                  }
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 2270 "code.l"
{ 
                                     if (g_braceCount==0)
                                     {
			               g_currentCtx->methodName+=yytext;
                                       g_currentCtx->methodName+=":";
			             }
                                     g_currentCtx->format+=escapeName(yytext);
                                   }
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 2278 "code.l"
{ g_currentCtx->format+=yytext; }
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 2279 "code.l"
{ g_currentCtx->format+=yytext; }
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 2280 "code.l"
{ g_currentCtx->format+=yytext; 
                                      BEGIN(g_lastStringContext); 
                                   }
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 2283 "code.l"
{ g_currentCtx->format+=yytext; }
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 2284 "code.l"
{ g_currentCtx->format+=yytext; 
                                      g_lastStringContext=YY_START;
                                      BEGIN(ObjCSkipStr); 
                                   }
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 2288 "code.l"
{ g_currentCtx->format+="$$"; }
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 2289 "code.l"
{ g_currentCtx->format+=*yytext; g_braceCount++; }
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 2290 "code.l"
{ g_currentCtx->format+=*yytext; g_braceCount--; }
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 2291 "code.l"
{ g_currentCtx->format+=*yytext; }
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 2292 "code.l"
{ g_currentCtx->format+=*yytext; }
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 2294 "code.l"
{
					  g_theCallContext.popScope();
  					  g_code->codify(yytext);
					  // TODO: nested arrays like: a[b[0]->func()]->func()
					  g_name = g_saveName.copy();
					  g_type = g_saveType.copy();
					}
	YY_BREAK
case 102:
YY_RULE_SETUP
#line 2301 "code.l"
{
					  g_code->codify(yytext);
					}
	YY_BREAK
case 103:
YY_RULE_SETUP
#line 2304 "code.l"
{
					  g_code->codify(yytext);
					}
	YY_BREAK
case 104:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2307 "code.l"
{
					  addParmType();
					  g_parmName=yytext; 
  					  startFontClass("keyword");
  					  g_code->codify(yytext);
					  endFontClass();
					}
	YY_BREAK
case 105:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2314 "code.l"
{
					  addParmType();
					  g_parmName=yytext; 
  					  startFontClass("keywordtype");
  					  g_code->codify(yytext);
					  endFontClass();
					}
	YY_BREAK
case 106:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2321 "code.l"
{
					  addParmType();
					  g_parmName=yytext; 
  					  startFontClass("keywordflow");
  					  g_code->codify(yytext);
					  endFontClass();
					}
	YY_BREAK
case 107:
YY_RULE_SETUP
#line 2328 "code.l"
{
					  addParmType();
					  g_parmName=yytext; 
					  generateClassOrGlobalLink(*g_code,yytext,!g_insideBody);
					}
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 2333 "code.l"
{
  					  g_code->codify(yytext);
					  g_theVarContext.addVariable(g_parmType,g_parmName);
					  g_parmType.resize(0);g_parmName.resize(0);
					}
	YY_BREAK
case 109:
YY_RULE_SETUP
#line 2338 "code.l"
{
  					  g_code->codify(yytext);
  					  g_bracketCount++; 
					  g_theCallContext.pushScope();
					  if (YY_START==FuncCall && !g_insideBody)
					  {
					    g_theVarContext.pushScope();
					  }
					}
	YY_BREAK
case 110:
YY_RULE_SETUP
#line 2347 "code.l"
{ 
					  g_theVarContext.addVariable(g_parmType,g_parmName);
					  g_theCallContext.popScope();
  					  g_code->codify(yytext);
  					  if (--g_bracketCount<=0) 
					  {
					    BEGIN( CallEnd ); 
					  }
					}
	YY_BREAK
case 111:
YY_RULE_SETUP
#line 2356 "code.l"
{ codifyLines(yytext); }
	YY_BREAK
/*
<MemberCall2,FuncCall>")"[ \t\n]*[;:]	{
  */
case 112:
YY_RULE_SETUP
#line 2360 "code.l"
{
  					  codifyLines(yytext);
  					  g_bracketCount=0;
					  if (*yytext==';') g_searchingForBody=FALSE; 
					  if (!g_inClass && !g_type.isEmpty())
					  {
					    g_theVarContext.addVariable(g_type,g_name);
					  }
					  g_parmType.resize(0);g_parmName.resize(0);
					  g_theCallContext.popScope();
					  g_theCallContext.setClass(0);
  					  if (*yytext==';' || g_insideBody)
					  {
					    if (!g_insideBody)
					    {
                                              g_theVarContext.popScope();
					    }
					    g_name.resize(0);g_type.resize(0);
					    BEGIN( Body );
					  }
					  else
					  {
					    g_bracketCount=0;
					    BEGIN( SkipInits );
					  }
  					}
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 2386 "code.l"
{
                                          if (g_insideBody)
					  {
					    g_theVarContext.pushScope();
					  }
					  g_theVarContext.addVariable(g_parmType,g_parmName);
					  g_theCallContext.popScope();
					  g_parmType.resize(0);g_parmName.resize(0);
					  int index = g_name.findRev("::");
					  if (index!=-1) 
					  {
					    ClassDef *cd=getResolvedClass(Doxygen::globalScope,g_sourceFileDef,g_name.left(index));
					    if (cd)
					    {
					      setClassScope(cd->name());
					    }
					    else
					    {
					      setClassScope(g_realScope);
					    }
  					    g_scopeStack.push(SCOPEBLOCK);
					  }
					  else
					  {
  					    g_scopeStack.push(INNERBLOCK);
					  }
					  yytext[yyleng-1]='\0';
					  QCString cv(yytext);
					  if (!cv.stripWhiteSpace().isEmpty())
					  {
					    startFontClass("keyword");
  					    codifyLines(yytext);
					    endFontClass();
					  }
					  else // just whitespace
					  {
  					    codifyLines(yytext);
					  }
					  g_code->codify("{");
  					  if (g_searchingForBody)
					  {
					    g_searchingForBody=FALSE;
					    g_insideBody=TRUE;
					  }
					  if (g_insideBody) g_bodyCurlyCount++;
					  g_curlyCount++;
  					  g_type.resize(0); g_name.resize(0);
					  BEGIN( Body );
  					}
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 2435 "code.l"
{
  					  if (g_insideBody || !g_parmType.isEmpty()) 
					  {
					    REJECT;
					  }
					  // could be K&R style definition
					  addParmType();
					  g_parmName=yytext; 
					  generateClassOrGlobalLink(*g_code,yytext,!g_insideBody);
					  BEGIN(OldStyleArgs);
  					}
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 2446 "code.l"
{
					  addParmType();
					  g_parmName=yytext; 
					  generateClassOrGlobalLink(*g_code,yytext,!g_insideBody);
  					}
	YY_BREAK
case 116:
YY_RULE_SETUP
#line 2451 "code.l"
{
  					  g_code->codify(yytext);
					  g_theVarContext.addVariable(g_parmType,g_parmName);
					  if (*yytext==';') g_parmType.resize(0);
					  g_parmName.resize(0);
  					}
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 2457 "code.l"
{
  					  unput(*yytext);
                                          if (!g_insideBody) 
					  {
					    g_theVarContext.popScope();
					  }
					  g_name.resize(0);g_args.resize(0);
					  g_parmType.resize(0);g_parmName.resize(0);
					  BEGIN( Body ); 
  					}
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 2467 "code.l"
{
  					  g_code->codify(yytext);
  					  g_type.resize(0); g_name.resize(0);
  					  BEGIN( Body );
  					}
	YY_BREAK
case 119:
YY_RULE_SETUP
#line 2472 "code.l"
{ 
  					  g_code->codify(yytext);
					  g_curlyCount++; 
  					  if (g_searchingForBody)
					  {
					    g_searchingForBody=FALSE;
					    g_insideBody=TRUE;
					  }
					  if (g_insideBody) g_bodyCurlyCount++;
					  if (g_name.find("::")!=-1) 
					  {
  					    g_scopeStack.push(SCOPEBLOCK);
					    setClassScope(g_realScope);
					  }
					  else
					  {
  					    g_scopeStack.push(INNERBLOCK);
					  }
  					  g_type.resize(0); g_name.resize(0);
					  BEGIN( Body ); 
					}
	YY_BREAK
case 120:
YY_RULE_SETUP
#line 2493 "code.l"
{
					  generateClassOrGlobalLink(*g_code,yytext);
  					}
	YY_BREAK
case 121:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2496 "code.l"
{
					  generateFunctionLink(*g_code,yytext);
					}
	YY_BREAK
case 122:
YY_RULE_SETUP
#line 2499 "code.l"
{ 
  					  //g_code->codify(yytext);
					  g_name=yytext; 
					  generateClassOrGlobalLink(*g_code,yytext);
					  BEGIN( MemberCall2 ); 
					}
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 2505 "code.l"
{ 
  					  g_code->codify(yytext);
					  int s=0;while (!isId(yytext[s])) s++;
                                          int e=yyleng-1;while (!isId(yytext[e])) e--;
					  g_name=((QCString)yytext).mid(s,e-s+1); 
					  BEGIN( MemberCall2 ); 
					}
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 2512 "code.l"
{ 
  					  if (!g_args.isEmpty())
					    generateMemberLink(*g_code,g_args,yytext);
					  else
					    generateClassOrGlobalLink(*g_code,yytext);
					  g_args.resize(0);
					  BEGIN( FuncCall );
					}
	YY_BREAK
case 125:
YY_RULE_SETUP
#line 2520 "code.l"
{
  					  //g_code->codify(yytext);
					  g_name=yytext; 
					  generateClassOrGlobalLink(*g_code,yytext);
					  BEGIN( MemberCall2 ); 
    					}
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 2526 "code.l"
{
  					  g_code->codify(yytext);
					  g_memCallContext = YY_START;
  					  BEGIN( MemberCall ); 
  					}
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 2531 "code.l"
{ 
  					  g_code->codify(yytext);
					  endFontClass();
  					  BEGIN( g_lastCContext ) ; 
					}
	YY_BREAK
case 128:
YY_RULE_SETUP
#line 2536 "code.l"
{
  					  g_code->codify(yytext);
  					}
	YY_BREAK
case 129:
YY_RULE_SETUP
#line 2539 "code.l"
{
  					  g_code->codify(yytext);
  					}
	YY_BREAK
case 130:
YY_RULE_SETUP
#line 2542 "code.l"
{ 
  					  g_code->codify(yytext);
					  endFontClass();
  					  BEGIN( g_lastCContext ) ; 
					}
	YY_BREAK
case 131:
YY_RULE_SETUP
#line 2547 "code.l"
{ 
  					  g_code->codify(yytext);
					}
	YY_BREAK
case 132:
YY_RULE_SETUP
#line 2550 "code.l"

	YY_BREAK
case 133:
YY_RULE_SETUP
#line 2551 "code.l"
{
  					  unput('\n');
					  endFontClass();
					  BEGIN( g_lastCContext ) ;
  					}
	YY_BREAK
case 134:
YY_RULE_SETUP
#line 2556 "code.l"
{
  					  g_code->codify(yytext);
  					}
	YY_BREAK
case 135:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2559 "code.l"
{
  					  g_yyLineNr+=QCString(yytext).contains('\n');
					}
	YY_BREAK
case 136:
YY_RULE_SETUP
#line 2562 "code.l"
{
  					  g_yyLineNr+=QCString(yytext).contains('\n');
                                          endCodeLine();
                                          if (g_yyLineNr<g_inputLines) 
                                          {
                                            startCodeLine();
                                          }
					  if (g_lastSpecialCContext==SkipCxxComment)
					  { // force end of C++ comment here
					    endFontClass();
					    BEGIN( g_lastCContext ) ;
					  }
					  else
					  {
  					    BEGIN(g_lastSpecialCContext);
					  }
  					}
	YY_BREAK
case 137:
YY_RULE_SETUP
#line 2579 "code.l"
{
  					  BEGIN(g_lastSpecialCContext);
  					}
	YY_BREAK
case 138:
YY_RULE_SETUP
#line 2582 "code.l"

	YY_BREAK
case 139:
YY_RULE_SETUP
#line 2583 "code.l"

	YY_BREAK
case 140:
YY_RULE_SETUP
#line 2584 "code.l"
{ g_yyLineNr++; }
	YY_BREAK
case 141:
YY_RULE_SETUP
#line 2585 "code.l"

	YY_BREAK
case 142:
YY_RULE_SETUP
#line 2586 "code.l"
{ // remove special one-line comment
  					  if (Config_getBool("STRIP_CODE_COMMENTS"))
					  {
					    g_yyLineNr+=((QCString)yytext).contains('\n');
					    endCodeLine();
					    if (g_yyLineNr<g_inputLines) 
					    {
					      startCodeLine();
					    }
					  }
					  else
					  {
					    startFontClass("comment");
					    codifyLines(yytext);
					    endFontClass();
					  }
					  if (YY_START==SkipCxxComment)
					  {
					    endFontClass();
					    BEGIN( g_lastCContext ) ;
					  }
  					}
	YY_BREAK
case 143:
YY_RULE_SETUP
#line 2608 "code.l"
{ // remove one-line group marker
  					  if (Config_getBool("STRIP_CODE_COMMENTS"))
					  {
					    g_yyLineNr+=2;
					    endCodeLine();
					    if (g_yyLineNr<g_inputLines) 
					    {
					      startCodeLine();
					    }
					  }
					  else
					  {
					    startFontClass("comment");
					    codifyLines(yytext);
					    endFontClass();
					  }
					  if (YY_START==SkipCxxComment)
					  {
					    endFontClass();
					    BEGIN( g_lastCContext ) ;
					  }
  					}
	YY_BREAK
case 144:
YY_RULE_SETUP
#line 2630 "code.l"
{ // remove one-line group marker
					  if (Config_getBool("STRIP_CODE_COMMENTS"))
  					  {
					    g_lastSpecialCContext = YY_START;
					    g_yyLineNr++;
					    BEGIN(RemoveSpecialCComment);
					  }
					  else
					  {
					    // check is to prevent getting stuck in skipping C++ comments
					    if (YY_START != SkipCxxComment)
					    {
  					      g_lastCContext = YY_START ;
					    }
					    startFontClass("comment");
					    codifyLines(yytext);
					    BEGIN(SkipComment);
  					  }
  					}
	YY_BREAK
case 145:
YY_RULE_SETUP
#line 2649 "code.l"
{ // remove one-line group marker
  					  if (Config_getBool("STRIP_CODE_COMMENTS"))
					  {
					    g_yyLineNr++;
					    endCodeLine();
					    if (g_yyLineNr<g_inputLines) 
					    {
					      startCodeLine();
					    }
					  }
					  else
					  {
					    startFontClass("comment");
					    codifyLines(yytext);
					    endFontClass();
					  }
  					}
	YY_BREAK
case 146:
YY_RULE_SETUP
#line 2666 "code.l"
{ // remove multi-line group marker
					  if (Config_getBool("STRIP_CODE_COMMENTS"))
					  {
					    g_lastSpecialCContext = YY_START;
					    BEGIN(RemoveSpecialCComment);
					  }
					  else
					  {
					    // check is to prevent getting stuck in skipping C++ comments
					    if (YY_START != SkipCxxComment)
					    {
  					      g_lastCContext = YY_START ;
					    }
					    startFontClass("comment");
					    g_code->codify(yytext);
					    BEGIN(SkipComment);
 					  }
  					}
	YY_BREAK
case 147:
YY_RULE_SETUP
#line 2684 "code.l"
{ // remove special one-line comment
  					  if (Config_getBool("STRIP_CODE_COMMENTS"))
					  {
					    g_yyLineNr++;
					    endCodeLine();
					    if (g_yyLineNr<g_inputLines) 
					    {
					      startCodeLine();
					    }
					  }
					  else
					  {
					    startFontClass("comment");
					    codifyLines(yytext);
					    endFontClass();
					  }
  					}
	YY_BREAK
case 148:
YY_RULE_SETUP
#line 2701 "code.l"
{ // strip special one-line comment
                                          if (YY_START==SkipComment) REJECT;
  					  if (Config_getBool("STRIP_CODE_COMMENTS"))
					  {
					    char c[2]; c[0]='\n'; c[1]=0;
					    codifyLines(c);
					  }
					  else
					  {
					    startFontClass("comment");
					    codifyLines(yytext);
					    endFontClass();
					  }
  					}
	YY_BREAK
case 149:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2715 "code.l"
{
					  if (Config_getBool("STRIP_CODE_COMMENTS"))
  					  {
					    g_lastSpecialCContext = YY_START;
					    g_yyLineNr++;
					    BEGIN(RemoveSpecialCComment);
					  }
					  else
					  {
					    // check is to prevent getting stuck in skipping C++ comments
					    if (YY_START != SkipCxxComment)
					    {
  					      g_lastCContext = YY_START ;
					    }
					    startFontClass("comment");
					    codifyLines(yytext);
					    BEGIN(SkipComment);
  					  }
					}
	YY_BREAK
case 150:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2734 "code.l"
{ // special C comment block at a new line
					  if (Config_getBool("STRIP_CODE_COMMENTS"))
					  {
					    g_lastSpecialCContext = YY_START;
					    BEGIN(RemoveSpecialCComment);
					  }
					  else
					  {
					    // check is to prevent getting stuck in skipping C++ comments
					    if (YY_START != SkipCxxComment)
					    {
  					      g_lastCContext = YY_START ;
					    }
					    startFontClass("comment");
					    g_code->codify(yytext);
					    BEGIN(SkipComment);
 					  }
					}
	YY_BREAK
case 151:
*yy_cp = yy_hold_char; /* undo effects of setting up yytext */
yy_c_buf_p = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2752 "code.l"
{ // special C comment block half way a line
					  if (Config_getBool("STRIP_CODE_COMMENTS"))
					  {
					    g_lastSpecialCContext = YY_START;
					    BEGIN(RemoveSpecialCComment);
					  }
					  else
					  {
					    // check is to prevent getting stuck in skipping C++ comments
					    if (YY_START != SkipCxxComment)
					    {
  					      g_lastCContext = YY_START ;
					    }
					    startFontClass("comment");
					    g_code->codify(yytext);
					    BEGIN(SkipComment);
					  }
					}
	YY_BREAK
case 152:
YY_RULE_SETUP
#line 2770 "code.l"
{ if (!Config_getBool("STRIP_CODE_COMMENTS"))
  					  {
					    startFontClass("comment");
					    g_code->codify(yytext);
					    endFontClass();
					  }
					}
	YY_BREAK
case 153:
YY_RULE_SETUP
#line 2777 "code.l"
{ 
					  startFontClass("comment");
  					  g_code->codify(yytext);
					  // check is to prevent getting stuck in skipping C++ comments
					  if (YY_START != SkipCxxComment)
					  {
  					    g_lastCContext = YY_START ;
					  }
					  BEGIN( SkipComment ) ;
					}
	YY_BREAK
case 154:
YY_RULE_SETUP
#line 2787 "code.l"
{ // C# verbatim string
					  startFontClass("stringliteral");
  					  g_code->codify(yytext);
					  g_lastVerbStringContext=YY_START;
					  BEGIN(SkipVerbString);
					}
	YY_BREAK
case 155:
YY_RULE_SETUP
#line 2793 "code.l"
{ 
  					  startFontClass("comment");
  					  g_code->codify(yytext);
  					  g_lastCContext = YY_START ;
					  BEGIN( SkipCxxComment ) ;
					}
	YY_BREAK
case 156:
YY_RULE_SETUP
#line 2799 "code.l"
{
  					  g_code->codify(yytext);
					  g_theCallContext.pushScope();
  					}
	YY_BREAK
case 157:
YY_RULE_SETUP
#line 2803 "code.l"
{
  					  g_code->codify(yytext);
					  g_theCallContext.popScope();
  					}
	YY_BREAK
case 158:
YY_RULE_SETUP
#line 2807 "code.l"
{
  					  codifyLines(yytext); 
  					}
	YY_BREAK
case 159:
YY_RULE_SETUP
#line 2810 "code.l"
{
  					  g_code->codify(yytext);
					}
	YY_BREAK
/*
<*>([ \t\n]*"\n"){2,}			{ // combine multiple blank lines
  					  //QCString sepLine=yytext;
  					  //g_code->codify("\n\n");
  					  //g_yyLineNr+=sepLine.contains('\n'); 
  					  //char sepLine[3]="\n\n";
  					  codifyLines(yytext);
					}
  */
case 160:
YY_RULE_SETUP
#line 2823 "code.l"
ECHO;
	YY_BREAK
			case YY_STATE_EOF(INITIAL):
			case YY_STATE_EOF(SkipString):
			case YY_STATE_EOF(SkipVerbString):
			case YY_STATE_EOF(SkipCPP):
			case YY_STATE_EOF(SkipComment):
			case YY_STATE_EOF(SkipCxxComment):
			case YY_STATE_EOF(RemoveSpecialCComment):
			case YY_STATE_EOF(StripSpecialCComment):
			case YY_STATE_EOF(Body):
			case YY_STATE_EOF(FuncCall):
			case YY_STATE_EOF(MemberCall):
			case YY_STATE_EOF(MemberCall2):
			case YY_STATE_EOF(SkipInits):
			case YY_STATE_EOF(ClassName):
			case YY_STATE_EOF(PackageName):
			case YY_STATE_EOF(ClassVar):
			case YY_STATE_EOF(Bases):
			case YY_STATE_EOF(SkipSharp):
			case YY_STATE_EOF(ReadInclude):
			case YY_STATE_EOF(TemplDecl):
			case YY_STATE_EOF(CallEnd):
			case YY_STATE_EOF(ObjCMethod):
			case YY_STATE_EOF(ObjCParams):
			case YY_STATE_EOF(ObjCParamType):
			case YY_STATE_EOF(ObjCCall):
			case YY_STATE_EOF(ObjCMName):
			case YY_STATE_EOF(ObjCSkipStr):
			case YY_STATE_EOF(OldStyleArgs):
				yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between yy_current_buffer and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yy_n_chars = yy_current_buffer->yy_n_chars;
			yy_current_buffer->yy_input_file = yyin;
			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state();

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer() )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yy_did_buffer_switch_on_eof = 0;

				if ( yywrap() )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yy_c_buf_p =
					yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yy_c_buf_p =
				&yy_current_buffer->yy_ch_buf[yy_n_chars];

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */


/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */

static int yy_get_next_buffer()
	{
	register char *dest = yy_current_buffer->yy_ch_buf;
	register char *source = yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( yy_current_buffer->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		yy_current_buffer->yy_n_chars = yy_n_chars = 0;

	else
		{
		int num_to_read =
			yy_current_buffer->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */
#ifdef YY_USES_REJECT
			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
#else

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = yy_current_buffer;

			int yy_c_buf_p_offset =
				(int) (yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yy_flex_realloc( (void *) b->yy_ch_buf,
							 b->yy_buf_size + 2 );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = yy_current_buffer->yy_buf_size -
						number_to_move - 1;
#endif
			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
			yy_n_chars, num_to_read );

		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	if ( yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			yy_current_buffer->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	yy_n_chars += number_to_move;
	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];

	return ret_val;
	}


/* yy_get_previous_state - get the state just before the EOB char was reached */

static yy_state_type yy_get_previous_state()
	{
	register yy_state_type yy_current_state;
	register char *yy_cp;

	yy_current_state = yy_start;
	yy_current_state += YY_AT_BOL();
	yy_state_ptr = yy_state_buf;
	*yy_state_ptr++ = yy_current_state;

	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
		{
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 2182 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		*yy_state_ptr++ = yy_current_state;
		}

	return yy_current_state;
	}


/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */

#ifdef YY_USE_PROTOS
static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
#else
static yy_state_type yy_try_NUL_trans( yy_current_state )
yy_state_type yy_current_state;
#endif
	{
	register int yy_is_jam;

	register YY_CHAR yy_c = 1;
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 2182 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 2181);
	if ( ! yy_is_jam )
		*yy_state_ptr++ = yy_current_state;

	return yy_is_jam ? 0 : yy_current_state;
	}


#ifndef YY_NO_UNPUT
#ifdef YY_USE_PROTOS
static void yyunput( int c, register char *yy_bp )
#else
static void yyunput( c, yy_bp )
int c;
register char *yy_bp;
#endif
	{
	register char *yy_cp = yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yy_hold_char;

	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yy_n_chars + 2;
		register char *dest = &yy_current_buffer->yy_ch_buf[
					yy_current_buffer->yy_buf_size + 2];
		register char *source =
				&yy_current_buffer->yy_ch_buf[number_to_move];

		while ( source > yy_current_buffer->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		yy_current_buffer->yy_n_chars =
			yy_n_chars = yy_current_buffer->yy_buf_size;

		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;


	yytext_ptr = yy_bp;
	yy_hold_char = *yy_cp;
	yy_c_buf_p = yy_cp;
	}
#endif	/* ifndef YY_NO_UNPUT */


#ifdef __cplusplus
static int yyinput()
#else
static int input()
#endif
	{
	int c;

	*yy_c_buf_p = yy_hold_char;

	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			/* This was really a NUL. */
			*yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yy_c_buf_p - yytext_ptr;
			++yy_c_buf_p;

			switch ( yy_get_next_buffer() )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/* fall through */

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap() )
						return EOF;

					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yy_c_buf_p = yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
	*yy_c_buf_p = '\0';	/* preserve yytext */
	yy_hold_char = *++yy_c_buf_p;

	yy_current_buffer->yy_at_bol = (c == '\n');

	return c;
	}


#ifdef YY_USE_PROTOS
void yyrestart( FILE *input_file )
#else
void yyrestart( input_file )
FILE *input_file;
#endif
	{
	if ( ! yy_current_buffer )
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );

	yy_init_buffer( yy_current_buffer, input_file );
	yy_load_buffer_state();
	}


#ifdef YY_USE_PROTOS
void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
#else
void yy_switch_to_buffer( new_buffer )
YY_BUFFER_STATE new_buffer;
#endif
	{
	if ( yy_current_buffer == new_buffer )
		return;

	if ( yy_current_buffer )
		{
		/* Flush out information for old buffer. */
		*yy_c_buf_p = yy_hold_char;
		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	yy_current_buffer = new_buffer;
	yy_load_buffer_state();

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yy_did_buffer_switch_on_eof = 1;
	}


#ifdef YY_USE_PROTOS
void yy_load_buffer_state( void )
#else
void yy_load_buffer_state()
#endif
	{
	yy_n_chars = yy_current_buffer->yy_n_chars;
	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
	yyin = yy_current_buffer->yy_input_file;
	yy_hold_char = *yy_c_buf_p;
	}


#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
#else
YY_BUFFER_STATE yy_create_buffer( file, size )
FILE *file;
int size;
#endif
	{
	YY_BUFFER_STATE b;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
	}


#ifdef YY_USE_PROTOS
void yy_delete_buffer( YY_BUFFER_STATE b )
#else
void yy_delete_buffer( b )
YY_BUFFER_STATE b;
#endif
	{
	if ( ! b )
		return;

	if ( b == yy_current_buffer )
		yy_current_buffer = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yy_flex_free( (void *) b->yy_ch_buf );

	yy_flex_free( (void *) b );
	}


#ifndef YY_ALWAYS_INTERACTIVE
#ifndef YY_NEVER_INTERACTIVE
extern int isatty YY_PROTO(( int ));
#endif
#endif

#ifdef YY_USE_PROTOS
void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
#else
void yy_init_buffer( b, file )
YY_BUFFER_STATE b;
FILE *file;
#endif


	{
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

#if YY_ALWAYS_INTERACTIVE
	b->yy_is_interactive = 1;
#else
#if YY_NEVER_INTERACTIVE
	b->yy_is_interactive = 0;
#else
	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
#endif
#endif
	}


#ifdef YY_USE_PROTOS
void yy_flush_buffer( YY_BUFFER_STATE b )
#else
void yy_flush_buffer( b )
YY_BUFFER_STATE b;
#endif

	{
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == yy_current_buffer )
		yy_load_buffer_state();
	}


#ifndef YY_NO_SCAN_BUFFER
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
#else
YY_BUFFER_STATE yy_scan_buffer( base, size )
char *base;
yy_size_t size;
#endif
	{
	YY_BUFFER_STATE b;

	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b );

	return b;
	}
#endif


#ifndef YY_NO_SCAN_STRING
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
#else
YY_BUFFER_STATE yy_scan_string( yy_str )
yyconst char *yy_str;
#endif
	{
	int len;
	for ( len = 0; yy_str[len]; ++len )
		;

	return yy_scan_bytes( yy_str, len );
	}
#endif


#ifndef YY_NO_SCAN_BYTES
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
#else
YY_BUFFER_STATE yy_scan_bytes( bytes, len )
yyconst char *bytes;
int len;
#endif
	{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;

	/* Get memory for full buffer, including space for trailing EOB's. */
	n = len + 2;
	buf = (char *) yy_flex_alloc( n );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < len; ++i )
		buf[i] = bytes[i];

	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
	}
#endif


#ifndef YY_NO_PUSH_STATE
#ifdef YY_USE_PROTOS
static void yy_push_state( int new_state )
#else
static void yy_push_state( new_state )
int new_state;
#endif
	{
	if ( yy_start_stack_ptr >= yy_start_stack_depth )
		{
		yy_size_t new_size;

		yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yy_start_stack_depth * sizeof( int );

		if ( ! yy_start_stack )
			yy_start_stack = (int *) yy_flex_alloc( new_size );

		else
			yy_start_stack = (int *) yy_flex_realloc(
					(void *) yy_start_stack, new_size );

		if ( ! yy_start_stack )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	yy_start_stack[yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
	}
#endif


#ifndef YY_NO_POP_STATE
static void yy_pop_state()
	{
	if ( --yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yy_start_stack[yy_start_stack_ptr]);
	}
#endif


#ifndef YY_NO_TOP_STATE
static int yy_top_state()
	{
	return yy_start_stack[yy_start_stack_ptr - 1];
	}
#endif

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

#ifdef YY_USE_PROTOS
static void yy_fatal_error( yyconst char msg[] )
#else
static void yy_fatal_error( msg )
char msg[];
#endif
	{
	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
	}



/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		yytext[yyleng] = yy_hold_char; \
		yy_c_buf_p = yytext + n; \
		yy_hold_char = *yy_c_buf_p; \
		*yy_c_buf_p = '\0'; \
		yyleng = n; \
		} \
	while ( 0 )


/* Internal utility routines. */

#ifndef yytext_ptr
#ifdef YY_USE_PROTOS
static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
#else
static void yy_flex_strncpy( s1, s2, n )
char *s1;
yyconst char *s2;
int n;
#endif
	{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
	}
#endif

#ifdef YY_NEED_STRLEN
#ifdef YY_USE_PROTOS
static int yy_flex_strlen( yyconst char *s )
#else
static int yy_flex_strlen( s )
yyconst char *s;
#endif
	{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
	}
#endif


#ifdef YY_USE_PROTOS
static void *yy_flex_alloc( yy_size_t size )
#else
static void *yy_flex_alloc( size )
yy_size_t size;
#endif
	{
	return (void *) malloc( size );
	}

#ifdef YY_USE_PROTOS
static void *yy_flex_realloc( void *ptr, yy_size_t size )
#else
static void *yy_flex_realloc( ptr, size )
void *ptr;
yy_size_t size;
#endif
	{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
	}

#ifdef YY_USE_PROTOS
static void yy_flex_free( void *ptr )
#else
static void yy_flex_free( ptr )
void *ptr;
#endif
	{
	free( ptr );
	}

#if YY_MAIN
int main()
	{
	yylex();
	return 0;
	}
#endif
#line 2823 "code.l"


/*@ ----------------------------------------------------------------------------
 */

static void saveObjCContext()
{
  if (g_currentCtx)
  {
    g_currentCtx->format+=QCString().sprintf("$c%d",g_currentCtxId);
    if (g_braceCount==0 && YY_START==ObjCCall)
    {
      g_currentCtx->objectTypeOrName=g_currentCtx->format.mid(1);
      //printf("new type=%s\n",g_currentCtx->objectTypeOrName.data());
    }
    g_contextStack.push(g_currentCtx);
  }
  else
  {
    //printf("Trying to save NULL context!\n");
  }
  ObjCCallCtx *newCtx = new ObjCCallCtx;
  newCtx->id = g_currentCtxId;
  newCtx->lexState = YY_START;
  newCtx->braceCount = g_braceCount;
  newCtx->objectType = 0;
  newCtx->objectVar = 0;
  newCtx->method = 0;
  //printf("save state=%d\n",YY_START);
  g_contextDict.insert(g_currentCtxId,newCtx);
  g_currentCtx = newCtx;
  g_braceCount = 0;
  g_currentCtxId++;
}

static void restoreObjCContext()
{
  //printf("restore state=%d->%d\n",YY_START,g_currentCtx->lexState);
  BEGIN(g_currentCtx->lexState);
  g_braceCount = g_currentCtx->braceCount;
  if (!g_contextStack.isEmpty())
  {
    g_currentCtx = g_contextStack.pop();
  }
  else
  {
    g_currentCtx = 0;
    //printf("Trying to pop context while g_contextStack is empty!\n");
  }
}

void initParseCodeContext()
{
  g_theVarContext.clear();
  g_codeClassSDict.setAutoDelete(TRUE);
  g_codeClassSDict.clear();
  g_curClassBases.clear();
  g_anchorCount = 0;
}

void parseCode(BaseCodeDocInterface &od,const char *className,const QCString &s, 
                  bool exBlock, const char *exName,FileDef *fd,
		  int startLine,int endLine,bool inlineFragment)
{
  if (s.isEmpty()) return;
  g_code = &od;
  g_inputString   = s;
  g_inputPosition = 0;
  g_currentFontClass = 0;
  g_needsTermination = FALSE;
  if (endLine!=-1)
    g_inputLines  = endLine+1;
  else
    g_inputLines  = countLines();

  if (startLine!=-1)
    g_yyLineNr    = startLine;
  else
    g_yyLineNr    = 1;

  g_curlyCount    = 0;
  g_bodyCurlyCount    = 0;
  g_bracketCount  = 0;
  g_sharpCount    = 0;
  g_insideTemplate = FALSE;
  g_theCallContext.clear();
  g_scopeStack.clear();
  g_classScope    = className;
  g_exampleBlock  = exBlock; 
  g_exampleName   = exName;
  g_sourceFileDef = fd;
  if (fd) 
  {
    setCurrentDoc(fd->name(),fd->getSourceFileBase());
    g_insideObjC = fd->name().lower().right(2)==".m" || 
                   fd->name().lower().right(3)==".mm"; 
  }
  g_currentDefinition = 0;
  g_currentMemberDef = 0;
  g_searchingForBody = FALSE;
  g_insideBody = FALSE;
  g_bracketCount = 0;
  if (!g_exampleName.isEmpty())
  {
    g_exampleFile = convertNameToFile(g_exampleName+"-example");
  }
  g_includeCodeFragment = inlineFragment;
  startCodeLine();
  g_type.resize(0);
  g_name.resize(0);
  g_args.resize(0);
  g_parmName.resize(0);
  g_parmType.resize(0);
  codeYYrestart( codeYYin );
  BEGIN( Body );
  codeYYlex();
  if (g_needsTermination)
  {
    endFontClass();
    g_code->endCodeLine();
  }
  return;
}

#if !defined(YY_FLEX_SUBMINOR_VERSION) 
extern "C" { // some bogus code to keep the compiler happy
  void codeYYdummy() { yy_flex_realloc(0,0); } 
}
#else
#error "You seem to be using a version of flex newer than 2.5.4. These are currently incompatible with 2.5.4, and do NOT work with doxygen! Please use version 2.5.4 or expect things to be parsed wrongly! A bug report has been submitted (#732132)."
#endif

